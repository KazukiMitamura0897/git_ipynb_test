{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/nbdime-jupyterlab/style/index.css","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/collapsible.css","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/dragpanel.css","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/common.css","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/diff.css","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/merge.css","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/variables.css","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/upstreaming/flexpanel.css","webpack://@jupyterlab/application-top/./node_modules/json-stable-stringify/index.js","webpack://@jupyterlab/application-top/./node_modules/jsonify/index.js","webpack://@jupyterlab/application-top/./node_modules/jsonify/lib/parse.js","webpack://@jupyterlab/application-top/./node_modules/jsonify/lib/stringify.js","webpack://@jupyterlab/application-top/./node_modules/nbdime-jupyterlab/lib/actions.js","webpack://@jupyterlab/application-top/./node_modules/nbdime-jupyterlab/lib/index.js","webpack://@jupyterlab/application-top/./node_modules/nbdime-jupyterlab/lib/plugin.js","webpack://@jupyterlab/application-top/./node_modules/nbdime-jupyterlab/lib/utils.js","webpack://@jupyterlab/application-top/./node_modules/nbdime-jupyterlab/lib/widget.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/chunking/decisionchunking.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/chunking/diffchunking.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/chunking/index.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/collapsiblepanel.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/editor.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/exceptions.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/mergeview.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/util.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/diffentries.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/cell.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/common.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/immutable.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/index.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/notebook.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/output.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/renderable.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/model/string.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/range.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/util.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/widget/cell.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/widget/common.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/widget/index.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/widget/metadata.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/widget/notebook.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/widget/output.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/diff/widget/renderable.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/merge/decisions.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/merge/model/cell.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/merge/model/common.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/merge/model/index.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/merge/model/metadata.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/merge/model/notebook.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/patch/common.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/patch/generic.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/patch/index.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/patch/stringified.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/request/index.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/upstreaming/flexlayout.js","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/upstreaming/flexpanel.js","webpack://@jupyterlab/application-top/./node_modules/nbdime-jupyterlab/style/index.css?1de1","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/collapsible.css?611a","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/common/dragpanel.css?2170","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/common.css?9c1c","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/diff.css?039a","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/merge.css?24e3","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/styles/variables.css?60c7","webpack://@jupyterlab/application-top/./node_modules/nbdime/lib/upstreaming/flexpanel.css?051f"],"names":["___CSS_LOADER_EXPORT___","push","module","id","json","JSON","isArray","Array","x","toString","call","objectKeys","Object","keys","obj","has","prototype","hasOwnProperty","key","exports","opts","cmp","space","join","cycles","replacer","value","f","node","a","b","aobj","bobj","seen","stringify","parent","level","indent","colonSeparator","toJSON","undefined","out","i","length","item","indexOf","TypeError","sort","keyValue","splice","parse","at","ch","escapee","n","r","t","text","error","m","name","message","next","c","charAt","number","num","str","Number","isFinite","string","hex","uffff","parseInt","String","fromCharCode","white","word","array","arr","object","source","reviver","result","walk","holder","k","v","val","escapable","gap","meta","rep","quote","lastIndex","test","replace","charCodeAt","slice","mind","partial","apply","Error","defineProperty","isNbInGit","diffNotebookGit","diffNotebookCheckpoint","diffNotebook","coreutils_1","services_1","widget_1","utils_1","args","base","remote","widget","NbdimeWidget","title","label","caption","path","rendermime","hideUnchanged","nb_dir","PathExt","dirname","basename","baseLabel","iconClass","request","method","body","settings","ServerConnection","makeSettings","makeRequest","URLExt","urlRStrip","baseUrl","then","response","ok","Promise","reject","data","plugin_1","default","__awaiter","this","thisArg","_arguments","P","generator","adopt","resolve","fulfilled","step","e","rejected","done","CommandIDs","NBDiffExtension","apputils_1","rendermime_1","notebook_1","settingregistry_1","algorithm_1","disposable_1","actions_1","pluginId","serverMissingMsg","INITIAL_NETWORK_RETRY","constructor","commands","createNew","nb","context","buttons","insertionPoint","find","toolbar","children","tbb","index","hasClass","button","CommandToolbarButton","addClass","insertItem","addItem","DisposableDelegate","btn","dispose","addCommands","app","tracker","shell","hasAPI","hasWidget","currentWidget","baseEnabled","lut_known_git","networkRetry","hasGitNotebook","dir","known_git","inGitPromise","inGit","notifyCommandChanged","catch","reason","status","setTimeout","erroredGen","get","composite","changed","connect","addCommand","execute","isEnabled","icon","iconLabel","current","add","activateById","nbDiffProvider","requires","INotebookTracker","IRenderMimeRegistry","ISettingRegistry","activate","activateWidgetExtension","autoStart","settingsRegistry","docRegistry","extension","addWidgetExtension","load","currentChanged","size","target","widgets_1","model_1","common_1","request_1","NBDIME_CLASS","ROOT_CLASS","HIDE_UNCHANGED_CLASS","Panel","options","super","header","Private","diffHeader","addWidget","scroller","tabIndex","hideUnchangedChk","getElementsByClassName","checked","onchange","toggleShowUnchanged","requestApiJson","onData","bind","onError","closable","onActivateRequest","msg","focus","isDisposed","diff","nbdModel","NotebookDiffModel","nbdWidget","NotebookDiffWidget","work","init","markUnchangedRanges","Widget","innerHTML","remoteLabel","document","createElement","className","innerText","root","show","hiding","removeClass","update","getChunkElement","cellElement","parentElement","chunkCandidate","classList","contains","CHUNK_PANEL_CLASS","querySelectorAll","CELLDIFF_CLASS","rangeStart","child","UNCHANGED_DIFF_CLASS","N","setAttribute","tag","querySelector","lastVisible","splitMergeDecisionsOnChunks","diffentries_1","decisions_1","util_1","anyDiffs","diffs","d","hasEntries","getSectionBoundaries","boundaries","j","op","filter","unique","splitDiffsOnBoundaries","newdiffs","valueIn","opRemoveRange","makeChunks","iDiffs","map","valueOf","chunks","subDiffs","dis","baseStart","baseEnd","makeMergeChunks","newBoundaries","concat","splitDiffs","splitDecisionByChunks","decision","cd","customDiff","localPath","pushPath","MergeDecision","absolutePath","action","conflict","decisions","md","buildDiffs","labelSource","lineToNormalChunks","LineChunker","Chunker","Chunk","baseFrom","baseTo","remoteFrom","remoteTo","sources","inEdit","line","inOrig","_currentGhost","editOffset","_getCurrent","_overlapChunk","chunk","range","isAddition","from","addDiff","linediff","to","endsOnNewline","firstLineNew","startOffset","chunkStartLine","endOffset","Math","max","startRemote","startBase","addGhost","offset","startEdit","startOrig","fromLine","lineChunks","ret","shallowCopy","__createBinding","create","o","k2","enumerable","__exportStar","p","CollapsiblePanel","COLLAPSIBLE_CLASS","COLLAPSIBLE_HEADER","COLLAPSIBLE_HEADER_ICON","COLLAPSIBLE_HEADER_ICON_OPEN","COLLAPSIBLE_HEADER_ICON_CLOSED","COLLAPSIBLE_SLIDER","COLLAPSIBLE_OPEN","COLLAPSIBLE_CLOSED","COLLAPSIBLE_CONTAINER","inner","headerTitle","collapsed","createHeader","onclick","toggleCollapsed","container","slider","appendChild","remove","EditorWidget","codeeditor_1","codemirror_1","CodeEditorWrapper","readOnly","extraKeys","Tab","model","CodeEditor","Model","factory","CodeMirrorEditorFactory","newInlineEditor","staticLoaded","editors","cm","editor","doc","onResize","width","height","setSize","getOption","NotifyUserError","severity","setPrototypeOf","stack","MergeView","DiffView","createNbdimeMergeView","EventDirection","DIFF_OP","CodeMirror","chunking_1","editor_1","exceptions_1","PICKER_SYMBOL","CONFLICT_MARKER","GUTTER_PICKER_CLASS","GUTTER_CONFLICT_CLASS","CHUNK_CONFLICT_CLASS","leftClasses","start","end","insert","del","gutter","rightClasses","mergeClassPrefix","local","merged","orig","collapseIdentical","mergeview","left","right","merge","mimetype","ownWidget","mimeType","type","updateCallback","collapsedRanges","classes","ownValue","copyObj","showDifferences","baseEditor","state","diffViews","ownEditor","on","onGutterClick","getLineChunks","dealigned","forceUpdate","registerUpdate","setScrollLock","registerScroll","setShowDifferences","syncModel","modelInvalid","edit","updatedLineChunks","updatedChunks","getValue","cursor","getDoc","getCursor","newLines","splitLines","firstLine","last","lastLine","cumulativeOffset","updatedEnd","baseLine","getMatchingEditLine","replaceRange","Pos","setCursor","buildGap","lock","lockButton","elt","lockWrap","self","lockScroll","syncScroll","OUTGOING","editMarkers","origMarkers","debounceChange","updating","updatingFast","mode","clearMergeMarks","clearMarks","updateMarks","additions","DIFF_INSERT","deletions","DIFF_DELETE","checkSync","setDealign","fast","upd","dv","set","clearTimeout","window","change","_cm","DecisionStringDiffModel","invalid","instance","clickEvent","li","lineInfo","gutterMarkers","ss","s","setGutterMarker","invalidate","INCOMING","other","scrollSetBy","scrollPosition","getScrollInfo","scrollTicking","sInfo","top","requestAnimationFrame","scrollTo","markers","markChunk","si","addLineClass","picker","localDiff","remoteDiff","conflictMarker","cls","operation","highlightChars","postfix","isTextMarker","marker","mark","clear","removeLineClass","bgClass","ranges","origCls","markText","getMatchingEditLineLC","toMatch","editLine","findAlignedLines","dvs","linesToAlign","ignored","others","lines","prev","align","alignLines","aligners","maxOffset","off","heightAtLine","padAbove","above","style","minWidth","addLineWidget","initialized","panes","main","lineNumbers","dvOptions","gutters","lineWrapping","showBase","display","leftWidget","alignViews","rightWidget","mergeWidget","unchanged","added","deleted","collapseIdenticalStretches","force","scroll","ln","curOp","fn","getMergedValue","collapseSingle","inclusiveLeft","inclusiveRight","replacedWith","clearOnEnter","collapseStretch","marks","unclearNearChunks","margin","l","pos","mv","onCollapse","content","cssText","createTextNode","findPrevDiff","isOrig","findNextDiff","DiffDirection","goNearbyDiff","found","views","Previous","Pass","goNextDiff","Next","goPrevDiff","buildSelect","stableSort","intersection","accumulateLengths","repeatString","sortByKey","isPrefixArray","findSharedPrefix","arraysEqual","deepCopy","multiline","match","original","clone","getPrototypeOf","Function","pDesc","getOwnPropertyDescriptor","min","y","count","pattern","reduce","ia","compare","sorters","prop","select","option","opt","validateObjectOp","validateSequenceOp","opPatch","opAddRange","opRemove","opAdd","opReplace","valuelist","entry","console","info","isNaN","RangeError","skip","createDeletedCellDiffModel","createAddedCellDiffModel","createUnchangedCellDiffModel","createPatchedCellDiffModel","CellDiffModel","nbformat","string_1","output_1","immutable_1","metadata","outputs","executionCount","cellType","collapsible","collapsibleHeader","startCollapsed","getChunkedOutputs","currentChunk","nbMimetype","subDiff","getSubDiffByKey","createPatchStringDiffModel","createDirectStringDiffModel","setMimetypeFromCellType","isCode","outputsBase","outputsDiff","makeOutputModels","execBase","execution_count","execDiff","getDiffEntryByKey","createImmutableModel","cell_type","ImmutableDiffModel","cell_1","metaDiff","language_info","cells","chunkedCells","take","previousChunkIndex","cell","ei","OutputDiffModel","renderable_1","TEXT_MIMETYPES","RenderableDiffModel","hasMimeType","isStream","isError","isExecuteResult","isDisplayData","innerMimeType","output_type","models","consumed","len","signaling_1","patch_1","trustedChanged","Signal","patch","getMemberByPath","tail","baseCopy","JSONExt","remoteCopy","_trusted","emit","StringDiffModel","range_1","assert","raw2Pos","iterateDiffs","DiffIter","chunker","hintTakeDeletion","ra","rd","SyncedDiffIter","currentOffset","iterators","values","offsets","it","offsetA","offsetB","lineA","lineB","currentModel","baseStr","stringifyAndBlankNull","patchStringified","remoteStr","DiffRangeRaw","isRaw","format","DiffRangePos","findLineNumber","nlPos","lineNo","some","el","raws","adIdx","lineStartIdx","startsOnNewLine","chunkFirstLine","flattenStringDiff","stripSource","JSON_INDENT","validateStringDiff","lineToChar","flattened","lineOffset","pdiff","idx","CellDiffWidget","OUTPUTS_DIFF_CLASS","flexpanel_1","collapsiblepanel_1","mergeview_1","PROMPT_CLASS","EXECUTIONCOUNT_ROW_CLASS","SOURCE_ROW_CLASS","METADATA_ROW_CLASS","OUTPUTS_ROW_CLASS","_model","_rendermime","CURR_DIFF_CLASSES","DIFF_CLASSES","ADDED_DIFF_CLASS","DELETED_DIFF_CLASS","TWOWAY_DIFF_CLASS","sourceView","createView","insertWidget","createPrompts","metadataView","outputsWidget","chunkPanel","addedPanel","ADDED_CHUNK_PANEL_CLASS","removedPanel","REMOVED_CHUNK_PANEL_CLASS","collapser","prompts","FlexPanel","direction","w","setGrow","editorClasses","view","mimeModel","MimeModel","preferredMimeType","renderer","createRenderer","renderModel","OutputPanel","ADD_DEL_LABEL_CLASS","MetadataDiffWidget","ROOT_METADATA_CLASS","metadata_1","NBDIFF_CLASS","RenderableOutputView","OUTPUT_PANEL_CLASS","RENDERED_OUTPUT_CLASS","UNTRUSTED_CLASS","HOVER_MENU_CLASS","TRUST_BUTTON_CLASS","SOURCE_BUTTON_CLASS","DATA_IS_BASE64_CLASS","MIMETYPE_SELECT_CLASS","sanitizable","_base64","isBase64","minLength","parentModel","_mimetype","forceText","sender","trusted","isTrustSignificant","addSpacer","textContent","delSpacer","initContainer","createHoverMenu","replaceView","old","widgets","renderable","canRender","rov","selectedMimetype","createOutputTextView","mimeTypes","mt","stringModel","aValue","menu","btnSource","sourceText","ev","updateView","btnTrust","mimetypes","output","contents","bundle","OutputModel","getData","cboMimetype","selectedIndex","mtLabel","toTest","untrustedModel","modelMimeTypes","rendererMimeTypes","toArray","candidates","getFactory","safe","RenderableDiffView","editorClass","createSubView","panel","RenderedOutputWidget","each","layout","bdata","rdata","PanelLayout","ci","filterDecisions","pushPatchDecision","applyDecisions","resolveCommonPaths","popPath","addSorted","decisionSortKey","decisionPathSortKey","util_2","validateAction","valueOrDefault","defaultValue","similarInsert","_path","common_path","local_diff","remote_diff","custom_diff","similar_insert","setValuesFrom","serialize","lvl","toAdd","firstKey","popInner","di","log","dj","retDiffs","prefix","reverse","popped","makeClearedValue","_resolvePathInObject","_combineDiffs","resolveAction","splitDiffStringPath","prevPath","lastKey","resolved","clearParent","spl","ad","_mergeTree","tree","sortedPaths","trunk","subdiffs","nextPath","newTrunk","pl","which","sub","strPath","matchDiff","dec","pop","ld","skipLevels","maxLength","CellMergeModel","createPatchedCellDecisionDiffModel","outputBase","outputDec","mergedDiff","cellDecs","mergeExecDiff","ObjectMergeModel","deleteCellChanged","_clearOutputs","clearOutputsChanged","onesided","_deleteCell","processDecisions","lo","ro","agreedSource","agreedMetadata","agreedOutputs","hasConflictsOn","decs","clearOutputConflicts","getExecutionCountDecision","deleteCell","nmd","src","_merged","warn","clearOutputs","applyCellLevelDecision","splitDec","subDecisions","splitPatch","subdec","newDecisions","_local","first","_remote","ops","localPatch","remotePatch","split","patchKey","_whitelist","er","onsesided","splitOnSourceChunks","createDiffModel","createMergedDiffModel","sourceModels","rawBase","_outdated","_sourceModels","_update","_additions","_deletions","iter","whitelist","_finalized","_finalizeDecisions","MetadataMergeModel","NotebookMergeModel","rawMergeDecisions","ctor","preprocessDecisions","buildCellList","metadataDecs","unsavedChanges","mergeDecisions","rmd","splitCellChunks","splitCellRemovals","splitCellInsertions","splitCellListPatch","cellDecisions","bc","insertOffset","insertion","offsetIdx","cds","cellInfo","isChunk","lmd","dl","dr","maxlen","subdl","subdr","makeSplitPart","newMd","newDiff","klStart","krStart","klEnd","krEnd","remLocal","rOp","pOp","pidx","correctType","eq","part","PatchObjectHelper","_diffLUT","diffKeys","_diffKeys","baseKeys","_objectKeys","isDiffKey","getDiffEntry","entriesAfterCurrentAddRem","_currentIsAddition","oppositeOp","_remainingKeys","shift","stringified_1","patchString","patchSequence","patchObject","patched","keysToCopy","stableStringify","indentFirst","_indent","stringifyPatch","patchStringifiedList","patchStringifiedObject","baseIndex","_offsetRanges","_adjustRangesByJSONEscapes","helper","keyString","_makeKeyString","isReplace","valr","valb","pd","difflen","levels","jsonString","simpleEscapes","surrogateUnicodes","unicodes","SIMPLE_ESCAPE_LENGTH","UNICODE_ESCAPE_LENGTH","SURROGATE_ESCAPE_LENGTH","indices","expansions","exec","exp","requestMerge","requestMergePromise","requestDiff","requestDiffPromise","requestApiJsonPromise","requestApi","requestApiPromise","handleError","url_1","statusText","apiPath","argument","url","onComplete","onFail","callback","FlexLayout","messaging_1","LEFT_TO_RIGHT_CLASS","RIGHT_TO_LEFT_CLASS","TOP_TO_BOTTOM_CLASS","BOTTOM_TO_TOP_CLASS","order","_wrap","_minimumSpacing","_justifyContent","_alignItems","_alignContent","_dirty","_direction","_stretchType","_evenSizes","minimumSpacing","clampSpacing","wrap","justifyContent","alignItems","alignContent","stretchType","evenSizes","toggleDirection","fit","flexWrap","flex","translateFlexString","isHorizontal","isVertical","attachWidget","ArrayExt","moveWidget","fromIndex","toIndex","move","detachWidget","removeAt","onAfterShow","onAfterAttach","onChildShown","onChildHidden","isVisible","onUpdateRequest","onFitRequest","isAttached","_fit","ancestor","MessageLoop","sendMessage","Msg","FitRequest","UpdateRequest","spacing","marginRight","marginBottom","basis","grow","shrink","flexBasis","flexGrow","flexShrink","getGrow","getShrink","setShrink","getSizeBasis","setSizeBasis","toggleClass","floor","flexlayout_1","FLEX_PANEL_CLASS","CHILD_CLASS","createLayout","onChildAdded","onChildRemoved","singleton"],"mappings":"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","file":"8116.fc5cecc95e237ba647c4.js?v=fc5cecc95e237ba647c4","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n.nbdime-Widget {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.nbdime-root {\\r\\n  padding: var(--jp-notebook-padding);\\r\\n  min-width: 50px;\\r\\n  min-height: 50px;\\r\\n  outline: none;\\r\\n  overflow: auto;\\r\\n  background: var(--jp-layout-color0);\\r\\n  color: var(--jp-ui-font-color0);\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.jp-ToolbarButtonComponent-icon.action-notebook-diff {\\r\\n  color: var(--jp-ui-font-color0);\\r\\n}\\r\\n\\r\\n.nbdime-toolbarButton .jp-ToolbarButtonComponent-label {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-PluginList-icon.nbdime-icon {\\r\\n  font-size: 16px;\\r\\n  vertical-align: text-bottom;\\r\\n}\\r\\n\\r\\n\\r\\n/* Header syling */\\r\\n\\r\\n.jp-fa-tabIcon {\\r\\n  padding-top: 6px;\\r\\n}\\r\\n\\r\\n.nbdime-Diff {\\r\\n  border-bottom: var(--jp-border-width) solid var(--jp-toolbar-border-color);\\r\\n  box-shadow: var(--jp-toolbar-box-shadow);\\r\\n  background: var(--jp-toolbar-background);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  flex: 0 0 auto;\\r\\n  padding: 2px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.nbdime-header-buttonrow > * {\\r\\n  padding-left: 8px;\\r\\n  padding-right: 8px;\\r\\n}\\r\\n\\r\\n.nbdime-Diff .nbdime-header-base {\\r\\n  display: inline-block;\\r\\n  width: calc(50% - 8px);\\r\\n  background-color: var(--jp-diff-deleted-color0);\\r\\n  padding: 0px 4px;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\n.nbdime-Diff .nbdime-header-remote {\\r\\n  display: inline-block;\\r\\n  width: calc(49% - 8px);\\r\\n  background-color: var(--jp-diff-added-color0);\\r\\n  padding: 0px 4px;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\n.nbdime-Diff .nbdime-header-local {\\r\\n  display: none;\\r\\n  width: calc(49% - 8px);\\r\\n  padding: 0px 4px;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/* Hiding unchanged cells if told to */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff.jp-Diff-unchanged {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/* Show a marker with the number of cells hidden before */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenBefore]::before,\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenBefore]::before {\\r\\n  content: attr(data-nbdime-NCellsHiddenBefore) \\\" unchanged cell(s) hidden\\\";\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  top: 0;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid var(--jp-layout-color3) 1px;\\r\\n  border-bottom: solid var(--jp-layout-color3) 1px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/* Show a marker with the number of cells hidden after (for hidden cells at end) */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenAfter]::after,\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenAfter]::after {\\r\\n  content: attr(data-nbdime-NCellsHiddenAfter) \\\" unchanged cell(s) hidden\\\";\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  bottom: 0;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid var(--jp-layout-color3) 1px;\\r\\n  border-bottom: solid var(--jp-layout-color3) 1px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenBefore],\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenBefore] {\\r\\n  padding-top: 40px;\\r\\n}\\r\\n\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenAfter],\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenAfter] {\\r\\n  padding-bottom: 40px;\\r\\n}\\r\\n\\r\\n/* Marker for when all cells are unchanged and hidden */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Notebook-diff[data-nbdime-AllCellsHidden]::after {\\r\\n  content: \\\"No changes, \\\" attr(data-nbdime-AllCellsHidden) \\\" unchanged cell(s) hidden\\\";\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid var(--jp-layout-color3) 1px;\\r\\n  border-bottom: solid var(--jp-layout-color3) 1px;\\r\\n  text-align: center;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime-jupyterlab/style/index.css\"],\"names\":[],\"mappings\":\";AACA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,mCAAmC;EACnC,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,cAAc;EACd,mCAAmC;EACnC,+BAA+B;EAC/B,cAAc;AAChB;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,2BAA2B;AAC7B;;;AAGA,kBAAkB;;AAElB;EACE,gBAAgB;AAClB;;AAEA;EACE,0EAA0E;EAC1E,wCAAwC;EACxC,wCAAwC;EACxC,+BAA+B;EAC/B,cAAc;EACd,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;EACrB,sBAAsB;EACtB,+CAA+C;EAC/C,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,sBAAsB;EACtB,6CAA6C;EAC7C,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,gBAAgB;EAChB,mBAAmB;AACrB;;;;AAIA,sCAAsC;AACtC;EACE,aAAa;AACf;;AAEA,yDAAyD;AACzD;;EAEE,yEAAyE;EACzE,kBAAkB;EAClB,WAAW;EACX,MAAM;EACN,yCAAyC;EACzC,6CAA6C;EAC7C,gDAAgD;EAChD,kBAAkB;AACpB;;AAEA,kFAAkF;AAClF;;EAEE,wEAAwE;EACxE,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,yCAAyC;EACzC,6CAA6C;EAC7C,gDAAgD;EAChD,kBAAkB;AACpB;;AAEA;;EAEE,iBAAiB;AACnB;;AAEA;;EAEE,oBAAoB;AACtB;;AAEA,uDAAuD;AACvD;EACE,oFAAoF;EACpF,cAAc;EACd,WAAW;EACX,yCAAyC;EACzC,6CAA6C;EAC7C,gDAAgD;EAChD,kBAAkB;AACpB\",\"sourcesContent\":[\"\\r\\n.nbdime-Widget {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.nbdime-root {\\r\\n  padding: var(--jp-notebook-padding);\\r\\n  min-width: 50px;\\r\\n  min-height: 50px;\\r\\n  outline: none;\\r\\n  overflow: auto;\\r\\n  background: var(--jp-layout-color0);\\r\\n  color: var(--jp-ui-font-color0);\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.jp-ToolbarButtonComponent-icon.action-notebook-diff {\\r\\n  color: var(--jp-ui-font-color0);\\r\\n}\\r\\n\\r\\n.nbdime-toolbarButton .jp-ToolbarButtonComponent-label {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-PluginList-icon.nbdime-icon {\\r\\n  font-size: 16px;\\r\\n  vertical-align: text-bottom;\\r\\n}\\r\\n\\r\\n\\r\\n/* Header syling */\\r\\n\\r\\n.jp-fa-tabIcon {\\r\\n  padding-top: 6px;\\r\\n}\\r\\n\\r\\n.nbdime-Diff {\\r\\n  border-bottom: var(--jp-border-width) solid var(--jp-toolbar-border-color);\\r\\n  box-shadow: var(--jp-toolbar-box-shadow);\\r\\n  background: var(--jp-toolbar-background);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  flex: 0 0 auto;\\r\\n  padding: 2px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.nbdime-header-buttonrow > * {\\r\\n  padding-left: 8px;\\r\\n  padding-right: 8px;\\r\\n}\\r\\n\\r\\n.nbdime-Diff .nbdime-header-base {\\r\\n  display: inline-block;\\r\\n  width: calc(50% - 8px);\\r\\n  background-color: var(--jp-diff-deleted-color0);\\r\\n  padding: 0px 4px;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\n.nbdime-Diff .nbdime-header-remote {\\r\\n  display: inline-block;\\r\\n  width: calc(49% - 8px);\\r\\n  background-color: var(--jp-diff-added-color0);\\r\\n  padding: 0px 4px;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\n.nbdime-Diff .nbdime-header-local {\\r\\n  display: none;\\r\\n  width: calc(49% - 8px);\\r\\n  padding: 0px 4px;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/* Hiding unchanged cells if told to */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff.jp-Diff-unchanged {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/* Show a marker with the number of cells hidden before */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenBefore]::before,\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenBefore]::before {\\r\\n  content: attr(data-nbdime-NCellsHiddenBefore) \\\" unchanged cell(s) hidden\\\";\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  top: 0;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid var(--jp-layout-color3) 1px;\\r\\n  border-bottom: solid var(--jp-layout-color3) 1px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/* Show a marker with the number of cells hidden after (for hidden cells at end) */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenAfter]::after,\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenAfter]::after {\\r\\n  content: attr(data-nbdime-NCellsHiddenAfter) \\\" unchanged cell(s) hidden\\\";\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  bottom: 0;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid var(--jp-layout-color3) 1px;\\r\\n  border-bottom: solid var(--jp-layout-color3) 1px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenBefore],\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenBefore] {\\r\\n  padding-top: 40px;\\r\\n}\\r\\n\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Cell-diff[data-nbdime-NCellsHiddenAfter],\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Diff-addremchunk[data-nbdime-NCellsHiddenAfter] {\\r\\n  padding-bottom: 40px;\\r\\n}\\r\\n\\r\\n/* Marker for when all cells are unchanged and hidden */\\r\\n.nbdime-root.jp-mod-hideUnchanged .jp-Notebook-diff[data-nbdime-AllCellsHidden]::after {\\r\\n  content: \\\"No changes, \\\" attr(data-nbdime-AllCellsHidden) \\\" unchanged cell(s) hidden\\\";\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid var(--jp-layout-color3) 1px;\\r\\n  border-bottom: solid var(--jp-layout-color3) 1px;\\r\\n  text-align: center;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n.jp-CollapsiblePanel {\\r\\n    border: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n}\\r\\n\\r\\nbutton.jp-CollapsiblePanel-header-icon {\\r\\n    height: 24px;\\r\\n    width: 24px;\\r\\n    float: right;\\r\\n    font-size: var(--jp-ui-font-size1);\\r\\n    margin-top: .1em;\\r\\n    padding: 0 2px;\\r\\n\\r\\n    color: var(--jp-ui-font-color2);\\r\\n    background-color: transparent;\\r\\n\\r\\n    border: 1px solid var(--jp-nbdime-output-color2);\\r\\n    border-radius: 2px;\\r\\n\\r\\n    text-decoration: none;\\r\\n    transition: background-color 0.1s ease;\\r\\n}\\r\\n\\r\\n/* Remove text border, as we don't use button text for icon */\\r\\nbutton.jp-CollapsiblePanel-header-icon::-moz-focus-inner {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n\\r\\nbutton.jp-CollapsiblePanel-header-icon:focus,\\r\\nbutton.jp-CollapsiblePanel-header-icon:hover,\\r\\nbutton.jp-CollapsiblePanel-header-icon:active {\\r\\n    border: 1px solid var(--jp-ui-font-color1);\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-header {\\r\\n    padding-top: .2em;\\r\\n    padding-bottom: .2em;\\r\\n    background-color: var(--jp-nbdime-output-color3);\\r\\n    padding-left: 2em;\\r\\n    padding-right: 2em;\\r\\n    border-top: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n    color: var(--jp-ui-font-color1);\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-container {\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-slider {\\r\\n\\t/* complete liquid height based on the parent's height!! */\\r\\n    height:100%;\\r\\n\\r\\n    /* only transition on transform properties which are hardware accelerated = way better performances */\\r\\n\\t-webkit-transition: -webkit-transform .3s ease, height 0.3s;\\r\\n       -moz-transition:    -moz-transform .3s ease, height 0.3s;\\r\\n        -ms-transition:     -ms-transform .3s ease, height 0.3s;\\r\\n            transition:         transform .3s ease, height 0.3s;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-opened {\\r\\n    /* visible */\\r\\n    -webkit-transform: translate(0, 0%);\\r\\n       -moz-transform: translate(0, 0%);\\r\\n        -ms-transform: translate(0, 0%);\\r\\n            transform: translate(0, 0%);\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-closed {\\r\\n    /* completely offscreen */\\r\\n    -webkit-transform: translate(0, -100%);\\r\\n       -moz-transform: translate(0, -100%);\\r\\n        -ms-transform: translate(0, -100%);\\r\\n            transform: translate(0, -100%);\\r\\n    height: 0;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime/lib/common/collapsible.css\"],\"names\":[],\"mappings\":\";AACA;IACI,gDAAgD;AACpD;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kCAAkC;IAClC,gBAAgB;IAChB,cAAc;;IAEd,+BAA+B;IAC/B,6BAA6B;;IAE7B,gDAAgD;IAChD,kBAAkB;;IAElB,qBAAqB;IACrB,sCAAsC;AAC1C;;AAEA,6DAA6D;AAC7D;IACI,YAAY;AAChB;;;AAGA;;;IAGI,0CAA0C;AAC9C;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;IACpB,gDAAgD;IAChD,iBAAiB;IACjB,kBAAkB;IAClB,oDAAoD;IACpD,+BAA+B;AACnC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;CACC,0DAA0D;IACvD,WAAW;;IAEX,qGAAqG;CACxG,2DAA2D;OACrD,wDAAwD;QACvD,uDAAuD;YACnD,mDAAmD;AAC/D;;AAEA;IACI,YAAY;IACZ,mCAAmC;OAChC,gCAAgC;QAC/B,+BAA+B;YAC3B,2BAA2B;IACnC,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,sCAAsC;OACnC,mCAAmC;QAClC,kCAAkC;YAC9B,8BAA8B;IACtC,SAAS;AACb\",\"sourcesContent\":[\"\\r\\n.jp-CollapsiblePanel {\\r\\n    border: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n}\\r\\n\\r\\nbutton.jp-CollapsiblePanel-header-icon {\\r\\n    height: 24px;\\r\\n    width: 24px;\\r\\n    float: right;\\r\\n    font-size: var(--jp-ui-font-size1);\\r\\n    margin-top: .1em;\\r\\n    padding: 0 2px;\\r\\n\\r\\n    color: var(--jp-ui-font-color2);\\r\\n    background-color: transparent;\\r\\n\\r\\n    border: 1px solid var(--jp-nbdime-output-color2);\\r\\n    border-radius: 2px;\\r\\n\\r\\n    text-decoration: none;\\r\\n    transition: background-color 0.1s ease;\\r\\n}\\r\\n\\r\\n/* Remove text border, as we don't use button text for icon */\\r\\nbutton.jp-CollapsiblePanel-header-icon::-moz-focus-inner {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n\\r\\nbutton.jp-CollapsiblePanel-header-icon:focus,\\r\\nbutton.jp-CollapsiblePanel-header-icon:hover,\\r\\nbutton.jp-CollapsiblePanel-header-icon:active {\\r\\n    border: 1px solid var(--jp-ui-font-color1);\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-header {\\r\\n    padding-top: .2em;\\r\\n    padding-bottom: .2em;\\r\\n    background-color: var(--jp-nbdime-output-color3);\\r\\n    padding-left: 2em;\\r\\n    padding-right: 2em;\\r\\n    border-top: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n    color: var(--jp-ui-font-color1);\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-container {\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-slider {\\r\\n\\t/* complete liquid height based on the parent's height!! */\\r\\n    height:100%;\\r\\n\\r\\n    /* only transition on transform properties which are hardware accelerated = way better performances */\\r\\n\\t-webkit-transition: -webkit-transform .3s ease, height 0.3s;\\r\\n       -moz-transition:    -moz-transform .3s ease, height 0.3s;\\r\\n        -ms-transition:     -ms-transform .3s ease, height 0.3s;\\r\\n            transition:         transform .3s ease, height 0.3s;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-opened {\\r\\n    /* visible */\\r\\n    -webkit-transform: translate(0, 0%);\\r\\n       -moz-transform: translate(0, 0%);\\r\\n        -ms-transform: translate(0, 0%);\\r\\n            transform: translate(0, 0%);\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-closed {\\r\\n    /* completely offscreen */\\r\\n    -webkit-transform: translate(0, -100%);\\r\\n       -moz-transform: translate(0, -100%);\\r\\n        -ms-transform: translate(0, -100%);\\r\\n            transform: translate(0, -100%);\\r\\n    height: 0;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*-----------------------------------------------------------------------------\\r\\n| Copyright (c) 2014-2016, Jupyter Development Team.\\r\\n|\\r\\n| Distributed under the terms of the Modified BSD License.\\r\\n|----------------------------------------------------------------------------*/\\r\\n\\r\\n\\r\\n.jp-DragPanel-dragHandle{\\r\\n  background:\\r\\n    radial-gradient(rgba(255,255,255, .6) 30%, transparent 31%) 0 0,\\r\\n    radial-gradient(transparent 19%,rgba(0,0,0,.4) 20%, transparent 50%) 0 1px;\\r\\n  background-size:6px 6px;\\r\\n}\\r\\n\\r\\n.p-Panel.jp-DragPanel .p-Widget.jp-mod-dropTarget {\\r\\n  border-top: 1px dashed black;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime/lib/common/dragpanel.css\"],\"names\":[],\"mappings\":\"AAAA;;;;8EAI8E;;;AAG9E;EACE;;8EAE4E;EAC5E,uBAAuB;AACzB;;AAEA;EACE,4BAA4B;AAC9B\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\r\\n| Copyright (c) 2014-2016, Jupyter Development Team.\\r\\n|\\r\\n| Distributed under the terms of the Modified BSD License.\\r\\n|----------------------------------------------------------------------------*/\\r\\n\\r\\n\\r\\n.jp-DragPanel-dragHandle{\\r\\n  background:\\r\\n    radial-gradient(rgba(255,255,255, .6) 30%, transparent 31%) 0 0,\\r\\n    radial-gradient(transparent 19%,rgba(0,0,0,.4) 20%, transparent 50%) 0 1px;\\r\\n  background-size:6px 6px;\\r\\n}\\r\\n\\r\\n.p-Panel.jp-DragPanel .p-Widget.jp-mod-dropTarget {\\r\\n  border-top: 1px dashed black;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n.nbdime-root .CodeMirror-merge {\\r\\n  position: relative;\\r\\n  white-space: pre;\\r\\n  /* style as jp-InputArea-editor: */\\r\\n  border: var(--codemirror-border);\\r\\n  border-radius: 0px;\\r\\n  background: var(--jp-cell-editor-background);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror.cm-s-jupyter {\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge, .CodeMirror-merge .CodeMirror {\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-4pane .CodeMirror-merge-pane-deleted {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-pane-unchanged { width: 100%; }\\r\\n.nbdime-root .CodeMirror-merge-1pane .CodeMirror-merge-gap { width: 6%; }\\r\\n.nbdime-root .CodeMirror-merge-2pane .CodeMirror-merge-pane { width: 47%; }\\r\\n.nbdime-root .CodeMirror-merge-2pane .CodeMirror-merge-gap { width: 6%; }\\r\\n.nbdime-root .CodeMirror-merge-3pane .CodeMirror-merge-pane { width: 31%; }\\r\\n.nbdime-root .CodeMirror-merge-3pane .CodeMirror-merge-gap { width: 3.5%; }\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-pane {\\r\\n  display: inline-block;\\r\\n  white-space: normal;\\r\\n  vertical-align: top;\\r\\n  width: 100%;\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-pane-rightmost {\\r\\n  position: absolute;\\r\\n  right: 0px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.nbdime-root .p-Widget.CodeMirror-merge-gap {\\r\\n  z-index: 2;\\r\\n  display: inline-block;\\r\\n  height: 100%;\\r\\n  -moz-box-sizing: border-box;\\r\\n  box-sizing: border-box;\\r\\n  overflow: hidden;\\r\\n  border-left: var(--codemirror-border);\\r\\n  border-right: var(--codemirror-border);\\r\\n  position: absolute;\\r\\n  color: var(--jp-ui-font-color2);\\r\\n  background: var(--jp-layout-color2);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-scrolllock-wrap {\\r\\n  position: absolute;\\r\\n  bottom: 0; left: 50%;\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-scrolllock {\\r\\n  position: relative;\\r\\n  left: -50%;\\r\\n  cursor: pointer;\\r\\n  line-height: 1;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-r-inserted, .CodeMirror-merge-l-inserted {\\r\\n    background-color: var(--jp-diff-added-color1);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-r-deleted, .CodeMirror-merge-l-deleted {\\r\\n    background-color: var(--jp-diff-deleted-color1);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-collapsed-widget:before {\\r\\n  content: \\\"(...)\\\";\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-collapsed-widget {\\r\\n  cursor: pointer;\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  background: var(--jp-layout-color2);\\r\\n  border: 1px solid var(--jp-border-color1);\\r\\n  font-size: 90%;\\r\\n  padding: 0 3px;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-collapsed-line .CodeMirror-gutter-elt { display: none; }\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-spacer {\\r\\n  background-image: repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px);\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime/lib/styles/common.css\"],\"names\":[],\"mappings\":\";AACA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,kCAAkC;EAClC,gCAAgC;EAChC,kBAAkB;EAClB,4CAA4C;AAC9C;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA,gDAAgD,WAAW,EAAE;AAC7D,6DAA6D,SAAS,EAAE;AACxE,8DAA8D,UAAU,EAAE;AAC1E,6DAA6D,SAAS,EAAE;AACxE,8DAA8D,UAAU,EAAE;AAC1E,6DAA6D,WAAW,EAAE;;AAE1E;EACE,qBAAqB;EACrB,mBAAmB;EACnB,mBAAmB;EACnB,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,UAAU;AACZ;;AAEA;EACE,UAAU;EACV,qBAAqB;EACrB,YAAY;EACZ,2BAA2B;EAC3B,sBAAsB;EACtB,gBAAgB;EAChB,qCAAqC;EACrC,sCAAsC;EACtC,kBAAkB;EAClB,+BAA+B;EAC/B,mCAAmC;AACrC;;AAEA;EACE,kBAAkB;EAClB,SAAS,EAAE,SAAS;AACtB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,eAAe;EACf,cAAc;AAChB;;AAEA;IACI,6CAA6C;AACjD;;AAEA;IACI,+CAA+C;AACnD;;AAEA;EACE,gBAAgB;AAClB;AACA;EACE,eAAe;EACf,+BAA+B;EAC/B,mCAAmC;EACnC,yCAAyC;EACzC,cAAc;EACd,cAAc;EACd,kBAAkB;AACpB;AACA,uEAAuE,aAAa,EAAE;;AAEtF;EACE,qIAAqI;AACvI\",\"sourcesContent\":[\"\\r\\n.nbdime-root .CodeMirror-merge {\\r\\n  position: relative;\\r\\n  white-space: pre;\\r\\n  /* style as jp-InputArea-editor: */\\r\\n  border: var(--codemirror-border);\\r\\n  border-radius: 0px;\\r\\n  background: var(--jp-cell-editor-background);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror.cm-s-jupyter {\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge, .CodeMirror-merge .CodeMirror {\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-4pane .CodeMirror-merge-pane-deleted {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-pane-unchanged { width: 100%; }\\r\\n.nbdime-root .CodeMirror-merge-1pane .CodeMirror-merge-gap { width: 6%; }\\r\\n.nbdime-root .CodeMirror-merge-2pane .CodeMirror-merge-pane { width: 47%; }\\r\\n.nbdime-root .CodeMirror-merge-2pane .CodeMirror-merge-gap { width: 6%; }\\r\\n.nbdime-root .CodeMirror-merge-3pane .CodeMirror-merge-pane { width: 31%; }\\r\\n.nbdime-root .CodeMirror-merge-3pane .CodeMirror-merge-gap { width: 3.5%; }\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-pane {\\r\\n  display: inline-block;\\r\\n  white-space: normal;\\r\\n  vertical-align: top;\\r\\n  width: 100%;\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-pane-rightmost {\\r\\n  position: absolute;\\r\\n  right: 0px;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.nbdime-root .p-Widget.CodeMirror-merge-gap {\\r\\n  z-index: 2;\\r\\n  display: inline-block;\\r\\n  height: 100%;\\r\\n  -moz-box-sizing: border-box;\\r\\n  box-sizing: border-box;\\r\\n  overflow: hidden;\\r\\n  border-left: var(--codemirror-border);\\r\\n  border-right: var(--codemirror-border);\\r\\n  position: absolute;\\r\\n  color: var(--jp-ui-font-color2);\\r\\n  background: var(--jp-layout-color2);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-scrolllock-wrap {\\r\\n  position: absolute;\\r\\n  bottom: 0; left: 50%;\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-scrolllock {\\r\\n  position: relative;\\r\\n  left: -50%;\\r\\n  cursor: pointer;\\r\\n  line-height: 1;\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-r-inserted, .CodeMirror-merge-l-inserted {\\r\\n    background-color: var(--jp-diff-added-color1);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-r-deleted, .CodeMirror-merge-l-deleted {\\r\\n    background-color: var(--jp-diff-deleted-color1);\\r\\n}\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-collapsed-widget:before {\\r\\n  content: \\\"(...)\\\";\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-collapsed-widget {\\r\\n  cursor: pointer;\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  background: var(--jp-layout-color2);\\r\\n  border: 1px solid var(--jp-border-color1);\\r\\n  font-size: 90%;\\r\\n  padding: 0 3px;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.nbdime-root .CodeMirror-merge-collapsed-line .CodeMirror-gutter-elt { display: none; }\\r\\n\\r\\n.nbdime-root .CodeMirror-merge-spacer {\\r\\n  background-image: repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255,255,255,.5) 5px, rgba(255,255,255,.5) 10px);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Output *:first-child {\\r\\n  margin-left: auto;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Output *:last-child {\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n/* Alternative for showing single cell when cells are equal */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged {\\r\\n  margin-left: 10%;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Diff-unchanged {\\r\\n  margin-left: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/* Match input border of unchanged cell source */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .CodeMirror-merge-pane-unchanged {\\r\\n  border: var(--jp-border-width) solid var(--jp-private-notebook-cell-editor-border);\\r\\n}\\r\\n\\r\\n/* Do not use border between unchanged cells */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged + .jp-Diff-unchanged > div:first-of-type {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n/* We can float prompt left when unchanged */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Cellrow-executionCount {\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Notebook-diff .jp-Metadata-diff {\\r\\n  margin-bottom: 20px;\\r\\n  border: solid black thin;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cell-diff {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n/* Border on top of cell */\\r\\n.jp-Notebook-diff .jp-Cell-diff > div:first-of-type {\\r\\n  border-top: solid #ccc 1px;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-source,\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-outputs {\\r\\n  border-left: var(--codemirror-border);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-source,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-outputs {\\r\\n  border-right: var(--codemirror-border);\\r\\n}\\r\\n\\r\\n/* Add/delete chunks for small width devices (added before delete) */\\r\\n.jp-Notebook-diff .jp-Diff-addremchunk {\\r\\n  display: flex;\\r\\n  flex-direction: column-reverse;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-addedchunk,\\r\\n.jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-removedchunk {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/* Add/delete chunks should show side-by-side for larger screens */\\r\\n@media (min-width: 1000px) {\\r\\n  .jp-Notebook-diff .jp-Diff-addremchunk {\\r\\n    flex-direction: row-reverse;\\r\\n  }\\r\\n\\r\\n  .jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-addedchunk,\\r\\n  .jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-removedchunk {\\r\\n    width: 49%;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Hide metadata changes by default */\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-metadata,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-metadata,\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Cellrow-outputs {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-outputs,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-outputs {\\r\\n  border-top: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Diff-unchanged {\\r\\n  margin-left: 25%;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Diff-unchanged {\\r\\n  margin-left: 0;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Output-result > * {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-base {\\r\\n  float: left;\\r\\n  width: 47%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-remote {\\r\\n  float: right;\\r\\n  width: 47%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Output-result img {\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote {\\r\\n  position: relative;\\r\\n  left: 6%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-source .CodeMirror-merge-pane-deleted,\\r\\n.jp-Notebook-diff .jp-Cellrow-source .CodeMirror-merge-pane-added {\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-twoway .jp-Cellrow-outputs .jp-Diff-unchanged .jp-CodeMirrorWidget {\\r\\n  width: initial;\\r\\n  max-width: 100%;\\r\\n}\\r\\n/* Ensure unchanged images are centered */\\r\\n.jp-Notebook-diff .jp-Diff-twoway .jp-Cellrow-outputs .jp-Diff-unchanged .jp-RenderedImage {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/* Color diff highlighting according to style vars */\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-chunk { background-color: var(--jp-diff-deleted-color2); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-chunk-start { border-top: 1px solid var(--jp-diff-deleted-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-chunk-end { border-bottom: 1px solid var(--jp-diff-deleted-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-connect { fill: var(--jp-diff-deleted-color2); stroke: var(--jp-diff-deleted-color0); stroke-width: 1px; }\\r\\n.jp-Notebook-diff .CodeMirror-merge-spacer { background-color: var(--jp-diff-deleted-color2); }\\r\\n\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-chunk { background-color: var(--jp-diff-added-color2); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-chunk-start { border-top: 1px solid var(--jp-diff-added-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-chunk-end { border-bottom: 1px solid var(--jp-diff-added-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-connect { fill: var(--jp-diff-added-color2); stroke: var(--jp-diff-added-color0); stroke-width: 1px; }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-spacer { background-color: var(--jp-diff-added-color2); }\\r\\n\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-deleted .CodeMirror,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Diff-renderedOutput,\\r\\n.jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-base {\\r\\n  background-color: var(--jp-diff-deleted-color2);\\r\\n  border: solid 1px var(--jp-diff-deleted-color0);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .CodeMirror,\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Diff-renderedOutput,\\r\\n.jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-remote {\\r\\n  background-color: var(--jp-diff-added-color2);\\r\\n  border: solid 1px var(--jp-diff-added-color0);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .CodeMirror-merge-pane-added,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .CodeMirror-merge-pane-deleted {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-source .jp-InputPrompt {\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-container {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n}\\r\\n\\r\\n/*\\r\\nOutput mimetype selection:\\r\\n*/\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, 0);\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  padding: 3px 5px;\\r\\n  border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\r\\n  z-index: 10;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel:hover .jp-Diff-outputMenu {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-trustOutputButton {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-trustCandidate .jp-Diff-trustOutputButton {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel:not(.jp-Diff-trustCandidate) .jp-diff-base64Output + .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel .jp-Diff-outputMenu > :not(:first-child) {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.jp-Diff-outputsContainer > .p-Widget:not(:last-child) {\\r\\n  padding-bottom: 6px;\\r\\n  min-height: 2em;\\r\\n  border-bottom: var(--jp-border-width) solid var(--jp-nbdime-output-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-renderedOutput {\\r\\n  /* Ensure output is always large enough to show menu */\\r\\n  min-height: 2em;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime/lib/styles/diff.css\"],\"names\":[],\"mappings\":\";;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,6DAA6D;AAC7D;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,WAAW;AACb;;AAEA,gDAAgD;AAChD;EACE,kFAAkF;AACpF;;AAEA,8CAA8C;AAC9C;IACI,YAAY;AAChB;;AAEA,4CAA4C;AAC5C;EACE,WAAW;AACb;;;AAGA;EACE,mBAAmB;EACnB,wBAAwB;AAC1B;;AAEA;EACE,mBAAmB;AACrB;;AAEA,0BAA0B;AAC1B;EACE,0BAA0B;AAC5B;;;AAGA;;EAEE,qCAAqC;AACvC;;AAEA;;EAEE,sCAAsC;AACxC;;AAEA,oEAAoE;AACpE;EACE,aAAa;EACb,8BAA8B;EAC9B,8BAA8B;AAChC;;AAEA;;EAEE,WAAW;AACb;;AAEA,kEAAkE;AAClE;EACE;IACE,2BAA2B;EAC7B;;EAEA;;IAEE,UAAU;EACZ;AACF;;AAEA,qCAAqC;AACrC;;;EAGE,aAAa;AACf;;AAEA;;EAEE,oDAAoD;AACtD;;AAEA;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;AACV;;AAEA;;EAEE,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;AACA,yCAAyC;AACzC;EACE,kBAAkB;AACpB;;AAEA,oDAAoD;AACpD,8CAA8C,+CAA+C,EAAE;AAC/F,oDAAoD,mDAAmD,EAAE;AACzG,kDAAkD,sDAAsD,EAAE;AAC1G,gDAAgD,mCAAmC,EAAE,qCAAqC,EAAE,iBAAiB,EAAE;AAC/I,6CAA6C,+CAA+C,EAAE;;AAE9F,4EAA4E,6CAA6C,EAAE;AAC3H,kFAAkF,iDAAiD,EAAE;AACrI,gFAAgF,oDAAoD,EAAE;AACtI,8EAA8E,iCAAiC,EAAE,mCAAmC,EAAE,iBAAiB,EAAE;AACzK,2EAA2E,6CAA6C,EAAE;;;AAG1H;;;EAGE,+CAA+C;EAC/C,+CAA+C;AACjD;;AAEA;;;EAGE,6CAA6C;EAC7C,6CAA6C;AAC/C;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,yCAAyC;EACzC,+BAA+B;AACjC;;AAEA;;CAEC;;AAED;EACE,aAAa;EACb,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,6BAA6B;EAC7B,yCAAyC;EACzC,+BAA+B;EAC/B,gBAAgB;EAChB,uEAAuE;EACvE,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,0EAA0E;AAC5E;;AAEA;EACE,sDAAsD;EACtD,eAAe;AACjB\",\"sourcesContent\":[\"\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Output *:first-child {\\r\\n  margin-left: auto;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Output *:last-child {\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n/* Alternative for showing single cell when cells are equal */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged {\\r\\n  margin-left: 10%;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Diff-unchanged {\\r\\n  margin-left: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/* Match input border of unchanged cell source */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .CodeMirror-merge-pane-unchanged {\\r\\n  border: var(--jp-border-width) solid var(--jp-private-notebook-cell-editor-border);\\r\\n}\\r\\n\\r\\n/* Do not use border between unchanged cells */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged + .jp-Diff-unchanged > div:first-of-type {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n/* We can float prompt left when unchanged */\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Cellrow-executionCount {\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Notebook-diff .jp-Metadata-diff {\\r\\n  margin-bottom: 20px;\\r\\n  border: solid black thin;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cell-diff {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n/* Border on top of cell */\\r\\n.jp-Notebook-diff .jp-Cell-diff > div:first-of-type {\\r\\n  border-top: solid #ccc 1px;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-source,\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-outputs {\\r\\n  border-left: var(--codemirror-border);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-source,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-outputs {\\r\\n  border-right: var(--codemirror-border);\\r\\n}\\r\\n\\r\\n/* Add/delete chunks for small width devices (added before delete) */\\r\\n.jp-Notebook-diff .jp-Diff-addremchunk {\\r\\n  display: flex;\\r\\n  flex-direction: column-reverse;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-addedchunk,\\r\\n.jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-removedchunk {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/* Add/delete chunks should show side-by-side for larger screens */\\r\\n@media (min-width: 1000px) {\\r\\n  .jp-Notebook-diff .jp-Diff-addremchunk {\\r\\n    flex-direction: row-reverse;\\r\\n  }\\r\\n\\r\\n  .jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-addedchunk,\\r\\n  .jp-Notebook-diff .jp-Diff-addremchunk .jp-Diff-removedchunk {\\r\\n    width: 49%;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Hide metadata changes by default */\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-metadata,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-metadata,\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Cellrow-outputs {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Cellrow-outputs,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Cellrow-outputs {\\r\\n  border-top: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Diff-unchanged {\\r\\n  margin-left: 25%;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Diff-unchanged {\\r\\n  margin-left: 0;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-unchanged .jp-Output-result > * {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-base {\\r\\n  float: left;\\r\\n  width: 47%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-remote {\\r\\n  float: right;\\r\\n  width: 47%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Output-result img {\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote {\\r\\n  position: relative;\\r\\n  left: 6%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-source .CodeMirror-merge-pane-deleted,\\r\\n.jp-Notebook-diff .jp-Cellrow-source .CodeMirror-merge-pane-added {\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-twoway .jp-Cellrow-outputs .jp-Diff-unchanged .jp-CodeMirrorWidget {\\r\\n  width: initial;\\r\\n  max-width: 100%;\\r\\n}\\r\\n/* Ensure unchanged images are centered */\\r\\n.jp-Notebook-diff .jp-Diff-twoway .jp-Cellrow-outputs .jp-Diff-unchanged .jp-RenderedImage {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/* Color diff highlighting according to style vars */\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-chunk { background-color: var(--jp-diff-deleted-color2); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-chunk-start { border-top: 1px solid var(--jp-diff-deleted-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-chunk-end { border-bottom: 1px solid var(--jp-diff-deleted-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-r-connect { fill: var(--jp-diff-deleted-color2); stroke: var(--jp-diff-deleted-color0); stroke-width: 1px; }\\r\\n.jp-Notebook-diff .CodeMirror-merge-spacer { background-color: var(--jp-diff-deleted-color2); }\\r\\n\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-chunk { background-color: var(--jp-diff-added-color2); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-chunk-start { border-top: 1px solid var(--jp-diff-added-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-chunk-end { border-bottom: 1px solid var(--jp-diff-added-color0); }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-r-connect { fill: var(--jp-diff-added-color2); stroke: var(--jp-diff-added-color0); stroke-width: 1px; }\\r\\n.jp-Notebook-diff .CodeMirror-merge-pane-remote .CodeMirror-merge-spacer { background-color: var(--jp-diff-added-color2); }\\r\\n\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-deleted .CodeMirror,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .jp-Diff-renderedOutput,\\r\\n.jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-base {\\r\\n  background-color: var(--jp-diff-deleted-color2);\\r\\n  border: solid 1px var(--jp-diff-deleted-color0);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .CodeMirror,\\r\\n.jp-Notebook-diff .jp-Diff-added .jp-Diff-renderedOutput,\\r\\n.jp-Cellrow-outputs .jp-Diff-twoway .jp-Diff-remote {\\r\\n  background-color: var(--jp-diff-added-color2);\\r\\n  border: solid 1px var(--jp-diff-added-color0);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-added .CodeMirror-merge-pane-added,\\r\\n.jp-Notebook-diff .jp-Diff-deleted .CodeMirror-merge-pane-deleted {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Cellrow-source .jp-InputPrompt {\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.jp-CollapsiblePanel-container {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n}\\r\\n\\r\\n/*\\r\\nOutput mimetype selection:\\r\\n*/\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, 0);\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  padding: 3px 5px;\\r\\n  border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\r\\n  z-index: 10;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel:hover .jp-Diff-outputMenu {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-trustOutputButton {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-trustCandidate .jp-Diff-trustOutputButton {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel:not(.jp-Diff-trustCandidate) .jp-diff-base64Output + .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-outputPanel .jp-Diff-outputMenu > :not(:first-child) {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.jp-Diff-outputsContainer > .p-Widget:not(:last-child) {\\r\\n  padding-bottom: 6px;\\r\\n  min-height: 2em;\\r\\n  border-bottom: var(--jp-border-width) solid var(--jp-nbdime-output-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-diff .jp-Diff-renderedOutput {\\r\\n  /* Ensure output is always large enough to show menu */\\r\\n  min-height: 2em;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n\\r\\n\\r\\n.jp-Notebook-merge .jp-Metadata-diff {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Metadata-diff .jp-CollapsiblePanel {\\r\\n  border: solid black thin;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cell-merge {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n}\\r\\n\\r\\n/* Alternative for showing single cell when cells are equal */\\r\\n.jp-Notebook-merge .jp-Merge-unchanged {\\r\\n  margin-left: 10%;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-merge-celldragdrop > .p-Panel:not(:first-child) {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-local,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-remote,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base:not(.CodeMirror-merge-pane-unchanged):not(.CodeMirror-merge-pane-deleted):not(.CodeMirror-merge-pane-added) {\\r\\n  width: 33%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-final {\\r\\n  width: 100%;\\r\\n  border-top: var(--codemirror-border);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Output-result img {\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-cellHeader {\\r\\n  display: flex;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid #ccc 1px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-cellHeader > .p-Widget {\\r\\n  margin-right: .5em;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-cellHeader-title {\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-DragPanel-dragHandle {\\r\\n  height: 18px;\\r\\n  width: 12px;\\r\\n}\\r\\n\\r\\n.jp-Merge-dragimage-output {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  border: solid gray thin;\\r\\n  max-width: 33%;\\r\\n}\\r\\n\\r\\n.jp-Cell-merge.p-mod-drag-image {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n}\\r\\n\\r\\n.jp-Cell-merge.p-mod-drag-image .jp-Merge-cellHeader {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Merge-output-drop-delete {\\r\\n  border: 3px dashed var(--jp-nbdime-output-color2);\\r\\n  border-radius: 15px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-deleted,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-added {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-spacer { background-color: #eee; }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk { background-color: var(--jp-merge-remote-color2); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-start,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-remote { border-top: 1px solid var(--jp-merge-remote-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-end,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote { border-bottom: 1px solid var(--jp-merge-remote-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-connect { fill: var(--jp-merge-remote-color2); stroke: var(--jp-merge-remote-color1); stroke-width: 1px; }\\r\\n.jp-Notebook-merge .CodeMirror-line .CodeMirror-merge-r-inserted { background-color: var(--jp-merge-remote-color1); }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-end-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-remote-color1);\\r\\n  background-color: var(--jp-merge-remote-color3);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk { background-color: var(--jp-merge-local-color2); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-start,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-local { border-top: 1px solid var(--jp-merge-local-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-local { border-bottom: 1px solid var(--jp-merge-local-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-connect { fill: var(--jp-merge-local-color2); stroke: var(--jp-merge-local-color1); stroke-width: 1px; }\\r\\n.jp-Notebook-merge .CodeMirror-line .CodeMirror-merge-l-inserted { background-color: var(--jp-merge-local-color1) }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-local-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-local-color1);\\r\\n  background-color: var(--jp-merge-local-color3);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-custom { background-color: #ffb; }\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-custom { border-top: 1px solid #fe6; }\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-custom { border-bottom: 1px solid #fe6; }\\r\\n\\r\\n\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk.CodeMirror-merge-r-chunk { background: var(--jp-merge-both-color2); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-start.CodeMirror-merge-r-chunk-start { border-top: 1px solid var(--jp-merge-both-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end.CodeMirror-merge-r-chunk-end { border-bottom: 1px solid var(--jp-merge-both-color1); }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end-empty.CodeMirror-merge-r-chunk-end-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote-empty.CodeMirror-merge-m-chunk-end-local-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-both-color1);\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-end-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-either-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-local-empty,\\r\\n.jp-Notebook-merge .CodeMirror pre.CodeMirror-line {\\r\\n  z-index: 3;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-either,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-mixed:not(.CodeMirror-merge-m-chunk-custom) {\\r\\n  border-top: 1px solid var(--jp-merge-either-color1);\\r\\n  }\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-either,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-mixed:not(.CodeMirror-merge-m-chunk-custom) {\\r\\n  border-bottom: 1px solid var(--jp-merge-either-color1);\\r\\n  }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-either-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-either-color1);\\r\\n  background-color: var(--jp-merge-either-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base .CodeMirror-line .CodeMirror-merge-m-deleted,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base .CodeMirror-line .CodeMirror-merge-l-deleted,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base .CodeMirror-line .CodeMirror-merge-r-deleted {\\r\\n  background-color: initial;\\r\\n  color: #b00\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-gutter-wrapper {\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-linenumber {\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-local,\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote {\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote {\\r\\n  margin-left: 25%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-local .CodeMirror {\\r\\n  background-color: var(--jp-merge-local-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote .CodeMirror {\\r\\n  background-color: var(--jp-merge-remote-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-gutter-picker {\\r\\n  width: 16px;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-gutter-conflict {\\r\\n  width: 16px;\\r\\n  color: #b00;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-conflict {\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane.CodeMirror-merge-pane-local.jp-mod-missing {\\r\\n  background-color: var(--jp-merge-local-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane.CodeMirror-merge-pane-remote.jp-mod-missing {\\r\\n  background-color: var(--jp-merge-remote-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cell-merge.jp-mod-todelete > .p-Widget:not(.jp-Merge-cellHeader) {\\r\\n  opacity: 0.5;\\r\\n  filter: alpha(opacity = 50);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cell-merge.jp-mod-todelete .jp-Merge-cellHeader {\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n}\\r\\n\\r\\n.jp-Cell-merge.jp-mod-clearoutputs .jp-Cellrow-outputs {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs .jp-OutputArea {\\r\\n  border: #666 solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs .p-FlexPanel:last-of-type .jp-OutputArea {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs.jp-conflicted-outputs .jp-CollapsiblePanel-header {\\r\\n  background-color: var(--jp-merge-both-color2)\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs.jp-conflicted-outputs .jp-CollapsiblePanel-header {\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n  border-top: var(--jp-merge-both-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs.jp-conflicted-outputs {\\r\\n    border: var(--jp-merge-both-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-conflicted-outputs-button {\\r\\n  display: inline;\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-renderedOutput .jp-Merge-local {\\r\\n  background-color: var(--jp-merge-local-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-renderedOutput .jp-Merge-remote {\\r\\n  background-color: var(--jp-merge-remote-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs .jp-OutputArea {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  flex-wrap: nowrap;\\r\\n  min-height: 2em;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-local .jp-Cellrow-outputs,\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote .jp-Cellrow-outputs {\\r\\n  border-top: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Output:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.jp-Merge-notebook-controls {\\r\\n  justify-content: flex-end;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 5px;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border: solid 1px var(--jp-ui-font-color2);\\r\\n}\\r\\n\\r\\n.jp-Merge-notebook-controls:empty {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge label[disabled] {\\r\\n  color: var(--jp-ui-font-color3);\\r\\n}\\r\\n\\r\\n/* This fixes an alignment issue between gutter background\\r\\n and gutter elements, but not sure *why* this is needed.\\r\\n Might be fixing a symptom rather than the cause, but it\\r\\n works for now.\\r\\n */\\r\\n.jp-Notebook-merge .CodeMirror-gutter-wrapper {\\r\\n  margin-left: calc(-1 * var(--jp-code-padding));\\r\\n}\\r\\n\\r\\n\\r\\n/* Display chunks of conflicted cell with a start and end marker.\\r\\n Add a pseudo-element at start of chunk with button to mark chunk as resolved\\r\\n*/\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells {\\r\\n  border: solid 2px var(--jp-error-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells .jp-conflicted-cells-header {\\r\\n  background-color: var(--jp-error-color3);\\r\\n  display: flex;\\r\\n  padding-top: .2em;\\r\\n  padding-bottom: .2em;\\r\\n  padding-left: 2em;\\r\\n  padding-right: 2em;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells .jp-conflicted-cells-button {\\r\\n  margin-left: auto;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells > .jp-DragPanel {\\r\\n  padding: 4px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*\\r\\nOutput mimetype selection:\\r\\n*/\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, 0);\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  padding: 3px 5px;\\r\\n  border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\r\\n  z-index: 10;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel:hover .jp-Diff-outputMenu {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-trustOutputButton {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-trustCandidate .jp-Diff-trustOutputButton {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel:not(.jp-Diff-trustCandidate) .jp-diff-base64Output + .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel .jp-Diff-outputMenu > :not(:first-child) {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.jp-Diff-outputsContainer > .p-Widget:not(:last-child) {\\r\\n  padding-bottom: 6px;\\r\\n  min-height: 2em;\\r\\n  border-bottom: var(--jp-border-width) solid var(--jp-nbdime-output-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-renderedOutput {\\r\\n  /* Ensure output is always large enough to show menu */\\r\\n  min-height: 2em;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime/lib/styles/merge.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"\\r\\n\\r\\n\\r\\n.jp-Notebook-merge .jp-Metadata-diff {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Metadata-diff .jp-CollapsiblePanel {\\r\\n  border: solid black thin;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cell-merge {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n}\\r\\n\\r\\n/* Alternative for showing single cell when cells are equal */\\r\\n.jp-Notebook-merge .jp-Merge-unchanged {\\r\\n  margin-left: 10%;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-merge-celldragdrop > .p-Panel:not(:first-child) {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-local,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-remote,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base:not(.CodeMirror-merge-pane-unchanged):not(.CodeMirror-merge-pane-deleted):not(.CodeMirror-merge-pane-added) {\\r\\n  width: 33%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-final {\\r\\n  width: 100%;\\r\\n  border-top: var(--codemirror-border);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Output-result img {\\r\\n  max-width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-cellHeader {\\r\\n  display: flex;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border-top: solid #ccc 1px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-cellHeader > .p-Widget {\\r\\n  margin-right: .5em;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-cellHeader-title {\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-DragPanel-dragHandle {\\r\\n  height: 18px;\\r\\n  width: 12px;\\r\\n}\\r\\n\\r\\n.jp-Merge-dragimage-output {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  border: solid gray thin;\\r\\n  max-width: 33%;\\r\\n}\\r\\n\\r\\n.jp-Cell-merge.p-mod-drag-image {\\r\\n  background-color: var(--jp-layout-color1);\\r\\n}\\r\\n\\r\\n.jp-Cell-merge.p-mod-drag-image .jp-Merge-cellHeader {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Merge-output-drop-delete {\\r\\n  border: 3px dashed var(--jp-nbdime-output-color2);\\r\\n  border-radius: 15px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-deleted,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-added {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-spacer { background-color: #eee; }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk { background-color: var(--jp-merge-remote-color2); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-start,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-remote { border-top: 1px solid var(--jp-merge-remote-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-end,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote { border-bottom: 1px solid var(--jp-merge-remote-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-connect { fill: var(--jp-merge-remote-color2); stroke: var(--jp-merge-remote-color1); stroke-width: 1px; }\\r\\n.jp-Notebook-merge .CodeMirror-line .CodeMirror-merge-r-inserted { background-color: var(--jp-merge-remote-color1); }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-end-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-remote-color1);\\r\\n  background-color: var(--jp-merge-remote-color3);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk { background-color: var(--jp-merge-local-color2); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-start,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-local { border-top: 1px solid var(--jp-merge-local-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-local { border-bottom: 1px solid var(--jp-merge-local-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-connect { fill: var(--jp-merge-local-color2); stroke: var(--jp-merge-local-color1); stroke-width: 1px; }\\r\\n.jp-Notebook-merge .CodeMirror-line .CodeMirror-merge-l-inserted { background-color: var(--jp-merge-local-color1) }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-local-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-local-color1);\\r\\n  background-color: var(--jp-merge-local-color3);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-custom { background-color: #ffb; }\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-custom { border-top: 1px solid #fe6; }\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-custom { border-bottom: 1px solid #fe6; }\\r\\n\\r\\n\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk.CodeMirror-merge-r-chunk { background: var(--jp-merge-both-color2); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-start.CodeMirror-merge-r-chunk-start { border-top: 1px solid var(--jp-merge-both-color1); }\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end.CodeMirror-merge-r-chunk-end { border-bottom: 1px solid var(--jp-merge-both-color1); }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end-empty.CodeMirror-merge-r-chunk-end-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote-empty.CodeMirror-merge-m-chunk-end-local-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-both-color1);\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-r-chunk-end-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-l-chunk-end-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-either-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-remote-empty,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-local-empty,\\r\\n.jp-Notebook-merge .CodeMirror pre.CodeMirror-line {\\r\\n  z-index: 3;\\r\\n}\\r\\n\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-either,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-start-mixed:not(.CodeMirror-merge-m-chunk-custom) {\\r\\n  border-top: 1px solid var(--jp-merge-either-color1);\\r\\n  }\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-either,\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-mixed:not(.CodeMirror-merge-m-chunk-custom) {\\r\\n  border-bottom: 1px solid var(--jp-merge-either-color1);\\r\\n  }\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-m-chunk-end-either-empty + .CodeMirror-linewidget .CodeMirror-merge-spacer {\\r\\n  border-bottom: 1px solid var(--jp-merge-either-color1);\\r\\n  background-color: var(--jp-merge-either-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base .CodeMirror-line .CodeMirror-merge-m-deleted,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base .CodeMirror-line .CodeMirror-merge-l-deleted,\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane-base .CodeMirror-line .CodeMirror-merge-r-deleted {\\r\\n  background-color: initial;\\r\\n  color: #b00\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-gutter-wrapper {\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-linenumber {\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-local,\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote {\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote {\\r\\n  margin-left: 25%;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-local .CodeMirror {\\r\\n  background-color: var(--jp-merge-local-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote .CodeMirror {\\r\\n  background-color: var(--jp-merge-remote-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-gutter-picker {\\r\\n  width: 16px;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-gutter-conflict {\\r\\n  width: 16px;\\r\\n  color: #b00;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-conflict {\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane.CodeMirror-merge-pane-local.jp-mod-missing {\\r\\n  background-color: var(--jp-merge-local-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .CodeMirror-merge-pane.CodeMirror-merge-pane-remote.jp-mod-missing {\\r\\n  background-color: var(--jp-merge-remote-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cell-merge.jp-mod-todelete > .p-Widget:not(.jp-Merge-cellHeader) {\\r\\n  opacity: 0.5;\\r\\n  filter: alpha(opacity = 50);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cell-merge.jp-mod-todelete .jp-Merge-cellHeader {\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n}\\r\\n\\r\\n.jp-Cell-merge.jp-mod-clearoutputs .jp-Cellrow-outputs {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs .jp-OutputArea {\\r\\n  border: #666 solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs .p-FlexPanel:last-of-type .jp-OutputArea {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs.jp-conflicted-outputs .jp-CollapsiblePanel-header {\\r\\n  background-color: var(--jp-merge-both-color2)\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs.jp-conflicted-outputs .jp-CollapsiblePanel-header {\\r\\n  background-color: var(--jp-merge-both-color2);\\r\\n  border-top: var(--jp-merge-both-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs.jp-conflicted-outputs {\\r\\n    border: var(--jp-merge-both-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-conflicted-outputs-button {\\r\\n  display: inline;\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-renderedOutput .jp-Merge-local {\\r\\n  background-color: var(--jp-merge-local-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-renderedOutput .jp-Merge-remote {\\r\\n  background-color: var(--jp-merge-remote-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Cellrow-outputs .jp-OutputArea {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  flex-wrap: nowrap;\\r\\n  min-height: 2em;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Merge-oneway-local .jp-Cellrow-outputs,\\r\\n.jp-Notebook-merge .jp-Merge-oneway-remote .jp-Cellrow-outputs {\\r\\n  border-top: var(--jp-nbdime-output-color1) solid 1pt;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Output:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.jp-Merge-notebook-controls {\\r\\n  justify-content: flex-end;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 5px;\\r\\n  background-color: var(--jp-layout-color2);\\r\\n  border: solid 1px var(--jp-ui-font-color2);\\r\\n}\\r\\n\\r\\n.jp-Merge-notebook-controls:empty {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge label[disabled] {\\r\\n  color: var(--jp-ui-font-color3);\\r\\n}\\r\\n\\r\\n/* This fixes an alignment issue between gutter background\\r\\n and gutter elements, but not sure *why* this is needed.\\r\\n Might be fixing a symptom rather than the cause, but it\\r\\n works for now.\\r\\n */\\r\\n.jp-Notebook-merge .CodeMirror-gutter-wrapper {\\r\\n  margin-left: calc(-1 * var(--jp-code-padding));\\r\\n}\\r\\n\\r\\n\\r\\n/* Display chunks of conflicted cell with a start and end marker.\\r\\n Add a pseudo-element at start of chunk with button to mark chunk as resolved\\r\\n*/\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells {\\r\\n  border: solid 2px var(--jp-error-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells .jp-conflicted-cells-header {\\r\\n  background-color: var(--jp-error-color3);\\r\\n  display: flex;\\r\\n  padding-top: .2em;\\r\\n  padding-bottom: .2em;\\r\\n  padding-left: 2em;\\r\\n  padding-right: 2em;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells .jp-conflicted-cells-button {\\r\\n  margin-left: auto;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-conflicted-cells > .jp-DragPanel {\\r\\n  padding: 4px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*\\r\\nOutput mimetype selection:\\r\\n*/\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, 0);\\r\\n  background-color: var(--jp-layout-color1);\\r\\n  color: var(--jp-ui-font-color1);\\r\\n  padding: 3px 5px;\\r\\n  border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\r\\n  z-index: 10;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel:hover .jp-Diff-outputMenu {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-trustOutputButton {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-trustCandidate .jp-Diff-trustOutputButton {\\r\\n  display: initial;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel:not(.jp-Diff-trustCandidate) .jp-diff-base64Output + .jp-Diff-outputMenu {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-outputPanel .jp-Diff-outputMenu > :not(:first-child) {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.jp-Diff-outputsContainer > .p-Widget:not(:last-child) {\\r\\n  padding-bottom: 6px;\\r\\n  min-height: 2em;\\r\\n  border-bottom: var(--jp-border-width) solid var(--jp-nbdime-output-color2);\\r\\n}\\r\\n\\r\\n.jp-Notebook-merge .jp-Diff-renderedOutput {\\r\\n  /* Ensure output is always large enough to show menu */\\r\\n  min-height: 2em;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n:root {\\r\\n  --codemirror-border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\r\\n\\r\\n  --jp-nbdime-output-color1: rgba(0, 141, 255, 0.7);\\r\\n  --jp-nbdime-output-color2: rgba(0, 141, 255, 0.5);\\r\\n  --jp-nbdime-output-color3: rgba(0, 141, 255, 0.3);\\r\\n\\r\\n  --jp-diff-added-color0: rgba(0, 200, 20, 0.6);\\r\\n  --jp-diff-added-color1: rgba(0, 200, 20, 0.3);\\r\\n  --jp-diff-added-color2: rgba(0, 200, 20, 0.3);\\r\\n\\r\\n  --jp-diff-deleted-color0: rgba(240, 20, 0, 0.55);\\r\\n  --jp-diff-deleted-color1: rgba(255, 20, 0, 0.3);\\r\\n  --jp-diff-deleted-color2: rgba(255, 20, 0, 0.3);\\r\\n\\r\\n  --jp-merge-local-color1: #cbcbf8;\\r\\n  --jp-merge-local-color2: #ececff;\\r\\n  --jp-merge-local-color3: #e6e6ff;\\r\\n\\r\\n  --jp-merge-remote-color1: #beb;\\r\\n  --jp-merge-remote-color2: #dfd;\\r\\n  --jp-merge-remote-color3: #d8f9d8;\\r\\n\\r\\n  --jp-merge-both-color1: #f88888;\\r\\n  --jp-merge-both-color2: #ffdddd;\\r\\n\\r\\n  --jp-merge-either-color1: #aee;\\r\\n  --jp-merge-either-color2: #cff4f4;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime/lib/styles/variables.css\"],\"names\":[],\"mappings\":\";AACA;EACE,oFAAoF;;EAEpF,iDAAiD;EACjD,iDAAiD;EACjD,iDAAiD;;EAEjD,6CAA6C;EAC7C,6CAA6C;EAC7C,6CAA6C;;EAE7C,gDAAgD;EAChD,+CAA+C;EAC/C,+CAA+C;;EAE/C,gCAAgC;EAChC,gCAAgC;EAChC,gCAAgC;;EAEhC,8BAA8B;EAC9B,8BAA8B;EAC9B,iCAAiC;;EAEjC,+BAA+B;EAC/B,+BAA+B;;EAE/B,8BAA8B;EAC9B,iCAAiC;AACnC\",\"sourcesContent\":[\"\\r\\n:root {\\r\\n  --codemirror-border: var(--jp-border-width) solid var(--jp-cell-editor-border-color);\\r\\n\\r\\n  --jp-nbdime-output-color1: rgba(0, 141, 255, 0.7);\\r\\n  --jp-nbdime-output-color2: rgba(0, 141, 255, 0.5);\\r\\n  --jp-nbdime-output-color3: rgba(0, 141, 255, 0.3);\\r\\n\\r\\n  --jp-diff-added-color0: rgba(0, 200, 20, 0.6);\\r\\n  --jp-diff-added-color1: rgba(0, 200, 20, 0.3);\\r\\n  --jp-diff-added-color2: rgba(0, 200, 20, 0.3);\\r\\n\\r\\n  --jp-diff-deleted-color0: rgba(240, 20, 0, 0.55);\\r\\n  --jp-diff-deleted-color1: rgba(255, 20, 0, 0.3);\\r\\n  --jp-diff-deleted-color2: rgba(255, 20, 0, 0.3);\\r\\n\\r\\n  --jp-merge-local-color1: #cbcbf8;\\r\\n  --jp-merge-local-color2: #ececff;\\r\\n  --jp-merge-local-color3: #e6e6ff;\\r\\n\\r\\n  --jp-merge-remote-color1: #beb;\\r\\n  --jp-merge-remote-color2: #dfd;\\r\\n  --jp-merge-remote-color3: #d8f9d8;\\r\\n\\r\\n  --jp-merge-both-color1: #f88888;\\r\\n  --jp-merge-both-color2: #ffdddd;\\r\\n\\r\\n  --jp-merge-either-color1: #aee;\\r\\n  --jp-merge-either-color2: #cff4f4;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n.p-FlexPanel {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-left-to-right {\\r\\n  flex-direction: row;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-right-to-left {\\r\\n  flex-direction: row-reverse;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-top-to-bottom {\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-bottom-to-top {\\r\\n  flex-direction: column-reverse;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/nbdime/lib/upstreaming/flexpanel.css\"],\"names\":[],\"mappings\":\";AACA;EACE,aAAa;AACf;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,8BAA8B;AAChC\",\"sourcesContent\":[\"\\r\\n.p-FlexPanel {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-left-to-right {\\r\\n  flex-direction: row;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-right-to-left {\\r\\n  flex-direction: row-reverse;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-top-to-bottom {\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.p-FlexPanel.p-mod-bottom-to-top {\\r\\n  flex-direction: column-reverse;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","'use strict';\n\nvar json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nvar isArray = Array.isArray || function (x) {\n\treturn {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n\tvar has = Object.prototype.hasOwnProperty || function () { return true; };\n\tvar keys = [];\n\tfor (var key in obj) {\n\t\tif (has.call(obj, key)) { keys.push(key); }\n\t}\n\treturn keys;\n};\n\nmodule.exports = function (obj, opts) {\n\tif (!opts) { opts = {}; }\n\tif (typeof opts === 'function') { opts = { cmp: opts }; }\n\tvar space = opts.space || '';\n\tif (typeof space === 'number') { space = Array(space + 1).join(' '); }\n\tvar cycles = typeof opts.cycles === 'boolean' ? opts.cycles : false;\n\tvar replacer = opts.replacer || function (key, value) { return value; };\n\n\tvar cmp = opts.cmp && (function (f) {\n\t\treturn function (node) {\n\t\t\treturn function (a, b) {\n\t\t\t\tvar aobj = { key: a, value: node[a] };\n\t\t\t\tvar bobj = { key: b, value: node[b] };\n\t\t\t\treturn f(aobj, bobj);\n\t\t\t};\n\t\t};\n\t}(opts.cmp));\n\n\tvar seen = [];\n\treturn (function stringify(parent, key, node, level) {\n\t\tvar indent = space ? '\\n' + new Array(level + 1).join(space) : '';\n\t\tvar colonSeparator = space ? ': ' : ':';\n\n\t\tif (node && node.toJSON && typeof node.toJSON === 'function') {\n\t\t\tnode = node.toJSON();\n\t\t}\n\n\t\tnode = replacer.call(parent, key, node);\n\n\t\tif (node === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof node !== 'object' || node === null) {\n\t\t\treturn json.stringify(node);\n\t\t}\n\t\tif (isArray(node)) {\n\t\t\tvar out = [];\n\t\t\tfor (var i = 0; i < node.length; i++) {\n\t\t\t\tvar item = stringify(node, i, node[i], level + 1) || json.stringify(null);\n\t\t\t\tout.push(indent + space + item);\n\t\t\t}\n\t\t\treturn '[' + out.join(',') + indent + ']';\n\t\t}\n\n\t\tif (seen.indexOf(node) !== -1) {\n\t\t\tif (cycles) { return json.stringify('__cycle__'); }\n\t\t\tthrow new TypeError('Converting circular structure to JSON');\n\t\t} else { seen.push(node); }\n\n\t\tvar keys = objectKeys(node).sort(cmp && cmp(node));\n\t\tvar out = [];\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar value = stringify(node, key, node[key], level + 1);\n\n\t\t\tif (!value) { continue; }\n\n\t\t\tvar keyValue = json.stringify(key)\n\t\t\t\t\t+ colonSeparator\n\t\t\t\t\t+ value;\n\n\t\t\tout.push(indent + space + keyValue);\n\t\t}\n\t\tseen.splice(seen.indexOf(node), 1);\n\t\treturn '{' + out.join(',') + indent + '}';\n\n\t}({ '': obj }, '', obj, 0));\n};\n","'use strict';\n\nexports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","'use strict';\n\nvar at; // The index of the current character\nvar ch; // The current character\nvar escapee = {\n\t'\"': '\"',\n\t'\\\\': '\\\\',\n\t'/': '/',\n\tb: '\\b',\n\tf: '\\f',\n\tn: '\\n',\n\tr: '\\r',\n\tt: '\\t'\n};\nvar text;\n\n// Call error when something is wrong.\nfunction error(m) {\n\tthrow {\n\t\tname: 'SyntaxError',\n\t\tmessage: m,\n\t\tat: at,\n\t\ttext: text\n\t};\n}\n\nfunction next(c) {\n\t// If a c parameter is provided, verify that it matches the current character.\n\tif (c && c !== ch) {\n\t\terror(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n\t}\n\n\t// Get the next character. When there are no more characters, return the empty string.\n\n\tch = text.charAt(at);\n\tat += 1;\n\treturn ch;\n}\n\nfunction number() {\n\t// Parse a number value.\n\tvar num;\n\tvar str = '';\n\n\tif (ch === '-') {\n\t\tstr = '-';\n\t\tnext('-');\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tstr += ch;\n\t\tnext();\n\t}\n\tif (ch === '.') {\n\t\tstr += '.';\n\t\twhile (next() && ch >= '0' && ch <= '9') {\n\t\t\tstr += ch;\n\t\t}\n\t}\n\tif (ch === 'e' || ch === 'E') {\n\t\tstr += ch;\n\t\tnext();\n\t\tif (ch === '-' || ch === '+') {\n\t\t\tstr += ch;\n\t\t\tnext();\n\t\t}\n\t\twhile (ch >= '0' && ch <= '9') {\n\t\t\tstr += ch;\n\t\t\tnext();\n\t\t}\n\t}\n\tnum = Number(str);\n\tif (!isFinite(num)) {\n\t\terror('Bad number');\n\t}\n\treturn num;\n}\n\nfunction string() {\n\t// Parse a string value.\n\tvar hex;\n\tvar i;\n\tvar str = '';\n\tvar uffff;\n\n\t// When parsing for string values, we must look for \" and \\ characters.\n\tif (ch === '\"') {\n\t\twhile (next()) {\n\t\t\tif (ch === '\"') {\n\t\t\t\tnext();\n\t\t\t\treturn str;\n\t\t\t} else if (ch === '\\\\') {\n\t\t\t\tnext();\n\t\t\t\tif (ch === 'u') {\n\t\t\t\t\tuffff = 0;\n\t\t\t\t\tfor (i = 0; i < 4; i += 1) {\n\t\t\t\t\t\thex = parseInt(next(), 16);\n\t\t\t\t\t\tif (!isFinite(hex)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuffff = (uffff * 16) + hex;\n\t\t\t\t\t}\n\t\t\t\t\tstr += String.fromCharCode(uffff);\n\t\t\t\t} else if (typeof escapee[ch] === 'string') {\n\t\t\t\t\tstr += escapee[ch];\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr += ch;\n\t\t\t}\n\t\t}\n\t}\n\terror('Bad string');\n}\n\n// Skip whitespace.\nfunction white() {\n\twhile (ch && ch <= ' ') {\n\t\tnext();\n\t}\n}\n\n// true, false, or null.\nfunction word() {\n\tswitch (ch) {\n\t\tcase 't':\n\t\t\tnext('t');\n\t\t\tnext('r');\n\t\t\tnext('u');\n\t\t\tnext('e');\n\t\t\treturn true;\n\t\tcase 'f':\n\t\t\tnext('f');\n\t\t\tnext('a');\n\t\t\tnext('l');\n\t\t\tnext('s');\n\t\t\tnext('e');\n\t\t\treturn false;\n\t\tcase 'n':\n\t\t\tnext('n');\n\t\t\tnext('u');\n\t\t\tnext('l');\n\t\t\tnext('l');\n\t\t\treturn null;\n\t\tdefault:\n\t\t\terror(\"Unexpected '\" + ch + \"'\");\n\t}\n}\n\n// Parse an array value.\nfunction array() {\n\tvar arr = [];\n\n\tif (ch === '[') {\n\t\tnext('[');\n\t\twhite();\n\t\tif (ch === ']') {\n\t\t\tnext(']');\n\t\t\treturn arr; // empty array\n\t\t}\n\t\twhile (ch) {\n\t\t\tarr.push(value()); // eslint-disable-line no-use-before-define\n\t\t\twhite();\n\t\t\tif (ch === ']') {\n\t\t\t\tnext(']');\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tnext(',');\n\t\t\twhite();\n\t\t}\n\t}\n\terror('Bad array');\n}\n\n// Parse an object value.\nfunction object() {\n\tvar key;\n\tvar obj = {};\n\n\tif (ch === '{') {\n\t\tnext('{');\n\t\twhite();\n\t\tif (ch === '}') {\n\t\t\tnext('}');\n\t\t\treturn obj; // empty object\n\t\t}\n\t\twhile (ch) {\n\t\t\tkey = string();\n\t\t\twhite();\n\t\t\tnext(':');\n\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\terror('Duplicate key \"' + key + '\"');\n\t\t\t}\n\t\t\tobj[key] = value(); // eslint-disable-line no-use-before-define\n\t\t\twhite();\n\t\t\tif (ch === '}') {\n\t\t\t\tnext('}');\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tnext(',');\n\t\t\twhite();\n\t\t}\n\t}\n\terror('Bad object');\n}\n\n// Parse a JSON value. It could be an object, an array, a string, a number, or a word.\nfunction value() {\n\twhite();\n\tswitch (ch) {\n\t\tcase '{':\n\t\t\treturn object();\n\t\tcase '[':\n\t\t\treturn array();\n\t\tcase '\"':\n\t\t\treturn string();\n\t\tcase '-':\n\t\t\treturn number();\n\t\tdefault:\n\t\t\treturn ch >= '0' && ch <= '9' ? number() : word();\n\t}\n}\n\n// Return the json_parse function. It will have access to all of the above functions and variables.\nmodule.exports = function (source, reviver) {\n\tvar result;\n\n\ttext = source;\n\tat = 0;\n\tch = ' ';\n\tresult = value();\n\twhite();\n\tif (ch) {\n\t\terror('Syntax error');\n\t}\n\n\t// If there is a reviver function, we recursively walk the new structure,\n\t// passing each name/value pair to the reviver function for possible\n\t// transformation, starting with a temporary root object that holds the result\n\t// in an empty key. If there is not a reviver function, we simply return the\n\t// result.\n\n\treturn typeof reviver === 'function' ? (function walk(holder, key) {\n\t\tvar k;\n\t\tvar v;\n\t\tvar val = holder[key];\n\t\tif (val && typeof val === 'object') {\n\t\t\tfor (k in value) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(val, k)) {\n\t\t\t\t\tv = walk(val, k);\n\t\t\t\t\tif (typeof v === 'undefined') {\n\t\t\t\t\t\tdelete val[k];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval[k] = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn reviver.call(holder, key, val);\n\t}({ '': result }, '')) : result;\n};\n","'use strict';\n\nvar escapable = /[\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\nvar gap;\nvar indent;\nvar meta = { // table of character substitutions\n\t'\\b': '\\\\b',\n\t'\\t': '\\\\t',\n\t'\\n': '\\\\n',\n\t'\\f': '\\\\f',\n\t'\\r': '\\\\r',\n\t'\"': '\\\\\"',\n\t'\\\\': '\\\\\\\\'\n};\nvar rep;\n\nfunction quote(string) {\n\t// If the string contains no control characters, no quote characters, and no\n\t// backslash characters, then we can safely slap some quotes around it.\n\t// Otherwise we must also replace the offending characters with safe escape sequences.\n\n\tescapable.lastIndex = 0;\n\treturn escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n\t\tvar c = meta[a];\n\t\treturn typeof c === 'string' ? c\n\t\t\t: '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n\t}) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n\t// Produce a string from holder[key].\n\tvar i; // The loop counter.\n\tvar k; // The member key.\n\tvar v; // The member value.\n\tvar length;\n\tvar mind = gap;\n\tvar partial;\n\tvar value = holder[key];\n\n\t// If the value has a toJSON method, call it to obtain a replacement value.\n\tif (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n\t\tvalue = value.toJSON(key);\n\t}\n\n\t// If we were called with a replacer function, then call the replacer to obtain a replacement value.\n\tif (typeof rep === 'function') {\n\t\tvalue = rep.call(holder, key, value);\n\t}\n\n\t// What happens next depends on the value's type.\n\tswitch (typeof value) {\n\t\tcase 'string':\n\t\t\treturn quote(value);\n\n\t\tcase 'number':\n\t\t\t// JSON numbers must be finite. Encode non-finite numbers as null.\n\t\t\treturn isFinite(value) ? String(value) : 'null';\n\n\t\tcase 'boolean':\n\t\tcase 'null':\n\t\t\t// If the value is a boolean or null, convert it to a string. Note:\n\t\t\t// typeof null does not produce 'null'. The case is included here in\n\t\t\t// the remote chance that this gets fixed someday.\n\t\t\treturn String(value);\n\n\t\tcase 'object':\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t}\n\t\t\tgap += indent;\n\t\t\tpartial = [];\n\n\t\t\t// Array.isArray\n\t\t\tif (Object.prototype.toString.apply(value) === '[object Array]') {\n\t\t\t\tlength = value.length;\n\t\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\t\tpartial[i] = str(i, value) || 'null';\n\t\t\t\t}\n\n\t\t\t\t// Join all of the elements together, separated with commas, and wrap them in brackets.\n\t\t\t\tv = partial.length === 0 ? '[]' : gap\n\t\t\t\t\t? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n\t\t\t\t\t: '[' + partial.join(',') + ']';\n\t\t\t\tgap = mind;\n\t\t\t\treturn v;\n\t\t\t}\n\n\t\t\t// If the replacer is an array, use it to select the members to be stringified.\n\t\t\tif (rep && typeof rep === 'object') {\n\t\t\t\tlength = rep.length;\n\t\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\t\tk = rep[i];\n\t\t\t\t\tif (typeof k === 'string') {\n\t\t\t\t\t\tv = str(k, value);\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tpartial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Otherwise, iterate through all of the keys in the object.\n\t\t\t\tfor (k in value) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(value, k)) {\n\t\t\t\t\t\tv = str(k, value);\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tpartial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Join all of the member texts together, separated with commas, and wrap them in braces.\n\n\t\t\tv = partial.length === 0 ? '{}' : gap\n\t\t\t\t? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n\t\t\t\t: '{' + partial.join(',') + '}';\n\t\t\tgap = mind;\n\t\t\treturn v;\n\t\tdefault:\n\t}\n}\n\nmodule.exports = function (value, replacer, space) {\n\tvar i;\n\tgap = '';\n\tindent = '';\n\n\t// If the space parameter is a number, make an indent string containing that many spaces.\n\tif (typeof space === 'number') {\n\t\tfor (i = 0; i < space; i += 1) {\n\t\t\tindent += ' ';\n\t\t}\n\t} else if (typeof space === 'string') {\n\t\t// If the space parameter is a string, it will be used as the indent string.\n\t\tindent = space;\n\t}\n\n\t// If there is a replacer, it must be a function or an array. Otherwise, throw an error.\n\trep = replacer;\n\tif (\n\t\treplacer\n\t\t&& typeof replacer !== 'function'\n\t\t&& (typeof replacer !== 'object' || typeof replacer.length !== 'number')\n\t) {\n\t\tthrow new Error('JSON.stringify');\n\t}\n\n\t// Make a fake root object containing our value under the key of ''.\n\t// Return the result of stringifying the value.\n\treturn str('', { '': value });\n};\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isNbInGit = exports.diffNotebookGit = exports.diffNotebookCheckpoint = exports.diffNotebook = void 0;\r\nconst coreutils_1 = require(\"@jupyterlab/coreutils\");\r\nconst services_1 = require(\"@jupyterlab/services\");\r\nconst widget_1 = require(\"./widget\");\r\nconst utils_1 = require(\"./utils\");\r\nfunction diffNotebook(args) {\r\n    let { base, remote } = args;\r\n    let widget = new widget_1.NbdimeWidget(args);\r\n    widget.title.label = `Diff: ${base} ↔ ${remote}`;\r\n    widget.title.caption = `Local: ${base}\\nRemote: '${remote}'`;\r\n    return widget;\r\n}\r\nexports.diffNotebook = diffNotebook;\r\nfunction diffNotebookCheckpoint(args) {\r\n    const { path, rendermime, hideUnchanged } = args;\r\n    let nb_dir = coreutils_1.PathExt.dirname(path);\r\n    let name = coreutils_1.PathExt.basename(path, '.ipynb');\r\n    let base = coreutils_1.PathExt.join(nb_dir, name + '.ipynb');\r\n    let widget = new widget_1.NbdimeWidget({\r\n        base,\r\n        rendermime,\r\n        baseLabel: 'Checkpoint',\r\n        hideUnchanged,\r\n    });\r\n    widget.title.label = `Diff checkpoint: ${name}`;\r\n    widget.title.caption = `Local: latest checkpoint\\nRemote: '${path}'`;\r\n    widget.title.iconClass = 'fa fa-clock-o jp-fa-tabIcon';\r\n    return widget;\r\n}\r\nexports.diffNotebookCheckpoint = diffNotebookCheckpoint;\r\nfunction diffNotebookGit(args) {\r\n    const { path, rendermime, hideUnchanged } = args;\r\n    let name = coreutils_1.PathExt.basename(path, '.ipynb');\r\n    let widget = new widget_1.NbdimeWidget({ base: path, rendermime, hideUnchanged });\r\n    widget.title.label = `Diff git: ${name}`;\r\n    widget.title.caption = `Local: git HEAD\\nRemote: '${path}'`;\r\n    widget.title.iconClass = 'fa fa-git jp-fa-tabIcon';\r\n    return widget;\r\n}\r\nexports.diffNotebookGit = diffNotebookGit;\r\nfunction isNbInGit(args) {\r\n    let request = {\r\n        method: 'POST',\r\n        body: JSON.stringify(args),\r\n    };\r\n    let settings = services_1.ServerConnection.makeSettings();\r\n    return services_1.ServerConnection.makeRequest(coreutils_1.URLExt.join(utils_1.urlRStrip(settings.baseUrl), '/nbdime/api/isgit'), request, settings).then((response) => {\r\n        if (!response.ok) {\r\n            return Promise.reject(response);\r\n        }\r\n        return response.json();\r\n    }).then((data) => {\r\n        return data['is_git'];\r\n    });\r\n}\r\nexports.isNbInGit = isNbInGit;\r\n//# sourceMappingURL=actions.js.map","\"use strict\";\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst plugin_1 = require(\"./plugin\");\r\nrequire(\"nbdime/lib/common/collapsible.css\");\r\nrequire(\"nbdime/lib/upstreaming/flexpanel.css\");\r\nrequire(\"nbdime/lib/common/dragpanel.css\");\r\nrequire(\"nbdime/lib/styles/variables.css\");\r\nrequire(\"nbdime/lib/styles/common.css\");\r\nrequire(\"nbdime/lib/styles/diff.css\");\r\nrequire(\"nbdime/lib/styles/merge.css\");\r\nrequire(\"../style/index.css\");\r\nexports.default = plugin_1.default;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CommandIDs = exports.NBDiffExtension = void 0;\r\nconst apputils_1 = require(\"@jupyterlab/apputils\");\r\nconst coreutils_1 = require(\"@jupyterlab/coreutils\");\r\nconst rendermime_1 = require(\"@jupyterlab/rendermime\");\r\nconst notebook_1 = require(\"@jupyterlab/notebook\");\r\nconst settingregistry_1 = require(\"@jupyterlab/settingregistry\");\r\nconst algorithm_1 = require(\"@lumino/algorithm\");\r\nconst disposable_1 = require(\"@lumino/disposable\");\r\nconst actions_1 = require(\"./actions\");\r\nconst pluginId = 'nbdime-jupyterlab:plugin';\r\n/**\r\n * Error message if the nbdime API is unavailable.\r\n */\r\nconst serverMissingMsg = 'Unable to query nbdime API. Is the server extension enabled?';\r\nconst INITIAL_NETWORK_RETRY = 2; // ms\r\nclass NBDiffExtension {\r\n    /**\r\n     *\r\n     */\r\n    constructor(commands) {\r\n        this.commands = commands;\r\n    }\r\n    /**\r\n     * Create a new extension object.\r\n     */\r\n    createNew(nb, context) {\r\n        // Create extension here\r\n        // Add buttons to toolbar\r\n        let buttons = [];\r\n        let insertionPoint = -1;\r\n        algorithm_1.find(nb.toolbar.children(), (tbb, index) => {\r\n            if (tbb.hasClass('jp-Notebook-toolbarCellType')) {\r\n                insertionPoint = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        let i = 1;\r\n        for (let id of [CommandIDs.diffNotebookCheckpoint, CommandIDs.diffNotebookGit]) {\r\n            let button = new apputils_1.CommandToolbarButton({\r\n                commands: this.commands,\r\n                id\r\n            });\r\n            button.addClass('nbdime-toolbarButton');\r\n            if (insertionPoint >= 0) {\r\n                nb.toolbar.insertItem(insertionPoint + i++, this.commands.label(id), button);\r\n            }\r\n            else {\r\n                nb.toolbar.addItem(this.commands.label(id), button);\r\n            }\r\n            buttons.push(button);\r\n        }\r\n        return new disposable_1.DisposableDelegate(() => {\r\n            // Cleanup extension here\r\n            for (let btn of buttons) {\r\n                btn.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.NBDiffExtension = NBDiffExtension;\r\nvar CommandIDs;\r\n(function (CommandIDs) {\r\n    CommandIDs.diffNotebook = 'nbdime:diff';\r\n    CommandIDs.diffNotebookGit = 'nbdime:diff-git';\r\n    CommandIDs.diffNotebookCheckpoint = 'nbdime:diff-checkpoint';\r\n})(CommandIDs = exports.CommandIDs || (exports.CommandIDs = {}));\r\nfunction addCommands(app, tracker, rendermime, settings) {\r\n    const { commands, shell } = app;\r\n    // Whether we have our server extension available\r\n    let hasAPI = true;\r\n    /**\r\n     * Whether there is an active notebook.\r\n     */\r\n    function hasWidget() {\r\n        return tracker.currentWidget !== null;\r\n    }\r\n    /**\r\n     * Whether there is an active notebook.\r\n     */\r\n    function baseEnabled() {\r\n        return hasAPI && tracker.currentWidget !== null;\r\n    }\r\n    // This allows quicker checking, but if someone creates/removes\r\n    // a repo during the session, this will become incorrect\r\n    let lut_known_git = {};\r\n    let networkRetry = INITIAL_NETWORK_RETRY;\r\n    /**\r\n     * Whether the notebook is in a git repository.\r\n     */\r\n    function hasGitNotebook() {\r\n        if (!baseEnabled()) {\r\n            return false;\r\n        }\r\n        let path = tracker.currentWidget.context.path;\r\n        let dir = coreutils_1.PathExt.dirname(path);\r\n        let known_git = lut_known_git[dir];\r\n        if (known_git === undefined) {\r\n            const inGitPromise = actions_1.isNbInGit({ path: dir });\r\n            inGitPromise.then(inGit => {\r\n                networkRetry = INITIAL_NETWORK_RETRY;\r\n                lut_known_git[dir] = inGit;\r\n                // Only update if false, since it is left enabled while waiting\r\n                if (!inGit) {\r\n                    commands.notifyCommandChanged(CommandIDs.diffNotebookGit);\r\n                }\r\n            });\r\n            inGitPromise.catch((reason) => {\r\n                hasAPI = reason.status !== undefined && reason.status !== 404;\r\n                setTimeout(() => {\r\n                    networkRetry *= 2;\r\n                    commands.notifyCommandChanged(CommandIDs.diffNotebook);\r\n                    commands.notifyCommandChanged(CommandIDs.diffNotebookCheckpoint);\r\n                    commands.notifyCommandChanged(CommandIDs.diffNotebookGit);\r\n                }, networkRetry);\r\n            });\r\n            // Leave button enabled while unsure\r\n            return true;\r\n        }\r\n        return known_git;\r\n    }\r\n    function erroredGen(text) {\r\n        return () => {\r\n            if (hasAPI) {\r\n                return text;\r\n            }\r\n            return serverMissingMsg;\r\n        };\r\n    }\r\n    let hideUnchanged = settings.get('hideUnchanged').composite !== false;\r\n    settings.changed.connect(() => {\r\n        hideUnchanged = settings.get('hideUnchanged').composite !== false;\r\n    });\r\n    commands.addCommand(CommandIDs.diffNotebook, {\r\n        execute: args => {\r\n            // TODO: Check args for base/remote\r\n            // if missing, prompt with dialog.\r\n            //let content = current.notebook;\r\n            //diffNotebook({base, remote});\r\n        },\r\n        label: erroredGen('Notebook diff'),\r\n        caption: erroredGen('Display nbdiff between two notebooks'),\r\n        isEnabled: baseEnabled,\r\n        icon: 'jp-Icon jp-Icon-16 action-notebook-diff action-notebook-diff-notebooks',\r\n        iconLabel: 'nbdiff',\r\n    });\r\n    commands.addCommand(CommandIDs.diffNotebookCheckpoint, {\r\n        execute: args => {\r\n            let current = tracker.currentWidget;\r\n            if (!current) {\r\n                return;\r\n            }\r\n            let widget = actions_1.diffNotebookCheckpoint({\r\n                path: current.context.path,\r\n                rendermime,\r\n                hideUnchanged,\r\n            });\r\n            shell.add(widget);\r\n            if (args['activate'] !== false) {\r\n                shell.activateById(widget.id);\r\n            }\r\n        },\r\n        label: erroredGen('Notebook checkpoint diff'),\r\n        caption: erroredGen('Display nbdiff from checkpoint to currently saved version'),\r\n        isEnabled: baseEnabled,\r\n        iconClass: 'jp-Icon jp-Icon-16 fa fa-clock-o action-notebook-diff action-notebook-diff-checkpoint',\r\n    });\r\n    commands.addCommand(CommandIDs.diffNotebookGit, {\r\n        execute: args => {\r\n            let current = tracker.currentWidget;\r\n            if (!current) {\r\n                return;\r\n            }\r\n            let widget = actions_1.diffNotebookGit({\r\n                path: current.context.path,\r\n                rendermime,\r\n                hideUnchanged,\r\n            });\r\n            shell.add(widget);\r\n            if (args['activate'] !== false) {\r\n                shell.activateById(widget.id);\r\n            }\r\n        },\r\n        label: erroredGen('Notebook Git diff'),\r\n        caption: erroredGen('Display nbdiff from git HEAD to currently saved version'),\r\n        isEnabled: hasGitNotebook,\r\n        iconClass: 'jp-Icon jp-Icon-16 fa fa-git action-notebook-diff action-notebook-diff-git',\r\n    });\r\n}\r\n/**\r\n * The notebook diff provider.\r\n */\r\nconst nbDiffProvider = {\r\n    id: pluginId,\r\n    requires: [notebook_1.INotebookTracker, rendermime_1.IRenderMimeRegistry, settingregistry_1.ISettingRegistry],\r\n    activate: activateWidgetExtension,\r\n    autoStart: true\r\n};\r\nexports.default = nbDiffProvider;\r\n/**\r\n * Activate the widget extension.\r\n */\r\nfunction activateWidgetExtension(app, tracker, rendermime, settingsRegistry) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let { commands, docRegistry } = app;\r\n        let extension = new NBDiffExtension(commands);\r\n        docRegistry.addWidgetExtension('Notebook', extension);\r\n        const settings = yield settingsRegistry.load(pluginId);\r\n        addCommands(app, tracker, rendermime, settings);\r\n        // Update the command registry when the notebook state changes.\r\n        tracker.currentChanged.connect(() => {\r\n            commands.notifyCommandChanged(CommandIDs.diffNotebookGit);\r\n            if (tracker.size <= 1) {\r\n                commands.notifyCommandChanged(CommandIDs.diffNotebook);\r\n                commands.notifyCommandChanged(CommandIDs.diffNotebookCheckpoint);\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=plugin.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.urlRStrip = void 0;\r\nfunction urlRStrip(target) {\r\n    if (target.slice(-1) === '/') {\r\n        return target.slice(0, -1);\r\n    }\r\n    return target;\r\n}\r\nexports.urlRStrip = urlRStrip;\r\n//# sourceMappingURL=utils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NbdimeWidget = void 0;\r\nconst services_1 = require(\"@jupyterlab/services\");\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\nconst model_1 = require(\"nbdime/lib/diff/model\");\r\nconst widget_1 = require(\"nbdime/lib/diff/widget\");\r\nconst common_1 = require(\"nbdime/lib/diff/widget/common\");\r\nconst request_1 = require(\"nbdime/lib/request\");\r\n/**\r\n * Class of the outermost widget, the draggable tab\r\n */\r\nconst NBDIME_CLASS = 'nbdime-Widget';\r\n/**\r\n * Class of the root of the actual diff, the scroller element\r\n */\r\nconst ROOT_CLASS = 'nbdime-root';\r\n/**\r\n * DOM class for whether or not to hide unchanged cells\r\n */\r\nconst HIDE_UNCHANGED_CLASS = 'jp-mod-hideUnchanged';\r\nclass NbdimeWidget extends widgets_1.Panel {\r\n    /**\r\n     *\r\n     */\r\n    constructor(options) {\r\n        super();\r\n        this.addClass(NBDIME_CLASS);\r\n        this.base = options.base;\r\n        this.remote = options.remote;\r\n        this.rendermime = options.rendermime;\r\n        let header = Private.diffHeader(options);\r\n        this.addWidget(header);\r\n        this.scroller = new widgets_1.Panel();\r\n        this.scroller.addClass(ROOT_CLASS);\r\n        this.scroller.node.tabIndex = -1;\r\n        this.addWidget(this.scroller);\r\n        let hideUnchangedChk = header.node.getElementsByClassName('nbdime-hide-unchanged')[0];\r\n        hideUnchangedChk.checked = options.hideUnchanged === undefined\r\n            ? true : options.hideUnchanged;\r\n        hideUnchangedChk.onchange = () => {\r\n            Private.toggleShowUnchanged(this.scroller, !hideUnchangedChk.checked);\r\n        };\r\n        if (options.hideUnchanged) {\r\n            Private.toggleShowUnchanged(this.scroller, false);\r\n        }\r\n        let args;\r\n        if (this.remote) {\r\n            args = { base: this.base, remote: this.remote };\r\n        }\r\n        else if (options.baseLabel === 'Checkpoint') {\r\n            args = { base: `checkpoint:${this.base}` };\r\n        }\r\n        else {\r\n            args = { base: `git:${this.base}` };\r\n        }\r\n        request_1.requestApiJson(services_1.ServerConnection.makeSettings().baseUrl, 'nbdime/api/diff', args, this.onData.bind(this), this.onError.bind(this));\r\n        this.id = `nbdime-${JSON.stringify(args)}`;\r\n        this.title.closable = true;\r\n        return this;\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.rendermime = null;\r\n        this.header = null;\r\n        this.scroller = null;\r\n    }\r\n    /**\r\n     * Handle `'activate-request'` messages.\r\n     */\r\n    onActivateRequest(msg) {\r\n        this.scroller.node.focus();\r\n    }\r\n    onData(data) {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        let base = data['base'];\r\n        let diff = data['diff'];\r\n        let nbdModel = new model_1.NotebookDiffModel(base, diff);\r\n        let nbdWidget = new widget_1.NotebookDiffWidget(nbdModel, this.rendermime);\r\n        this.scroller.addWidget(nbdWidget);\r\n        let work = nbdWidget.init();\r\n        work.then(() => {\r\n            Private.markUnchangedRanges(this.scroller.node);\r\n        });\r\n        return work;\r\n    }\r\n    onError(error) {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        let widget = new widgets_1.Widget();\r\n        widget.node.innerHTML = `Failed to fetch diff: ${error.message}`;\r\n        this.scroller.addWidget(widget);\r\n    }\r\n}\r\nexports.NbdimeWidget = NbdimeWidget;\r\nvar Private;\r\n(function (Private) {\r\n    /**\r\n     * Create a header widget for the diff view.\r\n     */\r\n    function diffHeader(options) {\r\n        let { base, remote, baseLabel, remoteLabel } = options;\r\n        if (remote) {\r\n            if (baseLabel === undefined) {\r\n                baseLabel = base;\r\n            }\r\n            if (remoteLabel === undefined) {\r\n                remoteLabel = remote;\r\n            }\r\n        }\r\n        else {\r\n            if (!baseLabel) {\r\n                baseLabel = 'git HEAD';\r\n            }\r\n            remoteLabel = base;\r\n        }\r\n        let node = document.createElement('div');\r\n        node.className = 'nbdime-Diff';\r\n        node.innerHTML = `\r\n      <div class=\"nbdime-header-buttonrow\">\r\n        <label><input class=\"nbdime-hide-unchanged\" type=\"checkbox\">Hide unchanged cells</label>\r\n        <button class=\"nbdime-export\" style=\"display: none\">Export diff</button>\r\n      </div>\r\n      <div class=nbdime-header-banner>\r\n        <span class=\"nbdime-header-base\"></span>\r\n        <span class=\"nbdime-header-remote\"></span>\r\n      </div>`;\r\n        node.getElementsByClassName(\"nbdime-header-base\")[0].innerText = baseLabel;\r\n        node.getElementsByClassName(\"nbdime-header-remote\")[0].innerText = remoteLabel;\r\n        return new widgets_1.Widget({ node });\r\n    }\r\n    Private.diffHeader = diffHeader;\r\n    /**\r\n     * Toggle whether to show or hide unchanged cells.\r\n     *\r\n     * This simply marks with a class, real work is done by CSS.\r\n     */\r\n    function toggleShowUnchanged(root, show) {\r\n        let hiding = root.hasClass(HIDE_UNCHANGED_CLASS);\r\n        if (show === undefined) {\r\n            show = hiding;\r\n        }\r\n        else if (hiding !== show) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        if (show) {\r\n            root.removeClass(HIDE_UNCHANGED_CLASS);\r\n        }\r\n        else {\r\n            markUnchangedRanges(root.node);\r\n            root.addClass(HIDE_UNCHANGED_CLASS);\r\n        }\r\n        root.update();\r\n    }\r\n    Private.toggleShowUnchanged = toggleShowUnchanged;\r\n    /**\r\n     * Gets the chunk element of an added/removed cell, or the cell element for others\r\n     * @param cellElement\r\n     */\r\n    function getChunkElement(cellElement) {\r\n        if (!cellElement.parentElement || !cellElement.parentElement.parentElement) {\r\n            return cellElement;\r\n        }\r\n        let chunkCandidate = cellElement.parentElement.parentElement;\r\n        if (chunkCandidate.classList.contains(common_1.CHUNK_PANEL_CLASS)) {\r\n            return chunkCandidate;\r\n        }\r\n        return cellElement;\r\n    }\r\n    /**\r\n     * Marks certain cells with\r\n     */\r\n    function markUnchangedRanges(root) {\r\n        let children = root.querySelectorAll(`.${widget_1.CELLDIFF_CLASS}`);\r\n        let rangeStart = -1;\r\n        for (let i = 0; i < children.length; ++i) {\r\n            let child = children[i];\r\n            if (!child.classList.contains(common_1.UNCHANGED_DIFF_CLASS)) {\r\n                // Visible\r\n                if (rangeStart !== -1) {\r\n                    // Previous was hidden\r\n                    let N = i - rangeStart;\r\n                    getChunkElement(child).setAttribute('data-nbdime-NCellsHiddenBefore', N.toString());\r\n                    rangeStart = -1;\r\n                }\r\n            }\r\n            else if (rangeStart === -1) {\r\n                rangeStart = i;\r\n            }\r\n        }\r\n        if (rangeStart !== -1) {\r\n            // Last element was part of a hidden range, need to mark\r\n            // the last cell that will be visible.\r\n            let N = children.length - rangeStart;\r\n            if (rangeStart === 0) {\r\n                // All elements were hidden, nothing to mark\r\n                // Add info on root instead\r\n                let tag = root.querySelector('.jp-Notebook-diff') || root;\r\n                tag.setAttribute('data-nbdime-AllCellsHidden', N.toString());\r\n                return;\r\n            }\r\n            let lastVisible = children[rangeStart - 1];\r\n            getChunkElement(lastVisible).setAttribute('data-nbdime-NCellsHiddenAfter', N.toString());\r\n        }\r\n    }\r\n    Private.markUnchangedRanges = markUnchangedRanges;\r\n})(Private || (Private = {}));\r\n//# sourceMappingURL=widget.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.splitMergeDecisionsOnChunks = void 0;\r\nconst diffentries_1 = require(\"../diff/diffentries\");\r\nconst decisions_1 = require(\"../merge/decisions\");\r\nconst util_1 = require(\"../common/util\");\r\nfunction anyDiffs(diffs) {\r\n    for (let d of diffs) {\r\n        if (util_1.hasEntries(d)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction getSectionBoundaries(diffs) {\r\n    let boundaries = [];\r\n    for (let e of diffs) {\r\n        let j = e.key;\r\n        let k;\r\n        boundaries.push(j);\r\n        if (e.op === 'addrange') {\r\n            // Pass\r\n        }\r\n        else if (e.op === 'removerange') {\r\n            k = j + e.length;\r\n            boundaries.push(k);\r\n        }\r\n        else if (e.op === 'patch') {\r\n            k = j + 1;\r\n            boundaries.push(k);\r\n        }\r\n    }\r\n    return boundaries.filter(util_1.unique);\r\n}\r\nfunction splitDiffsOnBoundaries(diffs, boundaries) {\r\n    let newdiffs = [];\r\n    if (!Array.isArray(boundaries)) {\r\n        throw new Error();\r\n    }\r\n    // Next relevant boundary index\r\n    let b = 0;\r\n    for (let e of diffs) {\r\n        if (util_1.valueIn(e.op, ['addrange', 'patch'])) {\r\n            // Nothing to split\r\n            newdiffs.push(e);\r\n        }\r\n        else if (e.op === 'removerange') {\r\n            // Skip boundaries smaller than key\r\n            while (boundaries[b] < e.key) {\r\n                b += 1;\r\n            }\r\n            // key should be included in the boundaries\r\n            if (boundaries[b] !== e.key) {\r\n                throw new Error();\r\n            }\r\n            // Add diff entries for each interval between boundaries up to k\r\n            while (b < boundaries.length - 1 && boundaries[b + 1] <= e.key + e.length) {\r\n                newdiffs.push(diffentries_1.opRemoveRange(boundaries[b], boundaries[b + 1] - boundaries[b]));\r\n                b += 1;\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Unhandled diff entry op ' + e.op);\r\n        }\r\n    }\r\n    return newdiffs;\r\n}\r\n/**\r\n * Make list of chunks on the form (j, k, diffs0, diffs1, ..., diffsN),\r\n * where `j` and `k` are line numbers in the base, and the `diffsX`\r\n * entries are subsets from `diffs` that are part of the chunk.\r\n\r\n * Because the diff entries have been split on the union of\r\n * begin/end boundaries of all diff entries, the keys of\r\n * diff entries on each side will always match a boundary\r\n * exactly. The only situation where multiple diff entries\r\n * on one side matches a boundary is when add/remove or\r\n * add/patch pairs occur, i.e. when inserting something\r\n * just before an item that is removed or modified.\r\n */\r\nfunction makeChunks(boundaries, diffs) {\r\n    let iDiffs = Array.apply(null, Array(diffs.length)).map(Number.prototype.valueOf, 0);\r\n    let chunks = [];\r\n    for (let i = 0; i < boundaries.length; ++i) {\r\n        // Find span of next chunk\r\n        let j = boundaries[i];\r\n        let k = (i < boundaries.length - 1) ? boundaries[i + 1] : j;\r\n        // Collect diff entries from each side\r\n        // starting at beginning of this chunk\r\n        let subDiffs = [];\r\n        for (let m = 0; m < diffs.length; ++m) {\r\n            let d = diffs[m];\r\n            let dis = [];\r\n            while (d && iDiffs[m] < d.length && d[iDiffs[m]].key === j) {\r\n                dis.push(d[iDiffs[m]]);\r\n                iDiffs[m] += 1;\r\n            }\r\n            subDiffs.push(dis);\r\n        }\r\n        // Add non-empty chunks\r\n        if (anyDiffs(subDiffs)) {\r\n            let c = { baseStart: j, baseEnd: k, diffs: subDiffs };\r\n            chunks.push(c);\r\n        }\r\n    }\r\n    return chunks;\r\n}\r\n/**\r\n * Return list of chunks (i, j, d0, d1, ..., dn) where dX are\r\n *  lists of diff entries affecting the range base[i:j].\r\n *\r\n *  If d0 and d1 are both empty the chunk is not modified.\r\n *\r\n *  Includes full range 0:len(base).\r\n *\r\n *  Each diff list contains either 0, 1, or 2 entries,\r\n *  in case of 2 entries the first will be an insert\r\n *  at i (the beginning of the range) and the other a\r\n *  removerange or patch covering the full range i:j.\r\n */\r\nfunction makeMergeChunks(base, diffs) {\r\n    // Split diffs on union of diff entry boundaries such that\r\n    // no diff entry overlaps with more than one other entry.\r\n    // Including 0,N makes loop over chunks cleaner.\r\n    let boundaries = [0, base.length];\r\n    for (let d of diffs) {\r\n        if (util_1.hasEntries(d)) {\r\n            let newBoundaries = getSectionBoundaries(d);\r\n            boundaries = boundaries.concat(newBoundaries);\r\n        }\r\n    }\r\n    boundaries = boundaries.filter(util_1.unique).sort();\r\n    let splitDiffs = [];\r\n    for (let d of diffs) {\r\n        if (util_1.hasEntries(d)) {\r\n            splitDiffs.push(splitDiffsOnBoundaries(d, boundaries));\r\n        }\r\n        else {\r\n            splitDiffs.push(d);\r\n        }\r\n    }\r\n    // Make list of chunks on the form (j, k, diffs)\r\n    let chunks = makeChunks(boundaries, splitDiffs);\r\n    return chunks;\r\n}\r\nfunction splitDecisionByChunks(base, decision, chunks) {\r\n    if (chunks.length < 2) {\r\n        return [decision];\r\n    }\r\n    let out = [];\r\n    for (let c of chunks) {\r\n        let cd = decision.customDiff;\r\n        if (util_1.hasEntries(cd)) {\r\n            if (decision.localPath.length > 0) {\r\n                cd = decisions_1.pushPath(cd, decision.localPath);\r\n            }\r\n            // Split custom diff according to chunk lines\r\n            let boundaries = [0, base.length, c.baseStart, c.baseEnd].filter(util_1.unique).sort();\r\n            cd = splitDiffsOnBoundaries(cd, boundaries);\r\n        }\r\n        out.push(new decisions_1.MergeDecision(decision.absolutePath.slice(), c.diffs[0], c.diffs[1], decision.action, decision.conflict));\r\n    }\r\n    return out;\r\n}\r\nfunction splitMergeDecisionsOnChunks(base, decisions) {\r\n    let out = [];\r\n    for (let md of decisions) {\r\n        let diffs = [\r\n            decisions_1.buildDiffs(base, [md], 'local'),\r\n            decisions_1.buildDiffs(base, [md], 'remote')\r\n        ];\r\n        let chunks = makeMergeChunks(base, diffs);\r\n        out = out.concat(splitDecisionByChunks(base, md, chunks));\r\n    }\r\n    return out;\r\n}\r\nexports.splitMergeDecisionsOnChunks = splitMergeDecisionsOnChunks;\r\n//# sourceMappingURL=decisionchunking.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.labelSource = exports.lineToNormalChunks = exports.LineChunker = exports.Chunker = exports.Chunk = void 0;\r\nconst util_1 = require(\"../common/util\");\r\n/**\r\n * A chunk is a range of lines in a string based diff\r\n * that logically belong together.\r\n *\r\n * Chunks can be used for:\r\n *  - Correlating diff entries in the base and remote, e.g.\r\n *    for aligning lines in two editors.\r\n *  - Finding parts of the unchanged text that are not needed\r\n *    as context (can be hidden)\r\n *  - Navigating a diff (\"Go to next diff\")\r\n */\r\nclass Chunk {\r\n    constructor(baseFrom, baseTo, remoteFrom, remoteTo, source) {\r\n        this.baseFrom = baseFrom;\r\n        this.baseTo = baseTo;\r\n        this.remoteFrom = remoteFrom;\r\n        this.remoteTo = remoteTo;\r\n        this.sources = source ? [source] : [];\r\n    }\r\n    /**\r\n     * Checks whether the given line number is within the range spanned by editFrom - editTo\r\n     */\r\n    inEdit(line) {\r\n        return line >= this.baseFrom && line <= this.baseTo;\r\n    }\r\n    /**\r\n     * Checks whether the given line number is within the range spanned by origFrom - origTo\r\n     */\r\n    inOrig(line) {\r\n        return line >= this.remoteFrom && line <= this.remoteTo;\r\n    }\r\n}\r\nexports.Chunk = Chunk;\r\n;\r\nclass Chunker {\r\n    constructor() {\r\n        this._currentGhost = null;\r\n        this.chunks = [];\r\n        this.editOffset = 0;\r\n    }\r\n    _getCurrent() {\r\n        if (this._currentGhost) {\r\n            this._currentGhost = null;\r\n            return null;\r\n        }\r\n        return this.chunks.length > 0 ? this.chunks[this.chunks.length - 1] : null;\r\n    }\r\n    _overlapChunk(chunk, range, isAddition) {\r\n        if (isAddition) {\r\n            return chunk.inOrig(range.from.line);\r\n        }\r\n        else {\r\n            return chunk.inEdit(range.from.line);\r\n        }\r\n    }\r\n    addDiff(range, isAddition) {\r\n        let linediff = range.to.line - range.from.line;\r\n        if (range.endsOnNewline) {\r\n            linediff += 1;\r\n        }\r\n        const firstLineNew = range.from.ch === 0 && linediff > 0;\r\n        const startOffset = range.chunkStartLine ? 0 : 1;\r\n        const endOffset = range.chunkStartLine && range.endsOnNewline && firstLineNew ?\r\n            0 : 1;\r\n        let current = this._getCurrent();\r\n        if (current) {\r\n            // Have existing chunk, check for overlap\r\n            if (isAddition) {\r\n                if (this._overlapChunk(current, range, isAddition)) {\r\n                    current.remoteTo = Math.max(current.remoteTo, range.from.line + endOffset + linediff);\r\n                    current.baseTo = Math.max(current.baseTo, range.from.line + endOffset + this.editOffset);\r\n                    if (range.source && !util_1.valueIn(range.source, current.sources)) {\r\n                        current.sources.push(range.source);\r\n                    }\r\n                }\r\n                else {\r\n                    // No overlap with chunk, start new one\r\n                    current = null;\r\n                }\r\n            }\r\n            else {\r\n                if (this._overlapChunk(current, range, isAddition)) {\r\n                    current.remoteTo = Math.max(current.remoteTo, range.from.line + endOffset - this.editOffset);\r\n                    current.baseTo = Math.max(current.baseTo, range.from.line + endOffset + linediff);\r\n                    if (range.source && !util_1.valueIn(range.source, current.sources)) {\r\n                        current.sources.push(range.source);\r\n                    }\r\n                }\r\n                else {\r\n                    // No overlap with chunk, start new one\r\n                    current = null;\r\n                }\r\n            }\r\n        }\r\n        if (!current) {\r\n            // No current chunk, start a new one\r\n            if (isAddition) {\r\n                let startRemote = range.from.line;\r\n                let startBase = startRemote + this.editOffset;\r\n                current = new Chunk(startBase + startOffset, startBase + endOffset, startRemote + startOffset, startRemote + endOffset + linediff);\r\n            }\r\n            else {\r\n                let startBase = range.from.line;\r\n                let startRemote = startBase - this.editOffset;\r\n                current = new Chunk(startBase + startOffset, startBase + endOffset + linediff, startRemote + startOffset, startRemote + endOffset);\r\n            }\r\n            if (range.source) {\r\n                current.sources.push(range.source);\r\n            }\r\n            this.chunks.push(current);\r\n        }\r\n        current.sources = current.sources.filter(util_1.unique);\r\n        this.editOffset += isAddition ? -linediff : linediff;\r\n    }\r\n    /**\r\n     * Chunk a region where changes will occur if a currently unapplied diff were\r\n     * applied.\r\n     */\r\n    addGhost(range, isAddition, offset) {\r\n        // Do a one-to-one chunk as base\r\n        let linediff = range.to.line - range.from.line;\r\n        if (range.endsOnNewline) {\r\n            linediff += 1;\r\n        }\r\n        let firstLineNew = range.from.ch === 0 && linediff > 0;\r\n        let startOffset = range.chunkStartLine ? 0 : 1;\r\n        let endOffset = range.chunkStartLine && range.endsOnNewline && firstLineNew ?\r\n            0 : 1;\r\n        if (!isAddition) {\r\n            endOffset += linediff;\r\n        }\r\n        let current = this._currentGhost;\r\n        // Subtract offset from other editor\r\n        let startEdit = range.from.line + (isAddition ? offset : 0);\r\n        if (current) {\r\n            // Have existing chunk, check for overlap\r\n            let startOrig = startEdit - this.editOffset;\r\n            if (current.baseTo > startEdit) {\r\n                current.remoteTo = Math.max(current.remoteTo, startOrig + endOffset);\r\n                current.baseTo = Math.max(current.baseTo, startEdit + endOffset);\r\n                if (range.source && !util_1.valueIn(range.source, current.sources)) {\r\n                    current.sources.push(range.source);\r\n                }\r\n            }\r\n            else {\r\n                // No overlap with chunk, start new one\r\n                current = null;\r\n            }\r\n        }\r\n        if (!current) {\r\n            let startOrig = startEdit - this.editOffset;\r\n            current = new Chunk(startEdit + startOffset, startEdit + endOffset, startOrig + startOffset, startOrig + endOffset);\r\n            if (range.source) {\r\n                current.sources.push(range.source);\r\n            }\r\n            this.chunks.push(current);\r\n        }\r\n        this._currentGhost = current;\r\n        current.sources = current.sources.filter(util_1.unique);\r\n        // this._doAdd(range, isAddition);\r\n    }\r\n}\r\nexports.Chunker = Chunker;\r\n/**\r\n * A chunker that only chunks diffs within lines with each other\r\n *\r\n * While the default chunker would chunk together a change at the end of one\r\n * line with a change at the start of the next line, this chunker will keep\r\n * each line separate. This is useful e.g. for merging.\r\n */\r\nclass LineChunker extends Chunker {\r\n    _overlapChunk(chunk, range, isAddition) {\r\n        let fromLine = range.from.line;\r\n        if (chunk.baseFrom !== chunk.baseTo || chunk.remoteFrom >= chunk.remoteTo) {\r\n            // Ensure aligned addition/removal on same line\r\n            // still chunk together\r\n            fromLine += 1;\r\n        }\r\n        if (isAddition) {\r\n            return chunk.inOrig(fromLine);\r\n        }\r\n        else {\r\n            return chunk.inEdit(fromLine);\r\n        }\r\n    }\r\n}\r\nexports.LineChunker = LineChunker;\r\n/**\r\n * Transform an array of lines to normal chunks\r\n */\r\nfunction lineToNormalChunks(lineChunks) {\r\n    // We already have line chunks, so simply merge those chunks that overlap\r\n    let current = null;\r\n    let ret = [];\r\n    for (let c of lineChunks) {\r\n        if (current === null) {\r\n            current = util_1.shallowCopy(c);\r\n        }\r\n        else {\r\n            if (current.inEdit(c.baseFrom)) {\r\n                // Overlaps, combine\r\n                current.remoteTo = Math.max(current.remoteTo, c.remoteTo);\r\n                current.baseTo = Math.max(current.baseTo, c.baseTo);\r\n                current.sources = current.sources.concat(c.sources);\r\n            }\r\n            else {\r\n                // No overlap, start new\r\n                ret.push(current);\r\n                current = util_1.shallowCopy(c);\r\n            }\r\n        }\r\n        current.sources = current.sources.filter(util_1.unique);\r\n    }\r\n    if (current !== null) {\r\n        ret.push(current);\r\n    }\r\n    return ret;\r\n}\r\nexports.lineToNormalChunks = lineToNormalChunks;\r\n/**\r\n * Label a set of diffs with a source, recursively.\r\n */\r\nfunction labelSource(diff, source) {\r\n    if (diff) {\r\n        for (let d of diff) {\r\n            d.source = source;\r\n            if (d.op === 'patch') {\r\n                labelSource(d.diff, source);\r\n            }\r\n        }\r\n    }\r\n    return diff;\r\n}\r\nexports.labelSource = labelSource;\r\n//# sourceMappingURL=diffchunking.js.map","\"use strict\";\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./diffchunking\"), exports);\r\n__exportStar(require(\"./decisionchunking\"), exports);\r\n//# sourceMappingURL=index.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CollapsiblePanel = void 0;\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\nconst COLLAPSIBLE_CLASS = 'jp-CollapsiblePanel';\r\nconst COLLAPSIBLE_HEADER = 'jp-CollapsiblePanel-header';\r\nconst COLLAPSIBLE_HEADER_ICON = 'jp-CollapsiblePanel-header-icon';\r\nconst COLLAPSIBLE_HEADER_ICON_OPEN = 'jp-CollapsiblePanel-header-icon-opened';\r\nconst COLLAPSIBLE_HEADER_ICON_CLOSED = 'jp-CollapsiblePanel-header-icon-closed';\r\nconst COLLAPSIBLE_SLIDER = 'jp-CollapsiblePanel-slider';\r\nconst COLLAPSIBLE_OPEN = 'jp-CollapsiblePanel-opened';\r\nconst COLLAPSIBLE_CLOSED = 'jp-CollapsiblePanel-closed';\r\nconst COLLAPSIBLE_CONTAINER = 'jp-CollapsiblePanel-container';\r\n/**\r\n * CollapsiblePanel\r\n */\r\nclass CollapsiblePanel extends widgets_1.Panel {\r\n    constructor(inner, headerTitle, collapsed) {\r\n        super();\r\n        this.addClass(COLLAPSIBLE_CLASS);\r\n        this.inner = inner;\r\n        let constructor = this.constructor;\r\n        let header = constructor.createHeader(headerTitle);\r\n        this.header = header;\r\n        this.button = header.node.getElementsByClassName(COLLAPSIBLE_HEADER_ICON)[0];\r\n        header.node.onclick = this.toggleCollapsed.bind(this);\r\n        this.addWidget(header);\r\n        this.container = new widgets_1.Panel();\r\n        this.container.addClass(COLLAPSIBLE_CONTAINER);\r\n        this.slider = new widgets_1.Panel();\r\n        this.slider.addClass(COLLAPSIBLE_SLIDER);\r\n        this.slider.addWidget(inner);\r\n        this.container.addWidget(this.slider);\r\n        this.addWidget(this.container);\r\n        this.slider.addClass(collapsed === true ?\r\n            COLLAPSIBLE_CLOSED :\r\n            COLLAPSIBLE_OPEN);\r\n        this.button.classList.add(collapsed === true ?\r\n            COLLAPSIBLE_HEADER_ICON_CLOSED :\r\n            COLLAPSIBLE_HEADER_ICON_OPEN);\r\n        this.button.classList.add(\"fa\");\r\n        this.button.classList.add(collapsed === true ?\r\n            \"fa-caret-down\" :\r\n            \"fa-caret-up\");\r\n    }\r\n    static createHeader(headerTitle) {\r\n        let header = new widgets_1.Panel();\r\n        header.addClass(COLLAPSIBLE_HEADER);\r\n        if (headerTitle) {\r\n            // let title = document.createElement('span');\r\n            header.node.innerText = headerTitle;\r\n            // header.appendChild(title);\r\n        }\r\n        let button = document.createElement('button');\r\n        button.className = COLLAPSIBLE_HEADER_ICON;\r\n        header.node.appendChild(button);\r\n        return header;\r\n    }\r\n    toggleCollapsed() {\r\n        let slider = this.slider;\r\n        let button = this.button;\r\n        if (this.collapsed) {\r\n            slider.removeClass(COLLAPSIBLE_CLOSED);\r\n            slider.addClass(COLLAPSIBLE_OPEN);\r\n            button.classList.remove(COLLAPSIBLE_HEADER_ICON_CLOSED);\r\n            button.classList.add(COLLAPSIBLE_HEADER_ICON_OPEN);\r\n            this.button.classList.remove(\"fa-caret-down\");\r\n            this.button.classList.add(\"fa-caret-up\");\r\n        }\r\n        else {\r\n            slider.removeClass(COLLAPSIBLE_OPEN);\r\n            slider.addClass(COLLAPSIBLE_CLOSED);\r\n            button.classList.remove(COLLAPSIBLE_HEADER_ICON_OPEN);\r\n            button.classList.add(COLLAPSIBLE_HEADER_ICON_CLOSED);\r\n            this.button.classList.remove(\"fa-caret-up\");\r\n            this.button.classList.add(\"fa-caret-down\");\r\n        }\r\n    }\r\n    get collapsed() {\r\n        return this.slider.hasClass(COLLAPSIBLE_CLOSED);\r\n    }\r\n    set headerTitle(value) {\r\n        this.header.node.innerText = value;\r\n    }\r\n}\r\nexports.CollapsiblePanel = CollapsiblePanel;\r\n//# sourceMappingURL=collapsiblepanel.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EditorWidget = void 0;\r\nconst codeeditor_1 = require(\"@jupyterlab/codeeditor\");\r\nconst codemirror_1 = require(\"@jupyterlab/codemirror\");\r\nclass EditorWidget extends codeeditor_1.CodeEditorWrapper {\r\n    /**\r\n     * Store all editor instances for operations that\r\n     * need to loop over all instances.\r\n     */\r\n    constructor(value, options) {\r\n        if (options && options.readOnly) {\r\n            // Prevent readonly editor from trapping tabs\r\n            options.extraKeys = { Tab: false, 'Shift-Tab': false };\r\n        }\r\n        super({\r\n            model: new codeeditor_1.CodeEditor.Model({ value }),\r\n            factory: function () {\r\n                let factory = new codemirror_1.CodeMirrorEditorFactory(options);\r\n                return factory.newInlineEditor.bind(factory);\r\n            }()\r\n        });\r\n        this.staticLoaded = false;\r\n        EditorWidget.editors.push(this.cm);\r\n    }\r\n    get cm() {\r\n        return this.editor.editor;\r\n    }\r\n    get doc() {\r\n        return this.editor.doc;\r\n    }\r\n    /**\r\n     * A message handler invoked on an `'resize'` message.\r\n     */\r\n    onResize(msg) {\r\n        if (!this.staticLoaded) {\r\n            if (msg.width < 0 || msg.height < 0) {\r\n                this.cm.setSize(null, null);\r\n            }\r\n            else {\r\n                super.onResize(msg);\r\n            }\r\n            if (this.editor.getOption('readOnly') && document.contains(this.node)) {\r\n                this.staticLoaded = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.EditorWidget = EditorWidget;\r\nEditorWidget.editors = [];\r\n//# sourceMappingURL=editor.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NotifyUserError = void 0;\r\n/**\r\n * An error that should be displayed to the user\r\n */\r\nclass NotifyUserError extends Error {\r\n    constructor(message, severity = 'error') {\r\n        super(message);\r\n        // Set the prototype explicitly.\r\n        Object.setPrototypeOf(this, NotifyUserError.prototype);\r\n        this.message = message;\r\n        this.stack = new Error().stack;\r\n        this.severity = severity;\r\n    }\r\n}\r\nexports.NotifyUserError = NotifyUserError;\r\n//# sourceMappingURL=exceptions.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n// This code is based on the CodeMirror mergeview.js source:\r\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: http://codemirror.net/LICENSE\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MergeView = exports.DiffView = exports.createNbdimeMergeView = exports.EventDirection = exports.DIFF_OP = void 0;\r\nconst CodeMirror = require(\"codemirror\");\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\nconst model_1 = require(\"../merge/model\");\r\nconst chunking_1 = require(\"../chunking\");\r\nconst editor_1 = require(\"./editor\");\r\nconst util_1 = require(\"./util\");\r\nconst exceptions_1 = require(\"./exceptions\");\r\nconst PICKER_SYMBOL = '\\u27ad';\r\nconst CONFLICT_MARKER = '\\u26A0'; // '\\u2757'\r\nvar DIFF_OP;\r\n(function (DIFF_OP) {\r\n    DIFF_OP[DIFF_OP[\"DIFF_DELETE\"] = -1] = \"DIFF_DELETE\";\r\n    DIFF_OP[DIFF_OP[\"DIFF_INSERT\"] = 1] = \"DIFF_INSERT\";\r\n    DIFF_OP[DIFF_OP[\"DIFF_EQUAL\"] = 0] = \"DIFF_EQUAL\";\r\n})(DIFF_OP = exports.DIFF_OP || (exports.DIFF_OP = {}));\r\nvar EventDirection;\r\n(function (EventDirection) {\r\n    EventDirection[EventDirection[\"INCOMING\"] = 0] = \"INCOMING\";\r\n    EventDirection[EventDirection[\"OUTGOING\"] = 1] = \"OUTGOING\";\r\n})(EventDirection = exports.EventDirection || (exports.EventDirection = {}));\r\nconst GUTTER_PICKER_CLASS = 'jp-Merge-gutter-picker';\r\nconst GUTTER_CONFLICT_CLASS = 'jp-Merge-gutter-conflict';\r\nconst CHUNK_CONFLICT_CLASS = 'jp-Merge-conflict';\r\nconst leftClasses = { chunk: 'CodeMirror-merge-l-chunk',\r\n    start: 'CodeMirror-merge-l-chunk-start',\r\n    end: 'CodeMirror-merge-l-chunk-end',\r\n    insert: 'CodeMirror-merge-l-inserted',\r\n    del: 'CodeMirror-merge-l-deleted',\r\n    connect: 'CodeMirror-merge-l-connect',\r\n    gutter: 'CodeMirror-merge-l-gutter' };\r\nconst rightClasses = { chunk: 'CodeMirror-merge-r-chunk',\r\n    start: 'CodeMirror-merge-r-chunk-start',\r\n    end: 'CodeMirror-merge-r-chunk-end',\r\n    insert: 'CodeMirror-merge-r-inserted',\r\n    del: 'CodeMirror-merge-r-deleted',\r\n    connect: 'CodeMirror-merge-r-connect',\r\n    gutter: 'CodeMirror-merge-r-gutter' };\r\nconst mergeClassPrefix = { chunk: 'CodeMirror-merge-m-chunk',\r\n    start: 'CodeMirror-merge-m-chunk-start',\r\n    end: 'CodeMirror-merge-m-chunk-end',\r\n    insert: 'CodeMirror-merge-m-inserted',\r\n    del: 'CodeMirror-merge-m-deleted',\r\n    connect: 'CodeMirror-merge-m-connect',\r\n    gutter: 'CodeMirror-merge-m-gutter' };\r\nfunction createNbdimeMergeView(remote, local, merged, readOnly) {\r\n    let opts = {\r\n        remote,\r\n        local,\r\n        merged,\r\n        readOnly,\r\n        orig: null\r\n    };\r\n    opts.collapseIdentical = true;\r\n    let mergeview = new MergeView(opts);\r\n    let editors = [];\r\n    if (mergeview.left) {\r\n        editors.push(mergeview.left);\r\n    }\r\n    if (mergeview.right) {\r\n        editors.push(mergeview.right);\r\n    }\r\n    if (mergeview.merge) {\r\n        editors.push(mergeview.merge);\r\n    }\r\n    let mimetype = (remote || merged).mimetype;\r\n    if (mimetype) {\r\n        // Set the editor mode to the MIME type.\r\n        for (let e of editors) {\r\n            e.ownWidget.model.mimeType = mimetype;\r\n        }\r\n        mergeview.base.model.mimeType = mimetype;\r\n    }\r\n    return mergeview;\r\n}\r\nexports.createNbdimeMergeView = createNbdimeMergeView;\r\n/**\r\n * Used by MergeView to show diff in a string diff model\r\n */\r\nclass DiffView {\r\n    constructor(model, type, updateCallback, options) {\r\n        this.collapsedRanges = [];\r\n        this.model = model;\r\n        this.type = type;\r\n        this.updateCallback = updateCallback;\r\n        this.classes = type === 'left' ?\r\n            leftClasses : type === 'right' ? rightClasses : null;\r\n        let ownValue = this.model.remote || '';\r\n        this.ownWidget = new editor_1.EditorWidget(ownValue, util_1.copyObj({ readOnly: !!options.readOnly }, options));\r\n        this.showDifferences = options.showDifferences !== false;\r\n    }\r\n    init(base) {\r\n        this.baseEditor = base;\r\n        (this.baseEditor.state.diffViews ||\r\n            (this.baseEditor.state.diffViews = [])).push(this);\r\n        this.ownEditor.state.diffViews = [this];\r\n        this.baseEditor.on('gutterClick', this.onGutterClick.bind(this));\r\n        this.ownEditor.on('gutterClick', this.onGutterClick.bind(this));\r\n        this.lineChunks = this.model.getLineChunks();\r\n        this.chunks = chunking_1.lineToNormalChunks(this.lineChunks);\r\n        this.dealigned = false;\r\n        this.forceUpdate = this.registerUpdate();\r\n        this.setScrollLock(true, false);\r\n        this.registerScroll();\r\n    }\r\n    setShowDifferences(val) {\r\n        val = val !== false;\r\n        if (val !== this.showDifferences) {\r\n            this.showDifferences = val;\r\n            this.forceUpdate('full');\r\n        }\r\n    }\r\n    syncModel() {\r\n        if (this.modelInvalid()) {\r\n            let edit = this.ownEditor;\r\n            let updatedLineChunks = this.model.getLineChunks();\r\n            let updatedChunks = chunking_1.lineToNormalChunks(updatedLineChunks);\r\n            if (this.model.remote === edit.getValue()) {\r\n                // Nothing to do except update chunks\r\n                this.lineChunks = updatedLineChunks;\r\n                this.chunks = updatedChunks;\r\n                return;\r\n            }\r\n            let cursor = edit.getDoc().getCursor();\r\n            let newLines = util_1.splitLines(this.model.remote);\r\n            let start = edit.getDoc().firstLine();\r\n            let last = edit.getDoc().lastLine() + 1;\r\n            let cumulativeOffset = 0;\r\n            let end;\r\n            let updatedEnd;\r\n            // We want to replace contents of editor, but if we have collapsed regions\r\n            // some lines have been optimized away. Carefully replace the relevant bits:\r\n            for (let range of this.collapsedRanges) {\r\n                let baseLine = range.line;\r\n                end = getMatchingEditLine(baseLine, this.chunks);\r\n                updatedEnd = getMatchingEditLine(baseLine, updatedChunks);\r\n                let offset = updatedEnd - end;\r\n                if (end !== start || offset !== 0) {\r\n                    edit.getDoc().replaceRange(newLines.slice(start + cumulativeOffset, updatedEnd + cumulativeOffset - 1).join(''), CodeMirror.Pos(start, 0), CodeMirror.Pos(end - 1, 0), 'syncModel');\r\n                }\r\n                cumulativeOffset += offset;\r\n                start = end + range.size;\r\n            }\r\n            if (start < last) {\r\n                // Only here if no collapsed ranges, replace full contents\r\n                edit.getDoc().replaceRange(newLines.slice(start, newLines.length).join(''), CodeMirror.Pos(start, 0), CodeMirror.Pos(last, 0), 'syncModel');\r\n            }\r\n            this.ownEditor.getDoc().setCursor(cursor);\r\n            this.lineChunks = updatedLineChunks;\r\n            this.chunks = updatedChunks;\r\n        }\r\n    }\r\n    buildGap() {\r\n        let lock = this.lockButton = elt('div', undefined, 'CodeMirror-merge-scrolllock');\r\n        lock.title = 'Toggle locked scrolling';\r\n        let lockWrap = elt('div', [lock], 'CodeMirror-merge-scrolllock-wrap');\r\n        let self = this;\r\n        CodeMirror.on(lock, 'click', function () {\r\n            self.setScrollLock(!self.lockScroll);\r\n        });\r\n        return this.gap = elt('div', [lockWrap], 'CodeMirror-merge-gap');\r\n    }\r\n    setScrollLock(val, action) {\r\n        this.lockScroll = val;\r\n        if (val && action !== false) {\r\n            this.syncScroll(EventDirection.OUTGOING);\r\n        }\r\n        if (this.lockButton) {\r\n            this.lockButton.innerHTML = val ? '\\u21db\\u21da' : '\\u21db&nbsp;&nbsp;\\u21da';\r\n        }\r\n    }\r\n    registerUpdate() {\r\n        let editMarkers = [];\r\n        let origMarkers = [];\r\n        let debounceChange;\r\n        let self = this;\r\n        self.updating = false;\r\n        self.updatingFast = false;\r\n        function update(mode) {\r\n            self.updating = true;\r\n            self.updatingFast = false;\r\n            if (mode === 'full') {\r\n                self.syncModel();\r\n                if (self.classes === null) {\r\n                    clearMergeMarks(self.baseEditor, editMarkers);\r\n                    clearMergeMarks(self.ownEditor, origMarkers);\r\n                }\r\n                else {\r\n                    clearMarks(self.baseEditor, editMarkers, self.classes);\r\n                    clearMarks(self.ownEditor, origMarkers, self.classes);\r\n                }\r\n            }\r\n            if (self.showDifferences) {\r\n                self.updateMarks(self.ownEditor, self.model.additions, editMarkers, DIFF_OP.DIFF_INSERT);\r\n                self.updateMarks(self.baseEditor, self.model.deletions, origMarkers, DIFF_OP.DIFF_DELETE);\r\n            }\r\n            self.updateCallback(true);\r\n            checkSync(self.ownEditor);\r\n            self.updating = false;\r\n        }\r\n        function setDealign(fast) {\r\n            let upd = false;\r\n            for (let dv of self.baseEditor.state.diffViews) {\r\n                upd = upd || dv.updating;\r\n            }\r\n            if (upd) {\r\n                return;\r\n            }\r\n            self.dealigned = true;\r\n            set(fast === true);\r\n        }\r\n        function set(fast) {\r\n            let upd = false;\r\n            for (let dv of self.baseEditor.state.diffViews) {\r\n                upd = upd || dv.updating || dv.updatingFast;\r\n            }\r\n            if (upd) {\r\n                return;\r\n            }\r\n            clearTimeout(debounceChange);\r\n            if (fast === true) {\r\n                self.updatingFast = true;\r\n            }\r\n            debounceChange = window.setTimeout(update, fast === true ? 20 : 250);\r\n        }\r\n        function change(_cm, change) {\r\n            if (!(self.model instanceof model_1.DecisionStringDiffModel)) {\r\n                // TODO: Throttle?\r\n                self.lineChunks = self.model.getLineChunks();\r\n                self.chunks = chunking_1.lineToNormalChunks(self.lineChunks);\r\n            }\r\n            // Update faster when a line was added/removed\r\n            setDealign(change.text.length - 1 !== change.to.line - change.from.line);\r\n        }\r\n        function checkSync(cm) {\r\n            if (self.model.remote !== cm.getValue()) {\r\n                throw new exceptions_1.NotifyUserError('CRITICAL: Merge editor out of sync with model! ' +\r\n                    'Double-check any saved merge output!');\r\n            }\r\n        }\r\n        this.baseEditor.on('change', change);\r\n        this.ownEditor.on('change', change);\r\n        this.baseEditor.on('markerAdded', setDealign);\r\n        this.baseEditor.on('markerCleared', setDealign);\r\n        this.ownEditor.on('markerAdded', setDealign);\r\n        this.ownEditor.on('markerCleared', setDealign);\r\n        this.baseEditor.on('viewportChange', function () { set(false); });\r\n        this.ownEditor.on('viewportChange', function () { set(false); });\r\n        update();\r\n        return update;\r\n    }\r\n    modelInvalid() {\r\n        return this.model instanceof model_1.DecisionStringDiffModel &&\r\n            this.model.invalid;\r\n    }\r\n    onGutterClick(instance, line, gutter, clickEvent) {\r\n        if (clickEvent.button !== 0) {\r\n            // Only care about left clicks\r\n            return;\r\n        }\r\n        let li = instance.lineInfo(line);\r\n        if (!li.gutterMarkers || !li.gutterMarkers.hasOwnProperty(gutter)) {\r\n            return;\r\n        }\r\n        let node = li.gutterMarkers[gutter];\r\n        if (node && node.sources) {\r\n            let ss = node.sources;\r\n            if (gutter === GUTTER_PICKER_CLASS) {\r\n                if (instance === this.ownEditor) {\r\n                    for (let s of ss) {\r\n                        s.decision.action = s.action;\r\n                    }\r\n                }\r\n                else if (this.type === 'merge' && instance === this.baseEditor) {\r\n                    for (let s of ss) {\r\n                        s.decision.action = 'base';\r\n                    }\r\n                }\r\n                for (let i = ss.length - 1; i >= 0; --i) {\r\n                    let s = ss[i];\r\n                    if (this.type === 'merge' && util_1.hasEntries(s.decision.customDiff)) {\r\n                        // Custom diffs are cleared on pick,\r\n                        // as there is no way to re-pick them\r\n                        s.decision.customDiff = [];\r\n                    }\r\n                }\r\n                if (ss.length === 0) {\r\n                    // All decisions empty, remove picker\r\n                    // In these cases, there should only be one picker, on base\r\n                    // so simply remove the one we have here\r\n                    instance.setGutterMarker(line, GUTTER_PICKER_CLASS, null);\r\n                }\r\n            }\r\n            else if (gutter === GUTTER_CONFLICT_CLASS) {\r\n                for (let s of ss) {\r\n                    s.decision.conflict = false;\r\n                }\r\n            }\r\n            for (let dv of this.baseEditor.state.diffViews) {\r\n                if (dv.model instanceof model_1.DecisionStringDiffModel) {\r\n                    dv.model.invalidate();\r\n                }\r\n                dv.forceUpdate('full');\r\n            }\r\n        }\r\n    }\r\n    registerScroll() {\r\n        let self = this;\r\n        this.baseEditor.on('scroll', function () {\r\n            self.syncScroll(EventDirection.OUTGOING);\r\n        });\r\n        this.ownEditor.on('scroll', function () {\r\n            self.syncScroll(EventDirection.INCOMING);\r\n        });\r\n    }\r\n    /**\r\n     * Sync scrolling between base and own editors. `type` is used to indicate\r\n     * which editor is the source, and which editor is the destination of the sync.\r\n     */\r\n    syncScroll(type) {\r\n        if (this.modelInvalid()) {\r\n            return;\r\n        }\r\n        if (!this.lockScroll) {\r\n            return;\r\n        }\r\n        // editor: What triggered event, other: What needs to be synced\r\n        let editor;\r\n        let other;\r\n        if (type === EventDirection.OUTGOING) {\r\n            editor = this.baseEditor;\r\n            other = this.ownEditor;\r\n        }\r\n        else {\r\n            editor = this.ownEditor;\r\n            other = this.baseEditor;\r\n        }\r\n        if (editor.state.scrollSetBy === this) {\r\n            editor.state.scrollSetBy = null;\r\n            return;\r\n        }\r\n        // Position to update to\r\n        other.state.scrollPosition = editor.getScrollInfo();\r\n        // If ticking, we already have a scroll queued\r\n        if (other.state.scrollTicking) {\r\n            return;\r\n        }\r\n        let sInfo = other.getScrollInfo();\r\n        // Don't queue an event if already synced.\r\n        if (other.state.scrollPosition.top === sInfo.top &&\r\n            other.state.scrollPosition.left === sInfo.left) {\r\n            return;\r\n        }\r\n        // Throttle by requestAnimationFrame().\r\n        // If event is outgoing, this will lead to a one frame delay of other DiffViews\r\n        let self = this;\r\n        window.requestAnimationFrame(function () {\r\n            other.scrollTo(other.state.scrollPosition.left, other.state.scrollPosition.top);\r\n            other.state.scrollTicking = false;\r\n            other.state.scrollSetBy = self;\r\n        });\r\n        other.state.scrollTicking = true;\r\n        return;\r\n    }\r\n    updateMarks(editor, diff, markers, type) {\r\n        let classes;\r\n        if (this.classes === null) {\r\n            // Only store prefixes here, will be completed later\r\n            classes = util_1.copyObj(mergeClassPrefix);\r\n        }\r\n        else {\r\n            classes = this.classes;\r\n        }\r\n        let self = this;\r\n        function markChunk(editor, from, to, sources) {\r\n            if (self.classes === null && sources.length > 0) {\r\n                // Complete merge class prefixes here\r\n                classes = util_1.copyObj(mergeClassPrefix);\r\n                // First, figure out 'action' state of chunk\r\n                let s = sources[0].action;\r\n                if (sources.length > 1) {\r\n                    for (let si of sources.slice(1)) {\r\n                        if (si.action !== s) {\r\n                            s = 'mixed';\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                for (let k of Object.keys(classes)) {\r\n                    classes[k] += '-' + s;\r\n                }\r\n            }\r\n            // Next, figure out conflict state\r\n            let conflict = false;\r\n            if (sources.length > 0) {\r\n                for (let s of sources) {\r\n                    if (s.decision.conflict) {\r\n                        conflict = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            for (let i = from; i < to; ++i) {\r\n                let line = editor.addLineClass(i, 'background', classes.chunk);\r\n                if (conflict) {\r\n                    editor.addLineClass(line, 'background', CHUNK_CONFLICT_CLASS);\r\n                }\r\n                if (i === from) {\r\n                    editor.addLineClass(line, 'background', classes.start);\r\n                    if (self.type !== 'merge') {\r\n                        // For all editors except merge editor, add a picker button\r\n                        let picker = elt('div', PICKER_SYMBOL, classes.gutter);\r\n                        picker.sources = sources;\r\n                        picker.classList.add(GUTTER_PICKER_CLASS);\r\n                        editor.setGutterMarker(line, GUTTER_PICKER_CLASS, picker);\r\n                    }\r\n                    else if (editor === self.baseEditor) {\r\n                        for (let s of sources) {\r\n                            if (s.decision.action === 'custom' &&\r\n                                !util_1.hasEntries(s.decision.localDiff) &&\r\n                                !util_1.hasEntries(s.decision.remoteDiff)) {\r\n                                // We have a custom decision, add picker on base only!\r\n                                let picker = elt('div', PICKER_SYMBOL, classes.gutter);\r\n                                picker.sources = sources;\r\n                                picker.classList.add(GUTTER_PICKER_CLASS);\r\n                                editor.setGutterMarker(line, GUTTER_PICKER_CLASS, picker);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (conflict && editor === self.ownEditor) {\r\n                        // Add conflict markers on editor, if conflicted\r\n                        let conflictMarker = elt('div', CONFLICT_MARKER, '');\r\n                        conflictMarker.sources = sources;\r\n                        conflictMarker.classList.add(GUTTER_CONFLICT_CLASS);\r\n                        editor.setGutterMarker(line, GUTTER_CONFLICT_CLASS, conflictMarker);\r\n                    }\r\n                }\r\n                if (i === to - 1) {\r\n                    editor.addLineClass(line, 'background', classes.end);\r\n                }\r\n                markers.push(line);\r\n            }\r\n            // When the chunk is empty, make sure a horizontal line shows up\r\n            if (from === to) {\r\n                let line = editor.addLineClass(from, 'background', classes.start);\r\n                if (self.type !== 'merge') {\r\n                    let picker = elt('div', PICKER_SYMBOL, classes.gutter);\r\n                    picker.sources = sources;\r\n                    picker.classList.add(GUTTER_PICKER_CLASS);\r\n                    editor.setGutterMarker(line, GUTTER_PICKER_CLASS, picker);\r\n                }\r\n                else if (conflict) {\r\n                    // Add conflict markers on editor, if conflicted\r\n                    let conflictMarker = elt('div', CONFLICT_MARKER, '');\r\n                    conflictMarker.sources = sources;\r\n                    conflictMarker.classList.add(GUTTER_CONFLICT_CLASS);\r\n                    editor.setGutterMarker(line, GUTTER_CONFLICT_CLASS, conflictMarker);\r\n                }\r\n                editor.addLineClass(line, 'background', classes.end + '-empty');\r\n                markers.push(line);\r\n            }\r\n        }\r\n        let cls = type === DIFF_OP.DIFF_DELETE ? classes.del : classes.insert;\r\n        editor.operation(function () {\r\n            let edit = editor === self.baseEditor;\r\n            if (self.classes) {\r\n                clearMarks(editor, markers, classes);\r\n            }\r\n            else {\r\n                clearMergeMarks(editor, markers);\r\n            }\r\n            highlightChars(editor, diff, markers, cls);\r\n            for (let c of self.chunks) {\r\n                if (edit) {\r\n                    markChunk(editor, c.baseFrom, c.baseTo, c.sources);\r\n                }\r\n                else {\r\n                    markChunk(editor, c.remoteFrom, c.remoteTo, c.sources);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    get ownEditor() {\r\n        return this.ownWidget.cm;\r\n    }\r\n}\r\nexports.DiffView = DiffView;\r\n// Updating the marks for editor content\r\nfunction clearMergeMarks(editor, arr) {\r\n    for (let postfix of ['-local', '-remote', '-either', '-custom']) {\r\n        let classes = util_1.copyObj(mergeClassPrefix);\r\n        for (let k of Object.keys(classes)) {\r\n            classes[k] += postfix;\r\n        }\r\n        clearMarks(editor, arr, classes);\r\n    }\r\n}\r\nfunction isTextMarker(marker) {\r\n    return 'clear' in marker;\r\n}\r\nfunction clearMarks(editor, arr, classes) {\r\n    for (let i = arr.length - 1; i >= 0; --i) {\r\n        let mark = arr[i];\r\n        if (isTextMarker(mark)) {\r\n            mark.clear();\r\n            arr.splice(i, 1);\r\n        }\r\n        else if (mark.parent) {\r\n            editor.removeLineClass(mark, 'background', classes.chunk);\r\n            editor.removeLineClass(mark, 'background', classes.start);\r\n            editor.removeLineClass(mark, 'background', classes.end);\r\n            editor.removeLineClass(mark, 'background', CHUNK_CONFLICT_CLASS);\r\n            // Merge editor does not set a marker currently, so don't clear for it:\r\n            if (util_1.valueIn(classes.gutter, [leftClasses.gutter, rightClasses.gutter])) {\r\n                editor.setGutterMarker(mark, GUTTER_PICKER_CLASS, null);\r\n            }\r\n            else {\r\n                editor.setGutterMarker(mark, GUTTER_CONFLICT_CLASS, null);\r\n            }\r\n            let line = editor.lineInfo(mark);\r\n            if (!line.bgClass || line.bgClass.length === 0) {\r\n                arr.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction highlightChars(editor, ranges, markers, cls) {\r\n    let doc = editor.getDoc();\r\n    let origCls = null;\r\n    if (util_1.valueIn(cls, [mergeClassPrefix.del, mergeClassPrefix.insert])) {\r\n        origCls = cls;\r\n    }\r\n    for (let r of ranges) {\r\n        if (origCls !== null) {\r\n            cls = origCls + (r.source ? '-' + r.source.action : '');\r\n        }\r\n        markers.push(doc.markText(r.from, r.to, { className: cls }));\r\n    }\r\n}\r\n// Updating the gap between editor and original\r\n/**\r\n * From a line in base, find the matching line in another editor by chunks.\r\n */\r\nfunction getMatchingEditLine(baseLine, chunks) {\r\n    let offset = 0;\r\n    // Start values correspond to either the start of the chunk,\r\n    // or the start of a preceding unmodified part before the chunk.\r\n    // It is the difference between these two that is interesting.\r\n    for (let i = 0; i < chunks.length; i++) {\r\n        let chunk = chunks[i];\r\n        if (chunk.baseTo > baseLine && chunk.baseFrom <= baseLine) {\r\n            return 0;\r\n        }\r\n        if (chunk.baseFrom > baseLine) {\r\n            break;\r\n        }\r\n        offset = chunk.remoteTo - chunk.baseTo;\r\n    }\r\n    return baseLine + offset;\r\n}\r\n/**\r\n * From a line in base, find the matching line in another editor by line chunks\r\n */\r\nfunction getMatchingEditLineLC(toMatch, chunks) {\r\n    let editLine = toMatch.baseFrom;\r\n    for (let i = 0; i < chunks.length; ++i) {\r\n        let chunk = chunks[i];\r\n        if (chunk.baseFrom === editLine) {\r\n            return chunk.remoteTo;\r\n        }\r\n        if (chunk.baseFrom > editLine) {\r\n            break;\r\n        }\r\n    }\r\n    return toMatch.baseTo;\r\n}\r\n/**\r\n * Find which line numbers align with each other, in the\r\n * set of DiffViews. The returned array is of the format:\r\n *\r\n * [ aligned line #1:[Edit line number, (DiffView#1 line number, DiffView#2 line number,) ...],\r\n *   algined line #2 ..., etc.]\r\n */\r\nfunction findAlignedLines(dvs) {\r\n    let linesToAlign = [];\r\n    let ignored = [];\r\n    // First fill directly from first DiffView\r\n    let dv = dvs[0];\r\n    let others = dvs.slice(1);\r\n    for (let i = 0; i < dv.lineChunks.length; i++) {\r\n        let chunk = dv.lineChunks[i];\r\n        let lines = [chunk.baseTo, chunk.remoteTo];\r\n        for (let o of others) {\r\n            lines.push(getMatchingEditLineLC(chunk, o.lineChunks));\r\n        }\r\n        if (linesToAlign.length > 0 &&\r\n            linesToAlign[linesToAlign.length - 1][0] === lines[0]) {\r\n            let last = linesToAlign[linesToAlign.length - 1];\r\n            for (let j = 0; j < lines.length; ++j) {\r\n                last[j] = Math.max(last[j], lines[j]);\r\n            }\r\n        }\r\n        else {\r\n            if (linesToAlign.length > 0) {\r\n                let prev = linesToAlign[linesToAlign.length - 1];\r\n                let diff = lines[0] - prev[0];\r\n                for (let j = 1; j < lines.length; ++j) {\r\n                    if (diff !== lines[j] - prev[j]) {\r\n                        diff = null;\r\n                        break;\r\n                    }\r\n                }\r\n                if (diff === null) {\r\n                    linesToAlign.push(lines);\r\n                }\r\n                else {\r\n                    ignored.push(lines[0]);\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                linesToAlign.push(lines);\r\n            }\r\n        }\r\n    }\r\n    // Then fill any chunks from remaining DiffView, which are not already added\r\n    for (let o = 0; o < others.length; o++) {\r\n        for (let i = 0; i < others[o].lineChunks.length; i++) {\r\n            let chunk = others[o].lineChunks[i];\r\n            // Check agains existing matches to see if already consumed:\r\n            let j = 0;\r\n            for (; j < linesToAlign.length; j++) {\r\n                let align = linesToAlign[j];\r\n                if (util_1.valueIn(chunk.baseTo, ignored)) {\r\n                    // Chunk already consumed, continue to next chunk\r\n                    j = -1;\r\n                    break;\r\n                }\r\n                else if (align[0] >= chunk.baseTo) {\r\n                    // New chunk, which should be inserted in pos j,\r\n                    // such that linesToAlign are sorted on edit line\r\n                    break;\r\n                }\r\n            }\r\n            if (j > -1) {\r\n                let lines = [chunk.baseTo,\r\n                    getMatchingEditLineLC(chunk, dv.lineChunks)];\r\n                for (let k = 0; k < others.length; k++) {\r\n                    if (k === o) {\r\n                        lines.push(chunk.remoteTo);\r\n                    }\r\n                    else {\r\n                        lines.push(getMatchingEditLineLC(chunk, others[k].lineChunks));\r\n                    }\r\n                }\r\n                if (linesToAlign.length > j && linesToAlign[j][0] === chunk.baseTo) {\r\n                    let last = linesToAlign[j];\r\n                    for (let k = 0; k < lines.length; ++k) {\r\n                        last[k] = Math.max(last[k], lines[k]);\r\n                    }\r\n                }\r\n                else {\r\n                    linesToAlign.splice(j, 0, lines);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return linesToAlign;\r\n}\r\nfunction alignLines(cm, lines, aligners) {\r\n    let maxOffset = 0;\r\n    let offset = [];\r\n    for (let i = 0; i < cm.length; i++) {\r\n        if (lines[i] !== null) {\r\n            let off = cm[i].heightAtLine(lines[i], 'local');\r\n            offset[i] = off;\r\n            maxOffset = Math.max(maxOffset, off);\r\n        }\r\n    }\r\n    for (let i = 0; i < cm.length; i++) {\r\n        if (lines[i] !== null) {\r\n            let diff = maxOffset - offset[i];\r\n            if (diff > 1) {\r\n                aligners.push(padAbove(cm[i], lines[i], diff));\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction padAbove(cm, line, size) {\r\n    let above = true;\r\n    if (line > cm.getDoc().lastLine()) {\r\n        line--;\r\n        above = false;\r\n    }\r\n    let elt = document.createElement('div');\r\n    elt.className = 'CodeMirror-merge-spacer';\r\n    elt.style.height = size + 'px';\r\n    elt.style.minWidth = '1px';\r\n    return cm.addLineWidget(line, elt, { height: size, above: above });\r\n}\r\n// Merge view, containing 1 or 2 diff views.\r\nclass MergeView extends widgets_1.Panel {\r\n    constructor(options) {\r\n        super();\r\n        this.initialized = false;\r\n        this.collapsedRanges = [];\r\n        this.options = options;\r\n        let remote = options.remote;\r\n        let local = options.local || null;\r\n        let merged = options.merged || null;\r\n        let panes = 0;\r\n        let left = this.left = null;\r\n        let right = this.right = null;\r\n        let merge = this.merge = null;\r\n        let self = this;\r\n        this.diffViews = [];\r\n        this.aligners = [];\r\n        let main = options.remote || options.merged;\r\n        if (!main) {\r\n            throw new Error('Either remote or merged model needs to be specified!');\r\n        }\r\n        options.value = (main.base !== null ?\r\n            main.base : main.remote);\r\n        options.lineNumbers = options.lineNumbers !== false;\r\n        // Whether merge view should be readonly\r\n        let readOnly = options.readOnly;\r\n        // For all others:\r\n        options.readOnly = true;\r\n        /*\r\n         * Different cases possible:\r\n         *   - Local and merged supplied: Merge:\r\n         *     - Always use left, right and merge panes\r\n         *     - Use base if `showBase` not set to false\r\n         *   - Only remote supplied: Diff:\r\n         *     - No change: Use ony base editor\r\n         *     - Entire content added/deleted: Use only base editor,\r\n         *       but with different classes\r\n         *     - Partial changes: Use base + right editor\r\n         */\r\n        let dvOptions = options;\r\n        if (merged) {\r\n            options.gutters = [GUTTER_CONFLICT_CLASS, GUTTER_PICKER_CLASS];\r\n            if (options.lineWrapping === undefined) {\r\n                // Turn off linewrapping for merge view by default, keep for diff\r\n                options.lineWrapping = false;\r\n            }\r\n        }\r\n        this.base = new editor_1.EditorWidget(options.value, util_1.copyObj({ readOnly: !!options.readOnly }, options));\r\n        this.base.addClass('CodeMirror-merge-pane');\r\n        this.base.addClass('CodeMirror-merge-pane-base');\r\n        if (merged) {\r\n            let showBase = options.showBase !== false;\r\n            if (!showBase) {\r\n                this.base.node.style.display = 'hidden';\r\n            }\r\n            let leftWidget;\r\n            if (!local || local.remote === null) {\r\n                // Local value was deleted\r\n                left = this.left = null;\r\n                leftWidget = new widgets_1.Widget({ node: elt('div', 'Value missing', 'jp-mod-missing') });\r\n            }\r\n            else {\r\n                left = this.left = new DiffView(local, 'left', this.alignViews.bind(this), util_1.copyObj(dvOptions));\r\n                this.diffViews.push(left);\r\n                leftWidget = left.ownWidget;\r\n            }\r\n            leftWidget.addClass('CodeMirror-merge-pane');\r\n            leftWidget.addClass('CodeMirror-merge-pane-local');\r\n            this.addWidget(leftWidget);\r\n            if (showBase) {\r\n                this.addWidget(this.base);\r\n            }\r\n            let rightWidget;\r\n            if (!remote || remote.remote === null) {\r\n                // Remote value was deleted\r\n                right = this.right = null;\r\n                rightWidget = new widgets_1.Widget({ node: elt('div', 'Value missing', 'jp-mod-missing') });\r\n            }\r\n            else {\r\n                right = this.right = new DiffView(remote, 'right', this.alignViews.bind(this), util_1.copyObj(dvOptions));\r\n                this.diffViews.push(right);\r\n                rightWidget = right.ownWidget;\r\n            }\r\n            rightWidget.addClass('CodeMirror-merge-pane');\r\n            rightWidget.addClass('CodeMirror-merge-pane-remote');\r\n            this.addWidget(rightWidget);\r\n            this.addWidget(new widgets_1.Widget({\r\n                node: elt('div', null, 'CodeMirror-merge-clear', 'height: 0; clear: both;')\r\n            }));\r\n            merge = this.merge = new DiffView(merged, 'merge', this.alignViews.bind(this), util_1.copyObj({ readOnly }, util_1.copyObj(dvOptions)));\r\n            this.diffViews.push(merge);\r\n            let mergeWidget = merge.ownWidget;\r\n            mergeWidget.addClass('CodeMirror-merge-pane');\r\n            mergeWidget.addClass('CodeMirror-merge-pane-final');\r\n            this.addWidget(mergeWidget);\r\n            panes = 3 + (showBase ? 1 : 0);\r\n        }\r\n        else if (remote) { // If in place for type guard\r\n            this.addWidget(this.base);\r\n            if (remote.unchanged || remote.added || remote.deleted) {\r\n                if (remote.unchanged) {\r\n                    this.base.addClass('CodeMirror-merge-pane-unchanged');\r\n                }\r\n                else if (remote.added) {\r\n                    this.base.addClass('CodeMirror-merge-pane-added');\r\n                }\r\n                else if (remote.deleted) {\r\n                    this.base.addClass('CodeMirror-merge-pane-deleted');\r\n                }\r\n                panes = 1;\r\n            }\r\n            else {\r\n                right = this.right = new DiffView(remote, 'right', this.alignViews.bind(this), dvOptions);\r\n                this.diffViews.push(right);\r\n                let rightWidget = right.ownWidget;\r\n                rightWidget.addClass('CodeMirror-merge-pane');\r\n                rightWidget.addClass('CodeMirror-merge-pane-remote');\r\n                this.addWidget(new widgets_1.Widget({ node: right.buildGap() }));\r\n                this.addWidget(rightWidget);\r\n                panes = 2;\r\n            }\r\n            this.addWidget(new widgets_1.Widget({\r\n                node: elt('div', null, 'CodeMirror-merge-clear', 'height: 0; clear: both;')\r\n            }));\r\n        }\r\n        this.addClass('CodeMirror-merge');\r\n        this.addClass('CodeMirror-merge-' + panes + 'pane');\r\n        for (let dv of [left, right, merge]) {\r\n            if (dv) {\r\n                dv.init(this.base.cm);\r\n            }\r\n        }\r\n        if (options.collapseIdentical && panes > 1) {\r\n            this.base.cm.operation(function () {\r\n                collapseIdenticalStretches(self, options.collapseIdentical);\r\n            });\r\n        }\r\n        for (let dv of [left, right, merge]) {\r\n            if (dv) {\r\n                dv.collapsedRanges = this.collapsedRanges;\r\n            }\r\n        }\r\n        this.initialized = true;\r\n        if (this.left || this.right || this.merge) {\r\n            this.alignViews(true);\r\n        }\r\n    }\r\n    alignViews(force) {\r\n        let dealigned = false;\r\n        if (!this.initialized) {\r\n            return;\r\n        }\r\n        for (let dv of this.diffViews) {\r\n            dv.syncModel();\r\n            if (dv.dealigned) {\r\n                dealigned = true;\r\n                dv.dealigned = false;\r\n            }\r\n        }\r\n        if (!dealigned && !force) {\r\n            return; // Nothing to do\r\n        }\r\n        // Find matching lines\r\n        let linesToAlign = findAlignedLines(this.diffViews);\r\n        // Function modifying DOM to perform alignment:\r\n        let self = this;\r\n        let f = function () {\r\n            // Clear old aligners\r\n            let aligners = self.aligners;\r\n            for (let i = 0; i < aligners.length; i++) {\r\n                aligners[i].clear();\r\n            }\r\n            aligners.length = 0;\r\n            // Editors (order is important, so it matches\r\n            // format of linesToAlign)\r\n            let cm = [self.base.cm];\r\n            let scroll = [];\r\n            for (let dv of self.diffViews) {\r\n                cm.push(dv.ownEditor);\r\n            }\r\n            for (let i = 0; i < cm.length; i++) {\r\n                scroll.push(cm[i].getScrollInfo().top);\r\n            }\r\n            for (let ln = 0; ln < linesToAlign.length; ln++) {\r\n                alignLines(cm, linesToAlign[ln], aligners);\r\n            }\r\n            for (let i = 0; i < cm.length; i++) {\r\n                cm[i].scrollTo(null, scroll[i]);\r\n            }\r\n        };\r\n        // All editors should have an operation (simultaneously),\r\n        // so set up nested operation calls.\r\n        if (!this.base.cm.curOp) {\r\n            f = function (fn) {\r\n                return function () { self.base.cm.operation(fn); };\r\n            }(f);\r\n        }\r\n        for (let dv of this.diffViews) {\r\n            if (!dv.ownEditor.curOp) {\r\n                f = function (fn) {\r\n                    return function () { dv.ownEditor.operation(fn); };\r\n                }(f);\r\n            }\r\n        }\r\n        // Perform alignment\r\n        f();\r\n    }\r\n    setShowDifferences(val) {\r\n        if (this.right) {\r\n            this.right.setShowDifferences(val);\r\n        }\r\n        if (this.left) {\r\n            this.left.setShowDifferences(val);\r\n        }\r\n    }\r\n    getMergedValue() {\r\n        if (!this.merge) {\r\n            throw new Error('No merged value; missing \"merged\" view');\r\n        }\r\n        return this.merge.ownEditor.getValue();\r\n    }\r\n}\r\nexports.MergeView = MergeView;\r\nfunction collapseSingle(cm, from, to) {\r\n    cm.addLineClass(from, 'wrap', 'CodeMirror-merge-collapsed-line');\r\n    let widget = document.createElement('span');\r\n    widget.className = 'CodeMirror-merge-collapsed-widget';\r\n    widget.title = 'Identical text collapsed. Click to expand.';\r\n    let mark = cm.getDoc().markText(CodeMirror.Pos(from, 0), CodeMirror.Pos(to - 1), {\r\n        inclusiveLeft: true,\r\n        inclusiveRight: true,\r\n        replacedWith: widget,\r\n        clearOnEnter: true\r\n    });\r\n    function clear() {\r\n        mark.clear();\r\n        cm.removeLineClass(from, 'wrap', 'CodeMirror-merge-collapsed-line');\r\n    }\r\n    CodeMirror.on(widget, 'click', clear);\r\n    return { mark: mark, clear: clear };\r\n}\r\nfunction collapseStretch(size, editors) {\r\n    let marks = [];\r\n    function clear() {\r\n        for (let i = 0; i < marks.length; i++) {\r\n            marks[i].clear();\r\n        }\r\n    }\r\n    for (let i = 0; i < editors.length; i++) {\r\n        let editor = editors[i];\r\n        let mark = collapseSingle(editor.cm, editor.line, editor.line + size);\r\n        marks.push(mark);\r\n        // Undocumented, but merge.js used it, so follow their lead:\r\n        mark.mark.on('clear', clear);\r\n    }\r\n    return marks[0].mark;\r\n}\r\nfunction unclearNearChunks(dv, margin, off, clear) {\r\n    for (let i = 0; i < dv.chunks.length; i++) {\r\n        let chunk = dv.chunks[i];\r\n        for (let l = chunk.baseFrom - margin; l < chunk.baseTo + margin; l++) {\r\n            let pos = l + off;\r\n            if (pos >= 0 && pos < clear.length) {\r\n                clear[pos] = false;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction collapseIdenticalStretches(mv, margin) {\r\n    // FIXME: Use all panes\r\n    if (typeof margin !== 'number') {\r\n        margin = 2;\r\n    }\r\n    let clear = [];\r\n    let edit = mv.base.cm;\r\n    let off = edit.getDoc().firstLine();\r\n    for (let l = off, e = edit.getDoc().lastLine(); l <= e; l++) {\r\n        clear.push(true);\r\n    }\r\n    if (mv.left) {\r\n        unclearNearChunks(mv.left, margin, off, clear);\r\n    }\r\n    if (mv.right) {\r\n        unclearNearChunks(mv.right, margin, off, clear);\r\n    }\r\n    if (mv.merge) {\r\n        unclearNearChunks(mv.merge, margin, off, clear);\r\n    }\r\n    mv.collapsedRanges = [];\r\n    for (let i = 0; i < clear.length; i++) {\r\n        if (clear[i]) {\r\n            let line = i + off;\r\n            let size = 1;\r\n            for (; i < clear.length - 1 && clear[i + 1]; i++, size++) {\r\n                // Just finding size\r\n            }\r\n            if (size > margin) {\r\n                let editors = [{ line: line, cm: edit }];\r\n                if (mv.left) {\r\n                    editors.push({ line: getMatchingEditLine(line, mv.left.chunks),\r\n                        cm: mv.left.ownEditor });\r\n                }\r\n                if (mv.right) {\r\n                    editors.push({ line: getMatchingEditLine(line, mv.right.chunks),\r\n                        cm: mv.right.ownEditor });\r\n                }\r\n                if (mv.merge) {\r\n                    editors.push({ line: getMatchingEditLine(line, mv.merge.chunks),\r\n                        cm: mv.merge.ownEditor });\r\n                }\r\n                let mark = collapseStretch(size, editors);\r\n                mv.collapsedRanges.push({ line, size });\r\n                mark.on('clear', () => {\r\n                    for (let i = 0; i < mv.collapsedRanges.length; ++i) {\r\n                        let range = mv.collapsedRanges[i];\r\n                        if (range.line === line) {\r\n                            mv.collapsedRanges.splice(i, 1);\r\n                            return;\r\n                        }\r\n                    }\r\n                });\r\n                if (mv.options.onCollapse) {\r\n                    mv.options.onCollapse(mv, line, size, mark);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// General utilities\r\nfunction elt(tag, content, className, style) {\r\n    let e = document.createElement(tag);\r\n    if (className) {\r\n        e.className = className;\r\n    }\r\n    if (style) {\r\n        e.style.cssText = style;\r\n    }\r\n    if (typeof content === 'string') {\r\n        e.appendChild(document.createTextNode(content));\r\n    }\r\n    else if (content) {\r\n        for (let i = 0; i < content.length; ++i) {\r\n            e.appendChild((content)[i]);\r\n        }\r\n    }\r\n    return e;\r\n}\r\nfunction findPrevDiff(chunks, start, isOrig) {\r\n    for (let i = chunks.length - 1; i >= 0; i--) {\r\n        let chunk = chunks[i];\r\n        let to = (isOrig ? chunk.remoteTo : chunk.baseTo) - 1;\r\n        if (to < start) {\r\n            return to;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction findNextDiff(chunks, start, isOrig) {\r\n    for (let i = 0; i < chunks.length; i++) {\r\n        let chunk = chunks[i];\r\n        let from = (isOrig ? chunk.remoteFrom : chunk.baseFrom);\r\n        if (from > start) {\r\n            return from;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nvar DiffDirection;\r\n(function (DiffDirection) {\r\n    DiffDirection[DiffDirection[\"Previous\"] = -1] = \"Previous\";\r\n    DiffDirection[DiffDirection[\"Next\"] = 1] = \"Next\";\r\n})(DiffDirection || (DiffDirection = {}));\r\nfunction goNearbyDiff(cm, dir) {\r\n    let found = null;\r\n    let views = cm.state.diffViews;\r\n    let line = cm.getDoc().getCursor().line;\r\n    if (views) {\r\n        for (let i = 0; i < views.length; i++) {\r\n            let dv = views[i];\r\n            let isOrig = cm === dv.ownEditor;\r\n            let pos = dir === DiffDirection.Previous ?\r\n                findPrevDiff(dv.chunks, line, isOrig) :\r\n                findNextDiff(dv.chunks, line, isOrig);\r\n            if (pos !== null && (found === null ||\r\n                (dir === DiffDirection.Previous ? pos > found : pos < found))) {\r\n                found = pos;\r\n            }\r\n        }\r\n    }\r\n    if (found !== null) {\r\n        cm.getDoc().setCursor(found, 0);\r\n    }\r\n    else {\r\n        return CodeMirror.Pass;\r\n    }\r\n}\r\nCodeMirror.commands.goNextDiff = function (cm) {\r\n    return goNearbyDiff(cm, DiffDirection.Next);\r\n};\r\nCodeMirror.commands.goPrevDiff = function (cm) {\r\n    return goNearbyDiff(cm, DiffDirection.Previous);\r\n};\r\n//# sourceMappingURL=mergeview.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.buildSelect = exports.copyObj = exports.stableSort = exports.intersection = exports.unique = exports.accumulateLengths = exports.repeatString = exports.sortByKey = exports.isPrefixArray = exports.findSharedPrefix = exports.arraysEqual = exports.shallowCopy = exports.deepCopy = exports.splitLines = exports.hasEntries = exports.valueIn = void 0;\r\n/**\r\n * Check whether a value is in an array.\r\n */\r\nfunction valueIn(value, array) {\r\n    return array.indexOf(value) >= 0;\r\n}\r\nexports.valueIn = valueIn;\r\n/**\r\n * Check whether array is null or empty, and type guards agains null\r\n */\r\nfunction hasEntries(array) {\r\n    return array !== null && array.length !== 0;\r\n}\r\nexports.hasEntries = hasEntries;\r\n/**\r\n * Splits a multinline string into an array of lines\r\n *\r\n * @export\r\n * @param {string} multiline\r\n * @returns {string[]}\r\n */\r\nfunction splitLines(multiline) {\r\n    // Split lines (retaining newlines)\r\n    // We use !postfix, as we also match empty string,\r\n    // so we are guaranteed to get at elast one match\r\n    return multiline.match(/^.*(\\r\\n|\\r|\\n|$)/gm);\r\n}\r\nexports.splitLines = splitLines;\r\nfunction deepCopy(obj) {\r\n    if (typeof obj !== 'object') {\r\n        if (valueIn(typeof obj, ['string', 'number', 'boolean'])) {\r\n            return obj;\r\n        }\r\n        throw new TypeError('Cannot deepcopy non-object');\r\n    }\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    else if (Array.isArray(obj)) {\r\n        let l = obj.length;\r\n        let o = new Array(l);\r\n        for (let i = 0; i < l; i++) {\r\n            o[i] = deepCopy(obj[i]);\r\n        }\r\n        return o;\r\n    }\r\n    else {\r\n        let a = obj;\r\n        let r = {};\r\n        if (a.prototype !== undefined) {\r\n            r.prototype = a.prototype;\r\n        }\r\n        for (let k in obj) {\r\n            r[k] = deepCopy(a[k]);\r\n        }\r\n        return r;\r\n    }\r\n}\r\nexports.deepCopy = deepCopy;\r\n/**\r\n * Shallow copy routine for objects\r\n */\r\nfunction shallowCopy(original) {\r\n    // First create an empty object with\r\n    // same prototype of our original source\r\n    let clone = Object.create(Object.getPrototypeOf(original));\r\n    for (let k in original) {\r\n        // Don't copy function\r\n        let ok = original[k];\r\n        if (ok !== null && ok !== undefined &&\r\n            ok.hasOwnProperty('constructor') &&\r\n            ok.constructor === Function) {\r\n            continue;\r\n        }\r\n        let pDesc = Object.getOwnPropertyDescriptor(original, k);\r\n        // Don't copy properties with getter\r\n        if (!pDesc || pDesc.get) {\r\n            continue;\r\n        }\r\n        // copy each property into the clone\r\n        Object.defineProperty(clone, k, pDesc);\r\n    }\r\n    return clone;\r\n}\r\nexports.shallowCopy = shallowCopy;\r\n/**\r\n * Do a shallow, element-wise equality comparison on two arrays.\r\n */\r\nfunction arraysEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a === null || b === null) {\r\n        return false;\r\n    }\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.arraysEqual = arraysEqual;\r\n/**\r\n * Find the shared common starting sequence in two arrays\r\n */\r\nfunction findSharedPrefix(a, b) {\r\n    if (a === null || b === null) {\r\n        return null;\r\n    }\r\n    if (a === b) { // Only checking for instance equality\r\n        return a.slice();\r\n    }\r\n    let i = 0;\r\n    for (; i < Math.min(a.length, b.length); ++i) {\r\n        if (a[i] !== b[i]) {\r\n            break;\r\n        }\r\n    }\r\n    return a.slice(0, i);\r\n}\r\nexports.findSharedPrefix = findSharedPrefix;\r\n/**\r\n * Check whether `parent` is contained within the start of `child`\r\n *\r\n * Note on terminology: Parent is here the shortest array, as it will\r\n * be the parent in a tree-view of values, e.g. a path. In other words, parent\r\n * is a subsequence of child.\r\n */\r\nfunction isPrefixArray(parent, child) {\r\n    if (parent === child) {\r\n        return true;\r\n    }\r\n    if (parent === null || parent.length === 0) {\r\n        return true;\r\n    }\r\n    if (child === null || parent.length > child.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < parent.length; ++i) {\r\n        if (parent[i] !== child[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.isPrefixArray = isPrefixArray;\r\n/**\r\n * Sort array by attribute `key` (i.e. compare by array[0][key] < array[1][key]). Stable.\r\n */\r\nfunction sortByKey(array, key) {\r\n    return stableSort(array, function (a, b) {\r\n        let x = a[key];\r\n        let y = b[key];\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n    });\r\n}\r\nexports.sortByKey = sortByKey;\r\n/**\r\n * Utility function to repeat a string\r\n */\r\nfunction repeatString(str, count) {\r\n    if (count < 1) {\r\n        return '';\r\n    }\r\n    let result = '';\r\n    let pattern = str.valueOf();\r\n    while (count > 1) {\r\n        if (count & 1) {\r\n            result += pattern;\r\n        }\r\n        count >>= 1, pattern += pattern;\r\n    }\r\n    return result + pattern;\r\n}\r\nexports.repeatString = repeatString;\r\n/**\r\n * Calculate the cumulative sum of string lengths for an array of strings\r\n *\r\n * Example:\r\n *   For the arary ['ab', '123', 'y', '\\t\\nfoo'], the output would be\r\n *   [2, 5, 6, 11]\r\n */\r\nfunction accumulateLengths(arr) {\r\n    let ret = [];\r\n    arr.reduce(function (a, b, i) {\r\n        return ret[i] = a + b.length;\r\n    }, 0);\r\n    return ret;\r\n}\r\nexports.accumulateLengths = accumulateLengths;\r\n/**\r\n * Filter for Array.filter to only have unique values\r\n */\r\nfunction unique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n}\r\nexports.unique = unique;\r\n/**\r\n * Return the intersection of two arrays (with no duplicates)\r\n */\r\nfunction intersection(a, b) {\r\n    let ret = [];\r\n    // Loop over longest, so that indexOf works on shortest\r\n    [a, b] = a.length > b.length ? [a, b] : [b, a];\r\n    for (let ia of a) {\r\n        if (b.indexOf(ia) !== -1) {\r\n            ret.push(ia);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexports.intersection = intersection;\r\n/**\r\n * Similar to Array.sort, but guaranteed to keep order stable\r\n * when compare function returns 0\r\n */\r\nfunction stableSort(arr, compare) {\r\n    let sorters = [];\r\n    for (let i = 0; i < arr.length; ++i) {\r\n        sorters.push({ index: i, key: arr[i] });\r\n    }\r\n    sorters = sorters.sort((a, b) => {\r\n        return compare(a.key, b.key) || a.index - b.index;\r\n    });\r\n    let out = new Array(arr.length);\r\n    for (let i = 0; i < arr.length; ++i) {\r\n        out[i] = arr[sorters[i].index];\r\n    }\r\n    return out;\r\n}\r\nexports.stableSort = stableSort;\r\nfunction copyObj(obj, target) {\r\n    if (!target) {\r\n        target = {};\r\n    }\r\n    for (let prop in obj) {\r\n        if (obj.hasOwnProperty(prop)) {\r\n            target[prop] = obj[prop];\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexports.copyObj = copyObj;\r\n/**\r\n * Create or populate a select element with string options\r\n */\r\nfunction buildSelect(options, select) {\r\n    if (select === undefined) {\r\n        select = document.createElement('select');\r\n    }\r\n    for (let option of options) {\r\n        let opt = document.createElement('option');\r\n        opt.text = option;\r\n        select.appendChild(opt);\r\n    }\r\n    return select;\r\n}\r\nexports.buildSelect = buildSelect;\r\n//# sourceMappingURL=util.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.validateObjectOp = exports.validateSequenceOp = exports.opPatch = exports.opRemoveRange = exports.opAddRange = exports.opRemove = exports.opAdd = exports.opReplace = void 0;\r\nconst util_1 = require(\"../common/util\");\r\n/** Create a replacement diff entry */\r\nfunction opReplace(key, value) {\r\n    return { op: 'replace', key: key, value: value };\r\n}\r\nexports.opReplace = opReplace;\r\n/** Create an addition diff entry */\r\nfunction opAdd(key, value) {\r\n    return { op: 'add', key: key, value: value };\r\n}\r\nexports.opAdd = opAdd;\r\n/** Create a removal diff entry */\r\nfunction opRemove(key) {\r\n    return { op: 'remove', key: key };\r\n}\r\nexports.opRemove = opRemove;\r\n/** Create a removal diff entry */\r\nfunction opAddRange(key, valuelist) {\r\n    return { op: 'addrange', key: key, valuelist: valuelist };\r\n}\r\nexports.opAddRange = opAddRange;\r\n/** Create a range removal diff entry */\r\nfunction opRemoveRange(key, length) {\r\n    return { op: 'removerange', key: key, length: length };\r\n}\r\nexports.opRemoveRange = opRemoveRange;\r\n/** Create a range removal diff entry */\r\nfunction opPatch(key, diff) {\r\n    return { op: 'patch', key: key, diff: diff };\r\n}\r\nexports.opPatch = opPatch;\r\n/**\r\n * Validate that a diff operation is valid to apply on a given base sequence\r\n */\r\nfunction validateSequenceOp(base, entry) {\r\n    if (typeof entry.key !== 'number') {\r\n        console.info('Invalid patch details', base, entry);\r\n        throw new TypeError(`Invalid patch sequence op: Key is not a number: ${entry.key}`);\r\n    }\r\n    let index = entry.key;\r\n    if (entry.op === 'addrange') {\r\n        if (index < 0 || index > base.length || isNaN(index)) {\r\n            throw new RangeError('Invalid add range diff op: Key out of range: ' + index);\r\n        }\r\n    }\r\n    else if (entry.op === 'removerange') {\r\n        if (index < 0 || index >= base.length || isNaN(index)) {\r\n            throw new RangeError('Invalid remove range diff op: Key out of range: ' + index);\r\n        }\r\n        let skip = entry.length;\r\n        if (index + skip > base.length || isNaN(index)) {\r\n            throw new RangeError('Invalid remove range diff op: Range too long!');\r\n        }\r\n    }\r\n    else if (entry.op === 'patch') {\r\n        if (index < 0 || index >= base.length || isNaN(index)) {\r\n            throw new RangeError('Invalid patch diff op: Key out of range: ' + index);\r\n        }\r\n    }\r\n    else {\r\n        throw new Error('Invalid op: ' + entry.op);\r\n    }\r\n}\r\nexports.validateSequenceOp = validateSequenceOp;\r\n/**\r\n * Validate that a diff operation is valid to apply on a given base object\r\n */\r\nfunction validateObjectOp(base, entry, keys) {\r\n    let op = entry.op;\r\n    if (typeof entry.key !== 'string') {\r\n        console.info('Invalid patch details', base, entry, keys);\r\n        throw new TypeError(`Invalid patch object op: Key is not a string: ${entry.key}`);\r\n    }\r\n    let key = entry.key;\r\n    if (op === 'add') {\r\n        if (util_1.valueIn(key, keys)) {\r\n            throw new Error('Invalid add key diff op: Key already present: ' + key);\r\n        }\r\n    }\r\n    else if (op === 'remove') {\r\n        if (!util_1.valueIn(key, keys)) {\r\n            throw new Error('Invalid remove key diff op: Missing key: ' + key);\r\n        }\r\n    }\r\n    else if (op === 'replace') {\r\n        if (!util_1.valueIn(key, keys)) {\r\n            throw new Error('Invalid replace key diff op: Missing key: ' + key);\r\n        }\r\n    }\r\n    else if (op === 'patch') {\r\n        if (!util_1.valueIn(key, keys)) {\r\n            throw new Error('Invalid patch key diff op: Missing key: ' + key);\r\n        }\r\n    }\r\n    else {\r\n        throw new Error('Invalid op: ' + op);\r\n    }\r\n}\r\nexports.validateObjectOp = validateObjectOp;\r\n//# sourceMappingURL=diffentries.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createDeletedCellDiffModel = exports.createAddedCellDiffModel = exports.createUnchangedCellDiffModel = exports.createPatchedCellDiffModel = exports.CellDiffModel = void 0;\r\nconst nbformat = require(\"@jupyterlab/nbformat\");\r\nconst exceptions_1 = require(\"../../common/exceptions\");\r\nconst util_1 = require(\"../util\");\r\nconst string_1 = require(\"./string\");\r\nconst output_1 = require(\"./output\");\r\nconst immutable_1 = require(\"./immutable\");\r\n/**\r\n * Diff model for individual Notebook Cells\r\n */\r\nclass CellDiffModel {\r\n    constructor(source, metadata, outputs, executionCount, cellType) {\r\n        this.source = source;\r\n        this.metadata = metadata;\r\n        this.outputs = outputs;\r\n        this.executionCount = executionCount;\r\n        this.cellType = cellType;\r\n        if (outputs === null && cellType === 'code') {\r\n            throw new exceptions_1.NotifyUserError('Invalid code cell, missing outputs!');\r\n        }\r\n        this.metadata.collapsible = true;\r\n        this.metadata.collapsibleHeader = 'Metadata changed';\r\n        this.metadata.startCollapsed = true;\r\n    }\r\n    /**\r\n     * Whether the cell has remained unchanged\r\n     */\r\n    get unchanged() {\r\n        let unchanged = this.source.unchanged;\r\n        unchanged = unchanged &&\r\n            (this.metadata ? this.metadata.unchanged : true);\r\n        if (this.outputs) {\r\n            for (let o of this.outputs) {\r\n                unchanged = unchanged && o.unchanged;\r\n            }\r\n        }\r\n        if (this.executionCount) {\r\n            // TODO: Ignore if option 'ignore minor' set?\r\n            unchanged = unchanged && this.executionCount.unchanged;\r\n        }\r\n        return unchanged;\r\n    }\r\n    /**\r\n     * Whether the cell has been added to the notebook (new cell)\r\n     */\r\n    get added() {\r\n        return this.source.added;\r\n    }\r\n    /**\r\n     * Whether the cell has been deleted/removed from the notebook\r\n     */\r\n    get deleted() {\r\n        return this.source.deleted;\r\n    }\r\n    /**\r\n     * Chunked outputs\r\n     */\r\n    getChunkedOutputs() {\r\n        if (this.outputs === null) {\r\n            return null;\r\n        }\r\n        const chunks = [];\r\n        if (this.added || this.deleted) {\r\n            // Should not chunk outputs for added/deleted cells\r\n            // simply make one element chunks:\r\n            for (let o of this.outputs) {\r\n                chunks.push([o]);\r\n            }\r\n        }\r\n        else {\r\n            let currentChunk = [];\r\n            for (let o of this.outputs) {\r\n                if (o.added || o.deleted) {\r\n                    currentChunk.push(o);\r\n                }\r\n                else {\r\n                    if (currentChunk.length) {\r\n                        chunks.push(currentChunk);\r\n                    }\r\n                    chunks.push([o]);\r\n                    currentChunk = [];\r\n                }\r\n            }\r\n            if (currentChunk.length) {\r\n                chunks.push(currentChunk);\r\n            }\r\n        }\r\n        return chunks;\r\n    }\r\n}\r\nexports.CellDiffModel = CellDiffModel;\r\nfunction createPatchedCellDiffModel(base, diff, nbMimetype) {\r\n    let source = null;\r\n    let metadata = null;\r\n    let outputs = null;\r\n    let executionCount = null;\r\n    let subDiff = util_1.getSubDiffByKey(diff, 'source');\r\n    if (subDiff) {\r\n        source = string_1.createPatchStringDiffModel(base.source, subDiff);\r\n    }\r\n    else {\r\n        source = string_1.createDirectStringDiffModel(base.source, base.source);\r\n    }\r\n    string_1.setMimetypeFromCellType(source, base, nbMimetype);\r\n    subDiff = util_1.getSubDiffByKey(diff, 'metadata');\r\n    metadata = subDiff ?\r\n        string_1.createPatchStringDiffModel(base.metadata, subDiff) :\r\n        string_1.createDirectStringDiffModel(base.metadata, base.metadata);\r\n    if (nbformat.isCode(base)) {\r\n        let outputsBase = base.outputs;\r\n        let outputsDiff = util_1.getSubDiffByKey(diff, 'outputs');\r\n        if (outputsDiff) {\r\n            // Outputs patched\r\n            outputs = output_1.makeOutputModels(outputsBase, null, outputsDiff);\r\n        }\r\n        else {\r\n            // Outputs unchanged\r\n            outputs = output_1.makeOutputModels(outputsBase, outputsBase);\r\n        }\r\n        let execBase = base.execution_count;\r\n        let execDiff = util_1.getDiffEntryByKey(diff, 'execution_count');\r\n        // Pass base as remote, which means fall back to unchanged if no diff:\r\n        executionCount = immutable_1.createImmutableModel(execBase, execBase, execDiff);\r\n    }\r\n    return new CellDiffModel(source, metadata, outputs, executionCount, base.cell_type);\r\n}\r\nexports.createPatchedCellDiffModel = createPatchedCellDiffModel;\r\nfunction createUnchangedCellDiffModel(base, nbMimetype) {\r\n    let source = string_1.createDirectStringDiffModel(base.source, base.source);\r\n    string_1.setMimetypeFromCellType(source, base, nbMimetype);\r\n    let metadata = string_1.createDirectStringDiffModel(base.metadata, base.metadata);\r\n    let outputs = null;\r\n    let executionCount = null;\r\n    if (nbformat.isCode(base)) {\r\n        outputs = output_1.makeOutputModels(base.outputs, base.outputs);\r\n        let execBase = base.execution_count;\r\n        executionCount = immutable_1.createImmutableModel(execBase, execBase);\r\n    }\r\n    else { // markdown or raw cell\r\n    }\r\n    return new CellDiffModel(source, metadata, outputs, executionCount, base.cell_type);\r\n}\r\nexports.createUnchangedCellDiffModel = createUnchangedCellDiffModel;\r\nfunction createAddedCellDiffModel(remote, nbMimetype) {\r\n    let source = string_1.createDirectStringDiffModel(null, remote.source);\r\n    string_1.setMimetypeFromCellType(source, remote, nbMimetype);\r\n    let metadata = string_1.createDirectStringDiffModel(null, remote.metadata);\r\n    let outputs = null;\r\n    let executionCount = null;\r\n    if (nbformat.isCode(remote)) {\r\n        outputs = output_1.makeOutputModels(null, remote.outputs);\r\n        executionCount = immutable_1.createImmutableModel(null, remote.execution_count);\r\n    }\r\n    return new CellDiffModel(source, metadata, outputs, executionCount, remote.cell_type);\r\n}\r\nexports.createAddedCellDiffModel = createAddedCellDiffModel;\r\nfunction createDeletedCellDiffModel(base, nbMimetype) {\r\n    let source = string_1.createDirectStringDiffModel(base.source, null);\r\n    string_1.setMimetypeFromCellType(source, base, nbMimetype);\r\n    let metadata = string_1.createDirectStringDiffModel(base.metadata, null);\r\n    let outputs = null;\r\n    let executionCount = null;\r\n    if (nbformat.isCode(base)) {\r\n        outputs = output_1.makeOutputModels(base.outputs, null);\r\n        let execBase = base.execution_count;\r\n        executionCount = immutable_1.createImmutableModel(execBase, null);\r\n    }\r\n    return new CellDiffModel(source, metadata, outputs, executionCount, base.cell_type);\r\n}\r\nexports.createDeletedCellDiffModel = createDeletedCellDiffModel;\r\n//# sourceMappingURL=cell.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=common.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createImmutableModel = exports.ImmutableDiffModel = void 0;\r\n/**\r\n * Standard implementation of the IStringDiffModel interface.\r\n */\r\nclass ImmutableDiffModel {\r\n    /**\r\n     * ImmutableDiffModel constructor.\r\n     *\r\n     * `collapsible` and `collapsed` both defaults to false.\r\n     */\r\n    constructor(base, remote, collapsible, header, collapsed) {\r\n        this.base = base;\r\n        this.remote = remote;\r\n        this.collapsible = collapsible === true;\r\n        if (this.collapsible) {\r\n            this.collapsibleHeader = header ? header : '';\r\n            this.startCollapsed = collapsed === true;\r\n        }\r\n    }\r\n    get unchanged() {\r\n        return this.base === this.remote;\r\n    }\r\n    get added() {\r\n        return this.base === undefined;\r\n    }\r\n    get deleted() {\r\n        return this.remote === undefined;\r\n    }\r\n}\r\nexports.ImmutableDiffModel = ImmutableDiffModel;\r\n/**\r\n * Create an ImmutableDiffModel from a base value, a remote value, and a single diff entry.\r\n *\r\n * Note: The requirement of a single diff entry means it will not support\r\n * an add/replace pair on the same key, as this should instead be represented\r\n * by a 'replace' op.\r\n *\r\n * @export\r\n * @param {(ImmutableValue | undefined)} base : The base value\r\n * @param {(IDiffImmutableObjectEntry | null)} diff : The diff entry, or null if unchanged\r\n * @returns {ImmutableDiffModel}\r\n */\r\nfunction createImmutableModel(base, remote, diff) {\r\n    if (!diff) {\r\n        return new ImmutableDiffModel(base, remote);\r\n    }\r\n    else if (diff.op === 'add') {\r\n        if (base !== undefined) {\r\n            throw new Error('Invalid diff op on immutable value');\r\n        }\r\n        return new ImmutableDiffModel(base, diff.value);\r\n    }\r\n    else if (diff.op === 'remove') {\r\n        if (base === undefined) {\r\n            throw new Error('Invalid diff op on immutable value');\r\n        }\r\n        return new ImmutableDiffModel(base, undefined);\r\n    }\r\n    else { // diff.op === 'replace'\r\n        if (base === undefined) {\r\n            throw new Error('Invalid diff op on immutable value');\r\n        }\r\n        return new ImmutableDiffModel(base, diff.value);\r\n    }\r\n}\r\nexports.createImmutableModel = createImmutableModel;\r\n//# sourceMappingURL=immutable.js.map","\"use strict\";\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./cell\"), exports);\r\n__exportStar(require(\"./common\"), exports);\r\n__exportStar(require(\"./immutable\"), exports);\r\n__exportStar(require(\"./notebook\"), exports);\r\n__exportStar(require(\"./output\"), exports);\r\n__exportStar(require(\"./renderable\"), exports);\r\n__exportStar(require(\"./string\"), exports);\r\n//# sourceMappingURL=index.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NotebookDiffModel = void 0;\r\nconst util_1 = require(\"../util\");\r\nconst string_1 = require(\"./string\");\r\nconst cell_1 = require(\"./cell\");\r\n/**\r\n * Diff model for a Jupyter Notebook\r\n */\r\nclass NotebookDiffModel {\r\n    /**\r\n     * Create a new NotebookDiffModel from a base notebook and a list of diffs.\r\n     *\r\n     * The base as well as the diff entries are normally supplied by the nbdime\r\n     * server.\r\n     */\r\n    constructor(base, diff) {\r\n        // Process global notebook metadata field\r\n        let metaDiff = util_1.getSubDiffByKey(diff, 'metadata');\r\n        if (base.metadata && metaDiff) {\r\n            this.metadata = string_1.createPatchStringDiffModel(base.metadata, metaDiff);\r\n        }\r\n        else {\r\n            this.metadata = null;\r\n        }\r\n        if (this.metadata) {\r\n            this.metadata.collapsible = true;\r\n            this.metadata.collapsibleHeader = 'Notebook metadata changed';\r\n            this.metadata.startCollapsed = true;\r\n        }\r\n        // The notebook metadata MIME type is used for determining the MIME type\r\n        // of source cells, so store it easily accessible:\r\n        let mimetype;\r\n        try {\r\n            mimetype = base.metadata.language_info.mimetype;\r\n        }\r\n        catch (e) {\r\n            // missing metadata (probably old notebook)\r\n        }\r\n        this.mimetype = mimetype || 'text/python';\r\n        // Build cell diff models. Follows similar logic to patching code:\r\n        this.cells = [];\r\n        this.chunkedCells = [];\r\n        let take = 0;\r\n        let skip = 0;\r\n        let previousChunkIndex = -1;\r\n        let currentChunk = [];\r\n        for (let e of util_1.getSubDiffByKey(diff, 'cells') || []) {\r\n            let index = e.key;\r\n            // diff is sorted on index, so take any preceding cells as unchanged:\r\n            for (let i = take; i < index; i++) {\r\n                let cell = cell_1.createUnchangedCellDiffModel(base.cells[i], this.mimetype);\r\n                this.cells.push(cell);\r\n                this.chunkedCells.push([cell]);\r\n            }\r\n            if (index !== previousChunkIndex) {\r\n                currentChunk = [];\r\n                this.chunkedCells.push(currentChunk);\r\n                previousChunkIndex = index;\r\n            }\r\n            // Process according to diff type:\r\n            if (e.op === 'addrange') {\r\n                // One or more inserted/added cells:\r\n                for (let ei of e.valuelist) {\r\n                    let cell = cell_1.createAddedCellDiffModel(ei, this.mimetype);\r\n                    this.cells.push(cell);\r\n                    currentChunk.push(cell);\r\n                }\r\n                skip = 0;\r\n            }\r\n            else if (e.op === 'removerange') {\r\n                // One or more removed/deleted cells:\r\n                skip = e.length;\r\n                for (let i = index; i < index + skip; i++) {\r\n                    let cell = cell_1.createDeletedCellDiffModel(base.cells[i], this.mimetype);\r\n                    this.cells.push(cell);\r\n                    currentChunk.push(cell);\r\n                }\r\n            }\r\n            else if (e.op === 'patch') {\r\n                // Ensure patches gets their own chunk, even if they share index:\r\n                if (currentChunk.length > 0) {\r\n                    currentChunk = [];\r\n                    this.chunkedCells.push(currentChunk);\r\n                }\r\n                // A cell has changed:\r\n                let cell = cell_1.createPatchedCellDiffModel(base.cells[index], e.diff, this.mimetype);\r\n                this.cells.push(cell);\r\n                currentChunk.push(cell);\r\n                skip = 1;\r\n            }\r\n            // Skip the specified number of elements, but never decrement take.\r\n            // Note that take can pass index in diffs with repeated +/- on the\r\n            // same index, i.e. [op_remove(index), op_add(index, value)]\r\n            take = Math.max(take, index + skip);\r\n        }\r\n        // Take unchanged values at end\r\n        for (let i = take; i < base.cells.length; i++) {\r\n            let cell = cell_1.createUnchangedCellDiffModel(base.cells[i], this.mimetype);\r\n            this.cells.push(cell);\r\n            this.chunkedCells.push([cell]);\r\n        }\r\n    }\r\n}\r\nexports.NotebookDiffModel = NotebookDiffModel;\r\n//# sourceMappingURL=notebook.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.makeOutputModels = exports.OutputDiffModel = void 0;\r\nconst nbformat = require(\"@jupyterlab/nbformat\");\r\nconst exceptions_1 = require(\"../../common/exceptions\");\r\nconst renderable_1 = require(\"./renderable\");\r\nconst TEXT_MIMETYPES = ['text/plain', 'application/vnd.jupyter.stdout',\r\n    'application/vnd.jupyter.stderr'];\r\n/**\r\n * Diff model for single cell output entries.\r\n *\r\n * Can converted to a StringDiffModel via the method `stringify()`, which also\r\n * takes an optional argument `key` which specifies a subpath of the IOutput to\r\n * make the model from.\r\n */\r\nclass OutputDiffModel extends renderable_1.RenderableDiffModel {\r\n    /**\r\n     * Checks whether the given mimetype is present in the output's mimebundle.\r\n     * If so, it returns the path/key to that mimetype's data. If not present,\r\n     * it returns null.\r\n     *\r\n     * See also: innerMimeType\r\n     */\r\n    hasMimeType(mimetype) {\r\n        let outputs = this.base || this.remote;\r\n        if (nbformat.isStream(outputs) &&\r\n            TEXT_MIMETYPES.indexOf(mimetype) !== -1) {\r\n            return 'text';\r\n        }\r\n        else if (nbformat.isError(outputs)) {\r\n            return 'traceback';\r\n        }\r\n        else if (nbformat.isExecuteResult(outputs) || nbformat.isDisplayData(outputs)) {\r\n            let data = outputs.data;\r\n            if (mimetype in data) {\r\n                return ['data', mimetype];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the expected MIME type of the IOutput subpath specified by `key`,\r\n     * as determined by the notebook format specification.\r\n     *\r\n     * Throws an error for unknown keys.\r\n     *\r\n     * See also: hasMimeType\r\n     */\r\n    innerMimeType(key) {\r\n        let t = (this.base || this.remote).output_type;\r\n        if (t === 'stream' && key === 'text' || t === 'error' && key === 'traceback') {\r\n            // TODO: 'application/vnd.jupyter.console-text'?\r\n            return 'text/plain';\r\n        }\r\n        else if ((t === 'execute_result' || t === 'display_data') &&\r\n            Array.isArray(key)) {\r\n            return key[1];\r\n        }\r\n        throw new exceptions_1.NotifyUserError('Unknown MIME type for key: ' + key);\r\n    }\r\n    /**\r\n     * Can be converted to a StringDiffModel via the method `stringify()`, which also\r\n     * takes an optional argument `key` which specifies a subpath of the IOutput to\r\n     * make the model from.\r\n     */\r\n    stringify(key) {\r\n        let model = super.stringify(key);\r\n        if (key) {\r\n            model.mimetype = this.innerMimeType(key);\r\n        }\r\n        return model;\r\n    }\r\n}\r\nexports.OutputDiffModel = OutputDiffModel;\r\n/**\r\n * Function used to create a list of models for a list diff\r\n *\r\n * - If base and remote are both non-null and equal, it returns\r\n *   a list of models representing unchanged entries.\r\n * - If base and a diff is given, it ignores remote and returns\r\n *   a list of models representing the diff.\r\n * - If base is null, it returns a list of models representing\r\n *   added entries.\r\n * - If remote is null, it returns a list of models representing\r\n *   deleted entries.\r\n */\r\nfunction makeOutputModels(base, remote, diff) {\r\n    let models = [];\r\n    if (remote === null && !diff) {\r\n        if (base === null) {\r\n            throw new Error('Either base or remote need to be specififed!');\r\n        }\r\n        // Cell deleted\r\n        for (let o of base) {\r\n            models.push(new OutputDiffModel(o, null));\r\n        }\r\n    }\r\n    else if (base === null) {\r\n        if (remote === null) {\r\n            throw new Error('Either base or remote need to be specififed!');\r\n        }\r\n        // Cell added\r\n        for (let o of remote) {\r\n            models.push(new OutputDiffModel(null, o));\r\n        }\r\n    }\r\n    else if (remote === base) {\r\n        // All entries unchanged\r\n        for (let o of base) {\r\n            models.push(new OutputDiffModel(o, o));\r\n        }\r\n    }\r\n    else if (diff) {\r\n        // Entries patched, remote will be null\r\n        let consumed = 0;\r\n        let skip = 0;\r\n        for (let d of diff) {\r\n            let index = d.key;\r\n            for (let o of base.slice(consumed, index)) {\r\n                // Add unchanged entries\r\n                models.push(new OutputDiffModel(o, o));\r\n            }\r\n            if (d.op === 'addrange') {\r\n                // Entries added\r\n                for (let o of d.valuelist) {\r\n                    models.push(new OutputDiffModel(null, o));\r\n                }\r\n                skip = 0;\r\n            }\r\n            else if (d.op === 'removerange') {\r\n                // Entries removed\r\n                let len = d.length;\r\n                for (let i = index; i < index + len; i++) {\r\n                    models.push(new OutputDiffModel(base[i], null));\r\n                }\r\n                skip = len;\r\n            }\r\n            else if (d.op === 'patch') {\r\n                // Entry changed\r\n                models.push(new OutputDiffModel(base[index], null, d.diff));\r\n                skip = 1;\r\n            }\r\n            else {\r\n                throw new Error('Invalid diff operation: ' + d);\r\n            }\r\n            consumed = Math.max(consumed, index + skip);\r\n        }\r\n        for (let o of base.slice(consumed)) {\r\n            // Add unchanged entries\r\n            models.push(new OutputDiffModel(o, o));\r\n        }\r\n    }\r\n    else {\r\n        throw new Error('Invalid arguments to makeOutputModels()');\r\n    }\r\n    return models;\r\n}\r\nexports.makeOutputModels = makeOutputModels;\r\n//# sourceMappingURL=output.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RenderableDiffModel = void 0;\r\nconst coreutils_1 = require(\"@lumino/coreutils\");\r\nconst signaling_1 = require(\"@lumino/signaling\");\r\nconst util_1 = require(\"../util\");\r\nconst patch_1 = require(\"../../patch\");\r\nconst string_1 = require(\"./string\");\r\n/**\r\n * Diff model for a renderable object (something that has an internal MimeBundle)\r\n *\r\n * Can be converted to a StringDiffModel via the method `stringify()`, which also\r\n * takes an optional argument `key` which specifies a subpath of the IOutput to\r\n * make the model from.\r\n */\r\nclass RenderableDiffModel {\r\n    constructor(base, remote, diff) {\r\n        this.trustedChanged = new signaling_1.Signal(this);\r\n        if (!remote && !base) {\r\n            throw new Error('Either remote or base value need to be given');\r\n        }\r\n        this.base = base;\r\n        if (!remote && diff) {\r\n            this.remote = patch_1.patch(base, diff);\r\n        }\r\n        else {\r\n            this.remote = remote;\r\n        }\r\n        this.diff = diff || null;\r\n        this.collapsible = false;\r\n    }\r\n    get unchanged() {\r\n        return JSON.stringify(this.base) === JSON.stringify(this.remote);\r\n    }\r\n    get added() {\r\n        return this.base === null;\r\n    }\r\n    get deleted() {\r\n        return this.remote === null;\r\n    }\r\n    /**\r\n     * Convert to a StringDiffModel.\r\n     *\r\n     * Takes an optional argument `key` which specifies a subpath of the MimeBundle to\r\n     * make the model from.\r\n     */\r\n    stringify(key) {\r\n        let getMemberByPath = function (obj, key, f) {\r\n            if (!obj) {\r\n                return obj;\r\n            }\r\n            if (Array.isArray(key)) {\r\n                const tail = key.length > 2 ? key.slice(1) : key[1];\r\n                if (f) {\r\n                    return getMemberByPath(f(obj, key[0]), tail, f);\r\n                }\r\n                return getMemberByPath(obj[key[0]], tail, f);\r\n            }\r\n            else if (f) {\r\n                return f(obj, key);\r\n            }\r\n            return obj[key];\r\n        };\r\n        const baseCopy = coreutils_1.JSONExt.deepCopy(this.base);\r\n        let base = key ? getMemberByPath(baseCopy, key) : baseCopy;\r\n        const remoteCopy = coreutils_1.JSONExt.deepCopy(this.remote);\r\n        let remote = key ? getMemberByPath(remoteCopy, key) : remoteCopy;\r\n        let diff = (this.diff && key) ?\r\n            getMemberByPath(this.diff, key, util_1.getSubDiffByKey) :\r\n            this.diff;\r\n        let model = null;\r\n        if (this.unchanged || this.added || this.deleted || !diff) {\r\n            model = string_1.createDirectStringDiffModel(base, remote);\r\n        }\r\n        else {\r\n            model = string_1.createPatchStringDiffModel(base, diff);\r\n        }\r\n        model.mimetype = key ? this.innerMimeType(key) : 'application/json';\r\n        model.collapsible = this.collapsible;\r\n        model.collapsibleHeader = this.collapsibleHeader;\r\n        model.startCollapsed = this.startCollapsed;\r\n        return model;\r\n    }\r\n    /**\r\n     * Whether outputs are trusted\r\n     */\r\n    get trusted() {\r\n        return this._trusted;\r\n    }\r\n    set trusted(value) {\r\n        if (this._trusted !== value) {\r\n            this._trusted = value;\r\n            this.trustedChanged.emit(value);\r\n        }\r\n    }\r\n    /**\r\n     * The present values of model.base/remote\r\n     */\r\n    get contents() {\r\n        let ret = [];\r\n        if (this.base) {\r\n            ret.push(this.base);\r\n        }\r\n        if (this.remote && this.remote !== this.base) {\r\n            ret.push(this.remote);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\nexports.RenderableDiffModel = RenderableDiffModel;\r\n//# sourceMappingURL=renderable.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.setMimetypeFromCellType = exports.createDirectStringDiffModel = exports.createPatchStringDiffModel = exports.StringDiffModel = void 0;\r\nconst nbformat = require(\"@jupyterlab/nbformat\");\r\nconst coreutils_1 = require(\"@lumino/coreutils\");\r\nconst range_1 = require(\"../range\");\r\nconst chunking_1 = require(\"../../chunking\");\r\nconst patch_1 = require(\"../../patch\");\r\n/**\r\n * Standard implementation of the IStringDiffModel interface.\r\n */\r\nclass StringDiffModel {\r\n    /**\r\n     * StringDiffModel constructor.\r\n     *\r\n     * Will translate additions and deletions from absolute\r\n     * coordinates, into {line, ch} based coordinates.\r\n     * Both should be sorted on the `from` position before passing.\r\n     *\r\n     * Collapsible and collapsed both defaults to false.\r\n     */\r\n    constructor(base, remote, additions, deletions, collapsible, header, collapsed) {\r\n        this.base = base;\r\n        this.remote = remote;\r\n        if (base === null) {\r\n            console.assert(deletions.length === 0);\r\n            this.deletions = [];\r\n        }\r\n        else {\r\n            this.deletions = range_1.raw2Pos(deletions, base);\r\n        }\r\n        if (remote === null) {\r\n            console.assert(additions.length === 0);\r\n            this.additions = [];\r\n        }\r\n        else {\r\n            this.additions = range_1.raw2Pos(additions, remote);\r\n        }\r\n        this.collapsible = collapsible === true;\r\n        if (this.collapsible) {\r\n            this.collapsibleHeader = header ? header : '';\r\n            this.startCollapsed = collapsed === true;\r\n        }\r\n    }\r\n    iterateDiffs() {\r\n        return new StringDiffModel.DiffIter(this);\r\n    }\r\n    /**\r\n     * Chunk additions/deletions into line-based chunks\r\n     */\r\n    getLineChunks() {\r\n        let chunker = new chunking_1.LineChunker();\r\n        let i = this.iterateDiffs();\r\n        for (let v = i.next(); v !== undefined; v = i.next()) {\r\n            chunker.addDiff(v.range, v.isAddition);\r\n        }\r\n        return chunker.chunks;\r\n    }\r\n    get unchanged() {\r\n        return this.base === this.remote;\r\n    }\r\n    get added() {\r\n        return this.base === null;\r\n    }\r\n    get deleted() {\r\n        return this.remote === null;\r\n    }\r\n}\r\nexports.StringDiffModel = StringDiffModel;\r\n(function (StringDiffModel) {\r\n    class DiffIter {\r\n        constructor(model) {\r\n            this.editOffset = 0;\r\n            this.done = false;\r\n            this.ia = 0;\r\n            this.id = 0;\r\n            this.hintTakeDeletion = false;\r\n            this.model = model;\r\n        }\r\n        next() {\r\n            // Figure out which element to take next\r\n            let isAddition = null;\r\n            let range = null;\r\n            let additions = this.model.additions;\r\n            let deletions = this.model.deletions;\r\n            let hintTakeDeletion = this.hintTakeDeletion;\r\n            this.hintTakeDeletion = false;\r\n            if (this.ia < this.model.additions.length) {\r\n                if (this.id < deletions.length) {\r\n                    let ra = additions[this.ia];\r\n                    let rd = deletions[this.id];\r\n                    if (ra.from.line === rd.from.line - this.editOffset &&\r\n                        ra.from.ch === rd.from.ch) {\r\n                        // An addition and deletion start at seemingly same location\r\n                        // Take addition, and flag to ensure deletion gets taken next\r\n                        if (hintTakeDeletion) {\r\n                            isAddition = false;\r\n                        }\r\n                        else {\r\n                            this.hintTakeDeletion = true;\r\n                            isAddition = true;\r\n                        }\r\n                    }\r\n                    else if (ra.from.line < rd.from.line - this.editOffset ||\r\n                        (ra.from.line === rd.from.line - this.editOffset &&\r\n                            ra.from.ch < rd.from.ch)) {\r\n                        // TODO: Character editOffset should also be used\r\n                        isAddition = true;\r\n                    }\r\n                    else {\r\n                        isAddition = false;\r\n                    }\r\n                }\r\n                else {\r\n                    // No more deletions\r\n                    isAddition = true;\r\n                }\r\n            }\r\n            else if (this.id < deletions.length) {\r\n                // No more additions\r\n                isAddition = false;\r\n            }\r\n            else {\r\n                // Out of ranges!\r\n                this.done = true;\r\n                return undefined;\r\n            }\r\n            if (isAddition) {\r\n                range = additions[this.ia++];\r\n            }\r\n            else {\r\n                range = deletions[this.id++];\r\n            }\r\n            let linediff = range.to.line - range.from.line;\r\n            if (range.endsOnNewline) {\r\n                linediff += 1;\r\n            }\r\n            this.editOffset += isAddition ? -linediff : linediff;\r\n            return { range: range, isAddition: isAddition };\r\n        }\r\n    }\r\n    StringDiffModel.DiffIter = DiffIter;\r\n    class SyncedDiffIter {\r\n        constructor(models) {\r\n            this.currentOffset = 0;\r\n            this.models = [];\r\n            this.iterators = [];\r\n            this.values = [];\r\n            this.offsets = [];\r\n            // Set up iterator and dummy chunkers for other models\r\n            for (let m of models) {\r\n                if (m === null) {\r\n                    continue;\r\n                }\r\n                this.models.push(m);\r\n                let it = m.iterateDiffs();\r\n                this.iterators.push(it);\r\n                this.offsets.push(0);\r\n                this.values.push(it.next());\r\n            }\r\n        }\r\n        static cmp(a, b, offsetA, offsetB) {\r\n            if (a === undefined && b === undefined) {\r\n                return 0;\r\n            }\r\n            else if (a === undefined) {\r\n                return 1;\r\n            }\r\n            else if (b === undefined) {\r\n                return -1;\r\n            }\r\n            let lineA = a.range.from.line + (a.isAddition ? offsetA : 0);\r\n            let lineB = b.range.from.line + (b.isAddition ? offsetB : 0);\r\n            if (lineA < lineB || a.range.from.ch < b.range.from.ch) {\r\n                return -1;\r\n            }\r\n            else if (lineA > lineB || a.range.from.ch > b.range.from.ch) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        next() {\r\n            // Compare in base index to see which diff is next\r\n            let i = 0;\r\n            for (let j = 1; j < this.values.length; ++j) {\r\n                if (0 > SyncedDiffIter.cmp(this.values[j], this.values[i], this.iterators[j].editOffset, this.iterators[i].editOffset)) {\r\n                    i = j;\r\n                }\r\n            }\r\n            this.i = i;\r\n            let ret = this.values[i];\r\n            // Store the edit offset before taking next value\r\n            this.currentOffset = this.offsets[i];\r\n            this.offsets[i] = this.iterators[i].editOffset;\r\n            // Check if complete\r\n            if (ret !== undefined) {\r\n                this.values[i] = this.iterators[i].next();\r\n            }\r\n            return ret;\r\n        }\r\n        currentModel() {\r\n            return this.models[this.i];\r\n        }\r\n    }\r\n    StringDiffModel.SyncedDiffIter = SyncedDiffIter;\r\n})(StringDiffModel = exports.StringDiffModel || (exports.StringDiffModel = {}));\r\n/**\r\n * Creates a StringDiffModel based on a patch operation.\r\n *\r\n * If base is not a string, it is assumed to be a JSON object/array,\r\n * and it will be stringified according to JSON stringification\r\n * rules.\r\n */\r\nfunction createPatchStringDiffModel(base, diff) {\r\n    console.assert(!!diff, 'Patch model needs diff.');\r\n    const baseCopy = coreutils_1.JSONExt.deepCopy(base);\r\n    let baseStr = patch_1.stringifyAndBlankNull(baseCopy);\r\n    let out = patch_1.patchStringified(baseCopy, diff);\r\n    return new StringDiffModel(baseStr, out.remote, out.additions, out.deletions);\r\n}\r\nexports.createPatchStringDiffModel = createPatchStringDiffModel;\r\n/**\r\n * Factory for creating cell diff models for added, removed or unchanged content.\r\n *\r\n * If base is null, it will be treated as added, if remote is null it will be\r\n * treated as removed. Otherwise base and remote should be equal, represeting\r\n * unchanged content.\r\n */\r\nfunction createDirectStringDiffModel(base, remote) {\r\n    let baseStr = patch_1.stringifyAndBlankNull(base);\r\n    let remoteStr = patch_1.stringifyAndBlankNull(remote);\r\n    let additions = [];\r\n    let deletions = [];\r\n    if (base === null && remote === null) {\r\n        throw new Error('Invalid arguments to createDirectStringDiffModel(). ' +\r\n            'Both base and remote cannot be equal!');\r\n    }\r\n    else if (base === null) {\r\n        // Added cell\r\n        baseStr = null;\r\n        additions.push(new range_1.DiffRangeRaw(0, remoteStr.length, undefined));\r\n    }\r\n    else if (remote === null) {\r\n        // Deleted cell\r\n        remoteStr = null;\r\n        deletions.push(new range_1.DiffRangeRaw(0, baseStr.length, undefined));\r\n    }\r\n    else if (remoteStr !== baseStr) {\r\n        throw new Error('Invalid arguments to createDirectStringDiffModel(). ' +\r\n            'Either base or remote should be null, or they should be equal!');\r\n    }\r\n    return new StringDiffModel(baseStr, remoteStr, additions, deletions);\r\n}\r\nexports.createDirectStringDiffModel = createDirectStringDiffModel;\r\n/**\r\n * Assign MIME type to an IStringDiffModel based on the cell type.\r\n *\r\n * The parameter nbMimetype is the MIME type set for the entire notebook, and is\r\n * used as the MIME type for code cells.\r\n */\r\nfunction setMimetypeFromCellType(model, cell, nbMimetype) {\r\n    if (cell.cell_type === 'code') {\r\n        model.mimetype = nbMimetype;\r\n    }\r\n    else if (cell.cell_type === 'markdown') {\r\n        model.mimetype = 'text/markdown';\r\n    }\r\n    else if (nbformat.isRaw(cell)) {\r\n        model.mimetype = cell.metadata.format || 'text/plain';\r\n    }\r\n}\r\nexports.setMimetypeFromCellType = setMimetypeFromCellType;\r\n//# sourceMappingURL=string.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.raw2Pos = exports.DiffRangePos = exports.DiffRangeRaw = void 0;\r\nconst CodeMirror = require(\"codemirror\");\r\nconst util_1 = require(\"../common/util\");\r\n/**\r\n * Represents a range in a diff (typically in a string), in absolute indices (1D)\r\n */\r\nclass DiffRangeRaw {\r\n    /**\r\n     * Create a new range [from, to = from + length)\r\n     */\r\n    constructor(from, length, source) {\r\n        this.from = from;\r\n        this.to = from + length;\r\n        this.source = source;\r\n    }\r\n    /**\r\n     * Change both `from` and `to` fields by the given offset\r\n     */\r\n    offset(offset) {\r\n        this.from += offset;\r\n        this.to += offset;\r\n    }\r\n}\r\nexports.DiffRangeRaw = DiffRangeRaw;\r\n/**\r\n * Class representing a string (diff) range in the format of\r\n * CodeMirror.Positions. Mainly makes sense for string diffs.\r\n *\r\n * The class also has fields to ease chunking of diffs without reparsing the\r\n * text.\r\n */\r\nclass DiffRangePos {\r\n    /**\r\n     * Create a diff range. The `ch` field of the `to` position is defined as\r\n     * non-inclusive, i.e., it follows the syntax of String.slice().\r\n     */\r\n    constructor(from, to, chunkStartLine, endsOnNewline) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.chunkStartLine = chunkStartLine === true;\r\n        this.endsOnNewline = endsOnNewline === true;\r\n    }\r\n}\r\nexports.DiffRangePos = DiffRangePos;\r\n/**\r\n * Utility function to find the line number of a given string index,\r\n * given the positions of all newlines.\r\n */\r\nfunction findLineNumber(nlPos, index) {\r\n    if (nlPos.length === 0) {\r\n        return 0;\r\n    }\r\n    let lineNo = null;\r\n    nlPos.some(function (el, i) {\r\n        if (el >= index) {\r\n            lineNo = i;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    if (lineNo === null) {\r\n        return nlPos.length;\r\n    }\r\n    return lineNo;\r\n}\r\n/**\r\n * Function to convert an array of DiffRangeRaw to DiffRangePos. The\r\n * `text` parameter is the text in which the ranges exist.\r\n */\r\nfunction raw2Pos(raws, text) {\r\n    // Find all newline's indices in text\r\n    let adIdx = [];\r\n    let i = -1;\r\n    while (-1 !== (i = text.indexOf('\\n', i + 1))) {\r\n        adIdx.push(i);\r\n    }\r\n    let result = [];\r\n    // Find line numbers from raw index\r\n    for (let r of raws) {\r\n        // First `from` position:\r\n        let line = findLineNumber(adIdx, r.from);\r\n        let lineStartIdx = line > 0 ? adIdx[line - 1] + 1 : 0;\r\n        let from = CodeMirror.Pos(line, r.from - lineStartIdx);\r\n        // Then `to` position:\r\n        line = findLineNumber(adIdx, r.to - 1); // `to` is non-inclusive\r\n        lineStartIdx = line > 0 ? adIdx[line - 1] + 1 : 0;\r\n        let to = CodeMirror.Pos(line, r.to - lineStartIdx);\r\n        // Finally, add some chunking hints:\r\n        let startsOnNewLine = util_1.valueIn(r.from, adIdx);\r\n        let endsOnNewline = util_1.valueIn(r.to - 1, adIdx); // non-inclusive\r\n        let firstLineNew = from.ch === 0 && (from.line !== to.line || endsOnNewline || r.to === text.length);\r\n        let chunkFirstLine = (firstLineNew ||\r\n            !startsOnNewLine ||\r\n            (\r\n            // Neither preceding nor following character is a newline\r\n            !util_1.valueIn(r.from - 1, adIdx) &&\r\n                !util_1.valueIn(r.to, adIdx)));\r\n        let pos = new DiffRangePos(from, to, chunkFirstLine, endsOnNewline);\r\n        pos.source = r.source;\r\n        result.push(pos);\r\n    }\r\n    return result;\r\n}\r\nexports.raw2Pos = raw2Pos;\r\n//# sourceMappingURL=range.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.flattenStringDiff = exports.stripSource = exports.getDiffEntryByKey = exports.getSubDiffByKey = exports.JSON_INDENT = void 0;\r\nconst util_1 = require(\"../common/util\");\r\nconst diffentries_1 = require(\"./diffentries\");\r\n/**\r\n * The indentation to use for JSON stringify.\r\n */\r\nexports.JSON_INDENT = '  ';\r\n/**\r\n * Search the list of diffs for an entry with the given key.\r\n *\r\n * Returns the first found entry, or null if not entry was found.\r\n */\r\nfunction getSubDiffByKey(diff, key) {\r\n    if (!diff) {\r\n        return null;\r\n    }\r\n    for (let i = 0; i < diff.length; ++i) {\r\n        if (diff[i].key === key) {\r\n            return diff[i].diff || null;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.getSubDiffByKey = getSubDiffByKey;\r\n/**\r\n * Search the list of diffs for an entry with the given key.\r\n *\r\n * Returns the first found entry, or null if not entry was found.\r\n */\r\nfunction getDiffEntryByKey(diff, key) {\r\n    if (!diff) {\r\n        return null;\r\n    }\r\n    for (let i = 0; i < diff.length; ++i) {\r\n        if (diff[i].key === key) {\r\n            return diff[i];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.getDiffEntryByKey = getDiffEntryByKey;\r\nfunction validateStringDiff(base, entry, lineToChar) {\r\n    // First valdiate line ops:\r\n    diffentries_1.validateSequenceOp(base, entry);\r\n    if (entry.op === 'patch') {\r\n        let line = base[entry.key];\r\n        let diff = entry.diff;\r\n        if (diff !== null) {\r\n            for (let d of diff) {\r\n                diffentries_1.validateSequenceOp(line, d);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Remove the merge source indicator from a diff (returns a copy).\r\n */\r\nfunction stripSource(diff) {\r\n    if (!diff) {\r\n        return null;\r\n    }\r\n    let ret = [];\r\n    for (let e of diff) {\r\n        if (e.op === 'patch') {\r\n            ret.push({\r\n                key: e.key,\r\n                op: e.op,\r\n                diff: stripSource(e.diff)\r\n            });\r\n        }\r\n        else {\r\n            let d = util_1.shallowCopy(e);\r\n            delete d.source;\r\n            ret.push(d);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexports.stripSource = stripSource;\r\n/**\r\n * Translates a diff of strings split by str.splitlines() to a diff of the\r\n * joined multiline string\r\n */\r\nfunction flattenStringDiff(val, diff) {\r\n    if (typeof val === 'string') {\r\n        val = util_1.splitLines(val);\r\n    }\r\n    let lineToChar = [0].concat(util_1.accumulateLengths(val));\r\n    let flattened = [];\r\n    for (let e of diff) {\r\n        // Frist validate op:\r\n        validateStringDiff(val, e, lineToChar);\r\n        let lineOffset = lineToChar[e.key];\r\n        if (e.op === 'patch') {\r\n            let pdiff = e.diff;\r\n            if (pdiff !== null) {\r\n                for (let p of pdiff) {\r\n                    let d = util_1.shallowCopy(p);\r\n                    d.key += lineOffset;\r\n                    flattened.push(d);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // Other ops simply have keys which refer to lines\r\n            let d = null;\r\n            if (e.op === 'addrange') {\r\n                d = diffentries_1.opAddRange(lineOffset, e.valuelist.join(''));\r\n            }\r\n            else { // e.op === 'removerange'\r\n                let idx = e.key + e.length;\r\n                d = diffentries_1.opRemoveRange(lineOffset, lineToChar[idx] - lineOffset);\r\n            }\r\n            d.source = e.source;\r\n            flattened.push(d);\r\n        }\r\n    }\r\n    // Finally, sort on key (leaving equal items in original order)\r\n    // This is done since the original diffs are sorted deeper first!\r\n    return util_1.sortByKey(flattened, 'key');\r\n}\r\nexports.flattenStringDiff = flattenStringDiff;\r\n//# sourceMappingURL=util.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CellDiffWidget = exports.OUTPUTS_DIFF_CLASS = exports.CELLDIFF_CLASS = void 0;\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\nconst rendermime_1 = require(\"@jupyterlab/rendermime\");\r\nconst flexpanel_1 = require(\"../../upstreaming/flexpanel\");\r\nconst collapsiblepanel_1 = require(\"../../common/collapsiblepanel\");\r\nconst mergeview_1 = require(\"../../common/mergeview\");\r\nconst util_1 = require(\"../../common/util\");\r\nconst model_1 = require(\"../model\");\r\nconst common_1 = require(\"./common\");\r\nconst output_1 = require(\"./output\");\r\n/**\r\n * The class name added to the prompt area of cell.\r\n */\r\nconst PROMPT_CLASS = 'jp-InputPrompt';\r\nexports.CELLDIFF_CLASS = 'jp-Cell-diff';\r\nexports.OUTPUTS_DIFF_CLASS = 'jp-Diff-outputsContainer';\r\nconst EXECUTIONCOUNT_ROW_CLASS = 'jp-Cellrow-executionCount';\r\nconst SOURCE_ROW_CLASS = 'jp-Cellrow-source';\r\nconst METADATA_ROW_CLASS = 'jp-Cellrow-metadata';\r\nconst OUTPUTS_ROW_CLASS = 'jp-Cellrow-outputs';\r\n/**\r\n * CellDiffWidget for cell changes\r\n */\r\nclass CellDiffWidget extends widgets_1.Panel {\r\n    /**\r\n     *\r\n     */\r\n    constructor(model, rendermime, mimetype) {\r\n        super();\r\n        this.addClass(exports.CELLDIFF_CLASS);\r\n        this._model = model;\r\n        this._rendermime = rendermime;\r\n        this.mimetype = mimetype;\r\n        this.init();\r\n    }\r\n    init() {\r\n        let model = this.model;\r\n        // Add 'cell added/deleted' notifiers, as appropriate\r\n        let CURR_DIFF_CLASSES = common_1.DIFF_CLASSES.slice(); // copy\r\n        if (model.added) {\r\n            this.addClass(common_1.ADDED_DIFF_CLASS);\r\n            CURR_DIFF_CLASSES = common_1.DIFF_CLASSES.slice(1, 2);\r\n        }\r\n        else if (model.deleted) {\r\n            this.addClass(common_1.DELETED_DIFF_CLASS);\r\n            CURR_DIFF_CLASSES = common_1.DIFF_CLASSES.slice(0, 1);\r\n        }\r\n        else if (model.unchanged) {\r\n            this.addClass(common_1.UNCHANGED_DIFF_CLASS);\r\n        }\r\n        else {\r\n            this.addClass(common_1.TWOWAY_DIFF_CLASS);\r\n        }\r\n        // Add inputs and outputs, on a row-by-row basis\r\n        let sourceView = CellDiffWidget.createView(model.source, model, CURR_DIFF_CLASSES, this._rendermime);\r\n        sourceView.addClass(SOURCE_ROW_CLASS);\r\n        if (model.executionCount) {\r\n            sourceView.insertWidget(0, CellDiffWidget.createPrompts(model.executionCount, model));\r\n        }\r\n        this.addWidget(sourceView);\r\n        if (!model.metadata.unchanged) {\r\n            let metadataView = CellDiffWidget.createView(model.metadata, model, CURR_DIFF_CLASSES, this._rendermime);\r\n            metadataView.addClass(METADATA_ROW_CLASS);\r\n            this.addWidget(metadataView);\r\n        }\r\n        const chunks = model.getChunkedOutputs();\r\n        if (util_1.hasEntries(chunks)) {\r\n            let container = new widgets_1.Panel();\r\n            container.addClass(exports.OUTPUTS_DIFF_CLASS);\r\n            let changed = false;\r\n            for (let chunk of chunks) {\r\n                if (chunk.length === 1) {\r\n                    let o = chunk[0];\r\n                    let outputsWidget = CellDiffWidget.createView(o, model, CURR_DIFF_CLASSES, this._rendermime);\r\n                    container.addWidget(outputsWidget);\r\n                    changed = changed || !o.unchanged || o.added || o.deleted;\r\n                }\r\n                else {\r\n                    // Create add/remove chunk wrappers\r\n                    let chunkPanel = new widgets_1.Panel();\r\n                    chunkPanel.addClass(common_1.CHUNK_PANEL_CLASS);\r\n                    let addedPanel = new widgets_1.Panel();\r\n                    addedPanel.addClass(common_1.ADDED_CHUNK_PANEL_CLASS);\r\n                    let removedPanel = new widgets_1.Panel();\r\n                    removedPanel.addClass(common_1.REMOVED_CHUNK_PANEL_CLASS);\r\n                    for (let o of chunk) {\r\n                        let target = o.deleted ? removedPanel : addedPanel;\r\n                        let outputsWidget = CellDiffWidget.createView(o, model, CURR_DIFF_CLASSES, this._rendermime);\r\n                        target.addWidget(outputsWidget);\r\n                        changed = changed || !o.unchanged || o.added || o.deleted;\r\n                    }\r\n                    chunkPanel.addWidget(addedPanel);\r\n                    chunkPanel.addWidget(removedPanel);\r\n                    container.addWidget(chunkPanel);\r\n                }\r\n            }\r\n            if (model.added || model.deleted) {\r\n                container.addClass(OUTPUTS_ROW_CLASS);\r\n                this.addWidget(container);\r\n            }\r\n            else {\r\n                let collapsed = !changed;\r\n                let header = changed ? 'Outputs changed' : 'Outputs unchanged';\r\n                let collapser = new collapsiblepanel_1.CollapsiblePanel(container, header, collapsed);\r\n                collapser.addClass(OUTPUTS_ROW_CLASS);\r\n                this.addWidget(collapser);\r\n            }\r\n        }\r\n    }\r\n    static createPrompts(model, parent) {\r\n        let prompts = [];\r\n        if (!parent.added) {\r\n            let base = model.base;\r\n            let baseStr = `In [${base || ' '}]:`;\r\n            prompts.push(baseStr);\r\n        }\r\n        if (!parent.unchanged && !parent.deleted) {\r\n            let remote = model.remote;\r\n            let remoteStr = `In [${remote || ' '}]:`;\r\n            prompts.push(remoteStr);\r\n        }\r\n        let container = new flexpanel_1.FlexPanel({ direction: 'left-to-right' });\r\n        for (let text of prompts) {\r\n            let w = new widgets_1.Widget();\r\n            w.node.innerText = text;\r\n            w.addClass(PROMPT_CLASS);\r\n            container.addWidget(w);\r\n            flexpanel_1.FlexPanel.setGrow(w, 1);\r\n        }\r\n        container.addClass(EXECUTIONCOUNT_ROW_CLASS);\r\n        return container;\r\n    }\r\n    /**\r\n     * Create a new sub-view.\r\n     */\r\n    static createView(model, parent, editorClasses, rendermime) {\r\n        let view;\r\n        if (model instanceof model_1.StringDiffModel) {\r\n            let inner = null;\r\n            if (model.unchanged && parent.cellType === 'markdown') {\r\n                let mimeModel = new rendermime_1.MimeModel({ data: { 'text/markdown': model.base } });\r\n                let mimeType = rendermime.preferredMimeType(mimeModel.data, 'ensure');\r\n                if (!mimeType) {\r\n                    throw new Error('No renderer for output');\r\n                }\r\n                let renderer = rendermime.createRenderer(mimeType);\r\n                renderer.renderModel(mimeModel);\r\n                inner = renderer;\r\n            }\r\n            else {\r\n                inner = mergeview_1.createNbdimeMergeView(model);\r\n            }\r\n            if (model.collapsible) {\r\n                view = new collapsiblepanel_1.CollapsiblePanel(inner, model.collapsibleHeader, model.startCollapsed);\r\n            }\r\n            else {\r\n                view = new widgets_1.Panel();\r\n                view.addWidget(inner);\r\n            }\r\n        }\r\n        else if (model instanceof model_1.OutputDiffModel) {\r\n            view = new output_1.OutputPanel(model, parent, editorClasses, rendermime);\r\n            if (model.added) {\r\n                view.addClass(common_1.ADDED_DIFF_CLASS);\r\n            }\r\n            else if (model.deleted) {\r\n                view.addClass(common_1.DELETED_DIFF_CLASS);\r\n            }\r\n            else if (model.unchanged) {\r\n                view.addClass(common_1.UNCHANGED_DIFF_CLASS);\r\n            }\r\n            else {\r\n                view.addClass(common_1.TWOWAY_DIFF_CLASS);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Unrecognized model type.');\r\n        }\r\n        return view;\r\n    }\r\n    /**\r\n     * Get the model for the widget.\r\n     *\r\n     * #### Notes\r\n     * This is a read-only property.\r\n     */\r\n    get model() {\r\n        return this._model;\r\n    }\r\n}\r\nexports.CellDiffWidget = CellDiffWidget;\r\n//# sourceMappingURL=cell.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ADD_DEL_LABEL_CLASS = exports.REMOVED_CHUNK_PANEL_CLASS = exports.ADDED_CHUNK_PANEL_CLASS = exports.CHUNK_PANEL_CLASS = exports.DIFF_CLASSES = exports.UNCHANGED_DIFF_CLASS = exports.DELETED_DIFF_CLASS = exports.ADDED_DIFF_CLASS = exports.TWOWAY_DIFF_CLASS = void 0;\r\nexports.TWOWAY_DIFF_CLASS = 'jp-Diff-twoway';\r\nexports.ADDED_DIFF_CLASS = 'jp-Diff-added';\r\nexports.DELETED_DIFF_CLASS = 'jp-Diff-deleted';\r\nexports.UNCHANGED_DIFF_CLASS = 'jp-Diff-unchanged';\r\nexports.DIFF_CLASSES = ['jp-Diff-base', 'jp-Diff-remote'];\r\nexports.CHUNK_PANEL_CLASS = 'jp-Diff-addremchunk';\r\nexports.ADDED_CHUNK_PANEL_CLASS = 'jp-Diff-addedchunk';\r\nexports.REMOVED_CHUNK_PANEL_CLASS = 'jp-Diff-removedchunk';\r\nexports.ADD_DEL_LABEL_CLASS = 'jp-Diff-label';\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./cell\"), exports);\r\n__exportStar(require(\"./notebook\"), exports);\r\n__exportStar(require(\"./metadata\"), exports);\r\n//# sourceMappingURL=index.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MetadataDiffWidget = void 0;\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\nconst mergeview_1 = require(\"../../common/mergeview\");\r\nconst collapsiblepanel_1 = require(\"../../common/collapsiblepanel\");\r\nconst common_1 = require(\"./common\");\r\nconst ROOT_METADATA_CLASS = 'jp-Metadata-diff';\r\n/**\r\n * MetadataWidget for changes to Notebook-level metadata\r\n */\r\nclass MetadataDiffWidget extends widgets_1.Panel {\r\n    constructor(model) {\r\n        super();\r\n        this._model = model;\r\n        console.assert(!model.added && !model.deleted);\r\n        this.addClass(ROOT_METADATA_CLASS);\r\n        this.init();\r\n    }\r\n    init() {\r\n        let model = this._model;\r\n        if (!model.unchanged) {\r\n            this.addClass(common_1.TWOWAY_DIFF_CLASS);\r\n            let view = mergeview_1.createNbdimeMergeView(model);\r\n            if (model.collapsible) {\r\n                view = new collapsiblepanel_1.CollapsiblePanel(view, model.collapsibleHeader, model.startCollapsed);\r\n            }\r\n            this.addWidget(view);\r\n        }\r\n    }\r\n}\r\nexports.MetadataDiffWidget = MetadataDiffWidget;\r\n//# sourceMappingURL=metadata.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NotebookDiffWidget = void 0;\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\nconst cell_1 = require(\"./cell\");\r\nconst common_1 = require(\"./common\");\r\nconst metadata_1 = require(\"./metadata\");\r\nconst NBDIFF_CLASS = 'jp-Notebook-diff';\r\n/**\r\n * NotebookDiffWidget\r\n */\r\nclass NotebookDiffWidget extends widgets_1.Panel {\r\n    constructor(model, rendermime) {\r\n        super();\r\n        this._model = model;\r\n        this._rendermime = rendermime;\r\n        this.addClass(NBDIFF_CLASS);\r\n    }\r\n    /**\r\n     * Start adding sub-widgets.\r\n     *\r\n     * Separated from constructor to allow 'live' adding of widgets\r\n     */\r\n    init() {\r\n        let model = this._model;\r\n        let rendermime = this._rendermime;\r\n        let work = Promise.resolve();\r\n        work = work.then(() => {\r\n            if (model.metadata) {\r\n                this.addWidget(new metadata_1.MetadataDiffWidget(model.metadata));\r\n            }\r\n        });\r\n        for (let chunk of model.chunkedCells) {\r\n            work = work.then(() => {\r\n                return new Promise(resolve => {\r\n                    if (chunk.length === 1 && !(chunk[0].added || chunk[0].deleted)) {\r\n                        this.addWidget(new cell_1.CellDiffWidget(chunk[0], rendermime, model.mimetype));\r\n                    }\r\n                    else {\r\n                        let chunkPanel = new widgets_1.Panel();\r\n                        chunkPanel.addClass(common_1.CHUNK_PANEL_CLASS);\r\n                        let addedPanel = new widgets_1.Panel();\r\n                        addedPanel.addClass(common_1.ADDED_CHUNK_PANEL_CLASS);\r\n                        let removedPanel = new widgets_1.Panel();\r\n                        removedPanel.addClass(common_1.REMOVED_CHUNK_PANEL_CLASS);\r\n                        for (let cell of chunk) {\r\n                            let target = cell.deleted ? removedPanel : addedPanel;\r\n                            target.addWidget(new cell_1.CellDiffWidget(cell, rendermime, model.mimetype));\r\n                        }\r\n                        chunkPanel.addWidget(addedPanel);\r\n                        chunkPanel.addWidget(removedPanel);\r\n                        this.addWidget(chunkPanel);\r\n                    }\r\n                    // This limits us to drawing 60 cells per second, which shouldn't\r\n                    // be a problem...\r\n                    requestAnimationFrame(() => {\r\n                        resolve();\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        return work;\r\n    }\r\n    /**\r\n     * Get the model for the widget.\r\n     *\r\n     * #### Notes\r\n     * This is a read-only property.\r\n     */\r\n    get model() {\r\n        return this._model;\r\n    }\r\n}\r\nexports.NotebookDiffWidget = NotebookDiffWidget;\r\n//# sourceMappingURL=notebook.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RenderableOutputView = exports.OutputPanel = void 0;\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\nconst algorithm_1 = require(\"@lumino/algorithm\");\r\nconst rendermime_1 = require(\"@jupyterlab/rendermime\");\r\nconst collapsiblepanel_1 = require(\"../../common/collapsiblepanel\");\r\nconst mergeview_1 = require(\"../../common/mergeview\");\r\nconst util_1 = require(\"../../common/util\");\r\nconst common_1 = require(\"./common\");\r\nconst renderable_1 = require(\"./renderable\");\r\n/**\r\n * Class for output panel\r\n */\r\nconst OUTPUT_PANEL_CLASS = 'jp-Diff-outputPanel';\r\n/**\r\n * Class for a single rendered output view\r\n */\r\nconst RENDERED_OUTPUT_CLASS = 'jp-Diff-renderedOutput';\r\n/**\r\n * Output is untrusted, and can benefit from being trusted\r\n */\r\nconst UNTRUSTED_CLASS = 'jp-Diff-trustCandidate';\r\n/**\r\n * Menu with actions for outputs\r\n */\r\nconst HOVER_MENU_CLASS = 'jp-Diff-outputMenu';\r\n/**\r\n * Menu button to trust output content\r\n */\r\nconst TRUST_BUTTON_CLASS = 'jp-Diff-trustOutputButton';\r\n/**\r\n * Menu button for showing output as text instead of rendered\r\n */\r\nconst SOURCE_BUTTON_CLASS = 'jp-Diff-showOutputSourceButton';\r\n/**\r\n * Class for outputs which data is base64\r\n */\r\nconst DATA_IS_BASE64_CLASS = 'jp-diff-base64Output';\r\n/**\r\n * Class of dropdown for selecting mimetype to show\r\n */\r\nconst MIMETYPE_SELECT_CLASS = 'jp-Diff-outputMimetypeSelect';\r\n/**\r\n * A list of outputs that are sanitizable.\r\n */\r\nconst sanitizable = ['text/html'];\r\nlet _base64 = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\r\nfunction isBase64(data, minLength = 64) {\r\n    return data !== null && data.length > minLength && _base64.test(data.replace('\\n', ''));\r\n}\r\n/**\r\n * A panel responsible for rendering an output diff\r\n */\r\nclass OutputPanel extends widgets_1.Panel {\r\n    /**\r\n     *\r\n     */\r\n    constructor(model, parentModel, editorClasses, rendermime) {\r\n        super();\r\n        this._mimetype = null;\r\n        this.forceText = false;\r\n        this.model = model;\r\n        this.rendermime = rendermime;\r\n        this.editorClasses = editorClasses;\r\n        model.trustedChanged.connect((sender, trusted) => {\r\n            this.trustedChanged(trusted);\r\n        });\r\n        if (OutputPanel.isTrustSignificant(model, this.rendermime)) {\r\n            this.addClass(UNTRUSTED_CLASS);\r\n        }\r\n        if (model.added) {\r\n            if (!parentModel.added) {\r\n                // Implies this is added output\r\n                let addSpacer = new widgets_1.Widget();\r\n                addSpacer.node.textContent = 'Output added';\r\n                addSpacer.addClass(common_1.ADD_DEL_LABEL_CLASS);\r\n                this.addWidget(addSpacer);\r\n            }\r\n            this.addClass(common_1.ADDED_DIFF_CLASS);\r\n        }\r\n        else if (model.deleted) {\r\n            if (!parentModel.deleted) {\r\n                // Implies this is deleted output\r\n                let delSpacer = new widgets_1.Widget();\r\n                delSpacer.node.textContent = 'Output deleted';\r\n                delSpacer.addClass(common_1.ADD_DEL_LABEL_CLASS);\r\n                this.addWidget(delSpacer);\r\n            }\r\n            this.addClass(common_1.DELETED_DIFF_CLASS);\r\n        }\r\n        else if (model.unchanged) {\r\n            this.addClass(common_1.UNCHANGED_DIFF_CLASS);\r\n        }\r\n        else {\r\n            this.addClass(common_1.TWOWAY_DIFF_CLASS);\r\n        }\r\n        let view = this.createView();\r\n        this.initContainer(view);\r\n        this.createHoverMenu();\r\n        this.addClass(OUTPUT_PANEL_CLASS);\r\n    }\r\n    /**\r\n     * Add view to panel, possibly wrapped\r\n     */\r\n    initContainer(view) {\r\n        if (this.model.collapsible) {\r\n            this.container = new collapsiblepanel_1.CollapsiblePanel(view, this.model.collapsibleHeader, this.model.startCollapsed);\r\n        }\r\n        else {\r\n            this.container = this;\r\n            this.container.addWidget(view);\r\n        }\r\n        this.view = view;\r\n    }\r\n    /**\r\n     * Replace a view with a new one\r\n     */\r\n    replaceView(view) {\r\n        let old = this.view;\r\n        let i = this.container.widgets.indexOf(old);\r\n        this.container.insertWidget(i, view);\r\n        old.parent = null;\r\n        this.view = view;\r\n    }\r\n    /**\r\n     * Create a text or rendered view of the output diff model\r\n     */\r\n    createView(forceText = false) {\r\n        let view = null;\r\n        let model = this.model;\r\n        let rendermime = this.rendermime;\r\n        // Take one of three actions, depending on output types\r\n        // 1) Renderable types: Side-by-side comparison.\r\n        // 2) Text-type output: Show a MergeView with text diff.\r\n        // 3) Unknown types: Stringified JSON diff.\r\n        let renderable = RenderableOutputView.canRender(model, rendermime);\r\n        if (renderable && !forceText) {\r\n            // 1.\r\n            let rov = new RenderableOutputView(model, this.editorClasses, rendermime, this.selectedMimetype);\r\n            view = rov;\r\n        }\r\n        else {\r\n            // 2. or 3.\r\n            view = this.createOutputTextView();\r\n        }\r\n        return view;\r\n    }\r\n    /**\r\n     * Create text view of output\r\n     */\r\n    createOutputTextView() {\r\n        // Take one of three actions, depending on output types\r\n        // 1) N/A here, see method createView above\r\n        // 2) Known, non-binary MIME: Show a MergeView with text diff.\r\n        // 3) Unknown types: Stringified JSON diff.\r\n        let view;\r\n        let model = this.model;\r\n        // Find highest order MIME-type supported by rendermime\r\n        let key = null;\r\n        if (this.selectedMimetype === null) {\r\n            algorithm_1.find(this.rendermime.mimeTypes, (mt) => {\r\n                key = model.hasMimeType(mt);\r\n                return key !== null;\r\n            });\r\n        }\r\n        else {\r\n            key = model.hasMimeType(this.selectedMimetype);\r\n        }\r\n        if (key) {\r\n            let stringModel = model.stringify(key);\r\n            let aValue = stringModel.base || stringModel.remote;\r\n            if (!isBase64(aValue)) {\r\n                // 2.\r\n                view = mergeview_1.createNbdimeMergeView(stringModel);\r\n            }\r\n        }\r\n        if (!view) {\r\n            // 3.\r\n            view = mergeview_1.createNbdimeMergeView(model.stringify());\r\n        }\r\n        return view;\r\n    }\r\n    /**\r\n     * Creates a menu that is shown when hovering over the output.\r\n     *\r\n     * Stored in this.menu.\r\n     */\r\n    createHoverMenu() {\r\n        this.menu = new widgets_1.Panel();\r\n        this.menu.addClass(HOVER_MENU_CLASS);\r\n        this.container.addWidget(this.menu);\r\n        // Add rendered/source toggle:\r\n        let btnSource = document.createElement('button');\r\n        let sourceText = ['Show source', 'Render'];\r\n        btnSource.innerText = sourceText[0];\r\n        btnSource.onclick = (ev) => {\r\n            this.forceText = !this.forceText;\r\n            btnSource.innerText = sourceText[this.forceText ? 1 : 0];\r\n            this.updateView();\r\n        };\r\n        let w = new widgets_1.Widget({ node: btnSource });\r\n        w.addClass(SOURCE_BUTTON_CLASS);\r\n        this.menu.addWidget(w);\r\n        // Add trust button:\r\n        let btnTrust = document.createElement('button');\r\n        btnTrust.innerText = 'Trust';\r\n        btnTrust.onclick = (ev) => {\r\n            // Triggers change event:\r\n            this.model.trusted = !this.model.trusted;\r\n        };\r\n        w = new widgets_1.Widget({ node: btnTrust });\r\n        w.addClass(TRUST_BUTTON_CLASS);\r\n        this.menu.addWidget(w);\r\n        // Add mimetype select:\r\n        let mimetypes = [];\r\n        for (let output of this.model.contents) {\r\n            let bundle = rendermime_1.OutputModel.getData(output);\r\n            mimetypes = mimetypes.concat(Object.keys(bundle));\r\n        }\r\n        mimetypes = mimetypes.filter(util_1.unique);\r\n        if (mimetypes.length > 1) {\r\n            let cboMimetype = util_1.buildSelect(mimetypes);\r\n            let selectedMimetype = this.selectedMimetype;\r\n            if (selectedMimetype) {\r\n                cboMimetype.selectedIndex = mimetypes.indexOf(selectedMimetype);\r\n            }\r\n            cboMimetype.onchange = (ev) => {\r\n                this.selectedMimetype = mimetypes[cboMimetype.selectedIndex];\r\n            };\r\n            w = new widgets_1.Widget({ node: cboMimetype });\r\n            w.addClass(MIMETYPE_SELECT_CLASS);\r\n            this.menu.addWidget(w);\r\n        }\r\n        else if (mimetypes.length === 1) {\r\n            let mtLabel = document.createElement('span');\r\n            mtLabel.innerText = mimetypes[0];\r\n            w = new widgets_1.Widget({ node: mtLabel });\r\n            // w.addClass(MIMETYPE_SELECT_CLASS);\r\n            this.menu.addWidget(w);\r\n        }\r\n    }\r\n    /**\r\n     * Update trusted status\r\n     */\r\n    trustedChanged(trusted) {\r\n        this.updateView();\r\n        if (trusted) {\r\n            this.removeClass(UNTRUSTED_CLASS);\r\n        }\r\n        else if (OutputPanel.isTrustSignificant(this.model, this.rendermime)) {\r\n            this.addClass(UNTRUSTED_CLASS);\r\n        }\r\n    }\r\n    /**\r\n     * Update view\r\n     */\r\n    updateView() {\r\n        let model = this.model;\r\n        if (this.view instanceof RenderableOutputView) {\r\n            // Previosuly rendered\r\n            if (!this.forceText && RenderableOutputView.canRender(model, this.rendermime)) {\r\n                // Can still render\r\n                this.view.updateView(this.selectedMimetype, model.trusted);\r\n            }\r\n            else {\r\n                // Can no longer render\r\n                let view = this.createView(this.forceText);\r\n                this.replaceView(view);\r\n            }\r\n        }\r\n        else {\r\n            // Previously text output\r\n            // Here, we replace the view irregardles of old vs new type\r\n            let view = this.createView(this.forceText);\r\n            this.replaceView(view);\r\n        }\r\n    }\r\n    get selectedMimetype() {\r\n        if (this._mimetype !== null) {\r\n            return this._mimetype;\r\n        }\r\n        let data = rendermime_1.OutputModel.getData(this.model.base || this.model.remote);\r\n        let mt = this.rendermime.preferredMimeType(data, this.model.trusted ? 'any' : 'ensure');\r\n        return mt === undefined ? null : mt;\r\n    }\r\n    set selectedMimetype(value) {\r\n        if (this._mimetype !== value) {\r\n            this._mimetype = value;\r\n            this.updateView();\r\n        }\r\n    }\r\n    /**\r\n     * Whether trust can affect the output rendering.\r\n     */\r\n    static isTrustSignificant(model, rendermime) {\r\n        if (model.trusted) {\r\n            return false;\r\n        }\r\n        let toTest = [];\r\n        if (model.base) {\r\n            toTest.push(model.base);\r\n        }\r\n        if (model.remote && model.remote !== model.base) {\r\n            toTest.push(model.remote);\r\n        }\r\n        for (let o of toTest) {\r\n            let untrustedModel = new rendermime_1.OutputModel({ value: o, trusted: false });\r\n            let modelMimeTypes = Object.keys(untrustedModel.data);\r\n            let rendererMimeTypes = algorithm_1.toArray(rendermime.mimeTypes);\r\n            let candidates = util_1.intersection(modelMimeTypes, rendererMimeTypes);\r\n            for (let mimeType of candidates) {\r\n                let factory = rendermime.getFactory(mimeType);\r\n                if (factory && (!factory.safe || sanitizable.indexOf(mimeType) !== -1)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.OutputPanel = OutputPanel;\r\n/**\r\n * Widget for an output with renderable MIME data.\r\n */\r\nclass RenderableOutputView extends renderable_1.RenderableDiffView {\r\n    constructor(model, editorClass, rendermime, mimetype) {\r\n        super(model, editorClass, rendermime, mimetype);\r\n    }\r\n    /**\r\n     * Create a widget which renders the given cell output\r\n     */\r\n    createSubView(output, trusted) {\r\n        let panel = new RenderedOutputWidget(this.rendermime);\r\n        panel.updateView(output, trusted, this.mimetype);\r\n        return panel;\r\n    }\r\n    /**\r\n     * Update trusted status\r\n     */\r\n    updateView(mimeType, trusted) {\r\n        let i = 0;\r\n        let model = this.model;\r\n        this.mimetype = mimeType;\r\n        algorithm_1.each(this.layout.widgets, (w) => {\r\n            if (w instanceof RenderedOutputWidget) {\r\n                let output = null;\r\n                if (i === 0 && model.base) {\r\n                    // Use base data\r\n                    output = model.base;\r\n                }\r\n                else if (model.remote) {\r\n                    output = model.remote;\r\n                }\r\n                if (output) {\r\n                    w.updateView(output, trusted, mimeType);\r\n                }\r\n                ++i;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if a cell output can be rendered (either safe/trusted or\r\n     * sanitizable)\r\n     */\r\n    static canRender(model, rendermime) {\r\n        let toTest = model.contents;\r\n        for (let o of toTest) {\r\n            let bundle = rendermime_1.OutputModel.getData(o);\r\n            let mimetype = rendermime.preferredMimeType(bundle, model.trusted ? 'any' : 'ensure');\r\n            if (!mimetype) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexports.RenderableOutputView = RenderableOutputView;\r\nclass RenderedOutputWidget extends widgets_1.Panel {\r\n    /**\r\n     *\r\n     */\r\n    constructor(rendermime) {\r\n        super();\r\n        this.rendermime = rendermime;\r\n    }\r\n    updateView(output, trusted, mimetype) {\r\n        let old = this.renderer;\r\n        this.renderer = this.createRenderer(output, trusted, mimetype);\r\n        if (old !== undefined) {\r\n            old.dispose();\r\n        }\r\n        this.addWidget(this.renderer);\r\n    }\r\n    createRenderer(output, trusted, mimetype) {\r\n        let model = new rendermime_1.OutputModel({ value: output, trusted });\r\n        let widget = this.rendermime.createRenderer(mimetype);\r\n        widget.renderModel(model);\r\n        widget.addClass(RENDERED_OUTPUT_CLASS);\r\n        let bundle = rendermime_1.OutputModel.getData(output);\r\n        if (isBase64(bundle[mimetype])) {\r\n            widget.addClass(DATA_IS_BASE64_CLASS);\r\n        }\r\n        return widget;\r\n    }\r\n}\r\n//# sourceMappingURL=output.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RenderableDiffView = void 0;\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\n/**\r\n * Widget for outputs with renderable MIME data.\r\n */\r\nclass RenderableDiffView extends widgets_1.Widget {\r\n    constructor(model, editorClass, rendermime, mimetype) {\r\n        super();\r\n        this.rendermime = rendermime;\r\n        this.model = model;\r\n        this.mimetype = mimetype;\r\n        let bdata = model.base;\r\n        let rdata = model.remote;\r\n        this.layout = new widgets_1.PanelLayout();\r\n        let ci = 0;\r\n        if (bdata) {\r\n            let widget = this.createSubView(bdata, model.trusted);\r\n            this.layout.addWidget(widget);\r\n            widget.addClass(editorClass[ci++]);\r\n        }\r\n        if (rdata && rdata !== bdata) {\r\n            let widget = this.createSubView(rdata, model.trusted);\r\n            this.layout.addWidget(widget);\r\n            widget.addClass(editorClass[ci++]);\r\n        }\r\n    }\r\n}\r\nexports.RenderableDiffView = RenderableDiffView;\r\n//# sourceMappingURL=renderable.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n// This code is based on the CodeMirror mergeview.js source:\r\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: http://codemirror.net/LICENSE\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.filterDecisions = exports.pushPatchDecision = exports.buildDiffs = exports.applyDecisions = exports.resolveCommonPaths = exports.pushPath = exports.popPath = exports.addSorted = exports.decisionSortKey = exports.decisionPathSortKey = exports.MergeDecision = void 0;\r\nconst diffentries_1 = require(\"../diff/diffentries\");\r\nconst util_1 = require(\"../diff/util\");\r\nconst patch_1 = require(\"../patch\");\r\nconst util_2 = require(\"../common/util\");\r\nfunction validateAction(action) {\r\n    if (util_2.valueIn(action, ['base', 'local', 'remote', 'local_then_remote',\r\n        'remote_then_local', 'custom', 'clear', 'clear_parent', 'either'])) {\r\n        return action;\r\n    }\r\n    throw new Error('Invalid merge decision action: ' + action);\r\n}\r\n/**\r\n * Take the value, or take default if value is undefined\r\n */\r\nfunction valueOrDefault(value, defaultValue) {\r\n    return value === undefined ? defaultValue : value;\r\n}\r\nclass MergeDecision {\r\n    constructor(obj, localDiff = null, remoteDiff = null, action = 'base', conflict = false, customDiff = null, similarInsert = null) {\r\n        this.level = 0;\r\n        if (obj instanceof Array) {\r\n            this._path = obj;\r\n        }\r\n        else if (obj instanceof MergeDecision) {\r\n            this._path = obj.absolutePath.slice();\r\n            localDiff = obj.localDiff;\r\n            remoteDiff = obj.remoteDiff;\r\n            action = obj.action;\r\n            conflict = obj.conflict;\r\n            customDiff = obj.customDiff;\r\n            similarInsert = obj.similarInsert;\r\n            this.level = obj.level;\r\n        }\r\n        else {\r\n            this._path = valueOrDefault(obj.common_path, []);\r\n            localDiff = valueOrDefault(obj.local_diff, localDiff);\r\n            remoteDiff = valueOrDefault(obj.remote_diff, remoteDiff);\r\n            action = validateAction(valueOrDefault(obj.action, action));\r\n            conflict = valueOrDefault(obj.conflict, conflict);\r\n            customDiff = valueOrDefault(obj.custom_diff, customDiff);\r\n            similarInsert = valueOrDefault(obj.similar_insert, similarInsert);\r\n        }\r\n        this.localDiff = localDiff;\r\n        this.remoteDiff = remoteDiff;\r\n        this.action = action;\r\n        this.conflict = conflict;\r\n        this.customDiff = customDiff;\r\n        this.similarInsert = similarInsert;\r\n    }\r\n    setValuesFrom(other) {\r\n        this._path = other.absolutePath.slice();\r\n        this.localDiff = other.localDiff;\r\n        this.remoteDiff = other.remoteDiff;\r\n        this.action = other.action;\r\n        this.conflict = other.conflict;\r\n        this.customDiff = other.customDiff;\r\n        this.similarInsert = other.similarInsert;\r\n        this.level = other.level;\r\n    }\r\n    get localPath() {\r\n        return this._path.slice(this.level);\r\n    }\r\n    get absolutePath() {\r\n        return this._path;\r\n    }\r\n    set absolutePath(value) {\r\n        this._path = value;\r\n    }\r\n    pushPath(key) {\r\n        this._path.push(key);\r\n    }\r\n    get diffs() {\r\n        let diffs = [this.localDiff, this.remoteDiff];\r\n        if (this.customDiff) {\r\n            diffs.push(this.customDiff);\r\n        }\r\n        return diffs;\r\n    }\r\n    set diffs(value) {\r\n        this.localDiff = value[0];\r\n        this.remoteDiff = value[1];\r\n        if (value.length > 2) {\r\n            this.customDiff = value[2];\r\n        }\r\n    }\r\n    serialize() {\r\n        return {\r\n            common_path: this.absolutePath.slice(),\r\n            local_diff: util_1.stripSource(this.localDiff),\r\n            remote_diff: util_1.stripSource(this.remoteDiff),\r\n            action: this.action,\r\n            conflict: this.conflict,\r\n            custom_diff: util_1.stripSource(this.customDiff)\r\n        };\r\n    }\r\n}\r\nexports.MergeDecision = MergeDecision;\r\n/**\r\n * Compare to DecisionPath's for sorting.\r\n *\r\n * The rules are that deeper paths sort before other paths\r\n * with the same prefix, as they correspond to patch ops,\r\n * which will not affect the indexing of following decisions\r\n * on lists.\r\n *\r\n * @param {DecisionPath} a The first decision path\r\n * @param {DecisionPath} b The second decision path\r\n * @returns {number} Returns a negative number if a should\r\n *  sort first, positive number if b should sort first, or\r\n *  zero if the are identical.\r\n */\r\nfunction decisionPathSortKey(a, b) {\r\n    if (a.length === b.length) {\r\n        // Equally deep, sort on keys\r\n        for (let lvl = 0; lvl < a.length; ++lvl) {\r\n            if (a[lvl] === b[lvl]) {\r\n                // Keys are equal, try a deeper level\r\n                continue;\r\n            }\r\n            // Keys differ on this level!\r\n            return a[lvl] < b[lvl] ? -1 : 1;\r\n        }\r\n        // Paths are identical\r\n        return 0;\r\n    }\r\n    else {\r\n        // Sort deeper paths first\r\n        return b.length - a.length;\r\n    }\r\n}\r\nexports.decisionPathSortKey = decisionPathSortKey;\r\n/**\r\n * Compare the paths of two decisions for sorting.\r\n *\r\n * This is a thin wrapper around decisionPathSortKey\r\n *\r\n * @export\r\n * @param {MergeDecision} a The first decision\r\n * @param {MergeDecision} b The second decision\r\n * @returns {number}  Returns a negative number if a should\r\n *  sort first, positive number if b should sort first, or\r\n *  zero if the are identical.\r\n */\r\nfunction decisionSortKey(a, b) {\r\n    return decisionPathSortKey(a.absolutePath, b.absolutePath);\r\n}\r\nexports.decisionSortKey = decisionSortKey;\r\n/**\r\n * Adds a decision to an existing, sorted collection of merge decisions\r\n *\r\n * Ensures that the location of the newly added decision\r\n * will comply with the format specification\r\n *\r\n * @export\r\n * @param {MergeDecision[]} decisions\r\n * @param {MergeDecision} toAdd\r\n * @param {(number | string)} [firstKey]\r\n * @returns {void}\r\n */\r\nfunction addSorted(decisions, toAdd, firstKey) {\r\n    let idx = 0;\r\n    for (; idx < decisions.length; ++idx) {\r\n        let c = decisionPathSortKey(decisions[idx].absolutePath, toAdd.absolutePath);\r\n        if (c > 0) {\r\n            decisions.splice(idx, 0, toAdd);\r\n            return;\r\n        }\r\n        else if (firstKey !== undefined && c === 0) {\r\n            let key = null;\r\n            for (let diff of decisions[idx].diffs) {\r\n                if (!diff) {\r\n                    continue;\r\n                }\r\n                for (let d of diff) {\r\n                    if (!key || d.key < key) {\r\n                        key = d.key;\r\n                    }\r\n                }\r\n            }\r\n            if (firstKey === key) {\r\n                throw new Error('Shouldn\\'t have multiple decisions with diff on same key');\r\n            }\r\n            else if (key === null || firstKey < key) {\r\n                decisions.splice(idx, 0, toAdd);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    decisions.push(toAdd);\r\n}\r\nexports.addSorted = addSorted;\r\nfunction popPath(diffs, popInner) {\r\n    if (diffs.length < 1) {\r\n        return null;\r\n    }\r\n    // Find first non-null, non-empty diff list:\r\n    let i = 0;\r\n    for (let di of diffs) {\r\n        if (di !== null && di.length > 0) {\r\n            break;\r\n        }\r\n        i++;\r\n    }\r\n    // Assert that we have at least one non-null diff:\r\n    if (i === diffs.length) {\r\n        console.log('Empty merge decision (no diffs)!');\r\n        return null;\r\n    }\r\n    // Check if ops and keys are equal for all non-null diffs\r\n    let d = diffs[i];\r\n    let op = d[0].op;\r\n    let key = d[0].key;\r\n    for (let di of diffs) {\r\n        if (di && di.length > 0) {\r\n            // Note that while diff lists can have 2 entries, they should never cause\r\n            // a pop, as they will have a difference in op.\r\n            for (let dj of di) {\r\n                if (dj.op !== op || dj.key !== key) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Inspect patch op further along:\r\n    if (op === 'patch') {\r\n        // Only pop if sub-diff has length 1 (unless popInner is true)\r\n        if (popInner !== true) {\r\n            for (let di of diffs) {\r\n                if (di && di.length > 0 && (di.length !== 1 ||\r\n                    !di[0].diff ||\r\n                    di[0].diff.length !== 1)) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        let retDiffs = [];\r\n        for (let di of diffs) {\r\n            if (di && di.length > 0) {\r\n                retDiffs.push(di[0].diff);\r\n            }\r\n            else {\r\n                retDiffs.push(null);\r\n            }\r\n        }\r\n        return { diffs: retDiffs, key: key };\r\n    }\r\n    return null;\r\n}\r\nexports.popPath = popPath;\r\nfunction pushPath(diffs, prefix) {\r\n    for (let key of prefix.reverse()) {\r\n        diffs = [diffentries_1.opPatch(key, diffs)];\r\n    }\r\n    return diffs;\r\n}\r\nexports.pushPath = pushPath;\r\n/**\r\n * Expand the `common_path` field of the merge decisions for optimized\r\n * processing. Modifies the merge decisions in-place.\r\n */\r\nfunction resolveCommonPaths(decisions) {\r\n    for (let md of decisions) {\r\n        let diffs = md.diffs;\r\n        let path = md.absolutePath || [];\r\n        let popped = popPath(diffs, true);\r\n        while (popped) {\r\n            path.push(popped.key);\r\n            diffs = popped.diffs;\r\n            popped = popPath(diffs, true);\r\n        }\r\n        md.absolutePath = path;\r\n        md.diffs = diffs;\r\n    }\r\n}\r\nexports.resolveCommonPaths = resolveCommonPaths;\r\n/**\r\n * Make a new 'cleared' value of the right type.\r\n */\r\nfunction makeClearedValue(value) {\r\n    if (value instanceof Array) {\r\n        // Clearing e.g. an outputs list means setting it to an empty array\r\n        return [];\r\n    }\r\n    else if (typeof (value) === 'string') {\r\n        // Clearing e.g. a source string means setting it to an empty string\r\n        return '';\r\n    }\r\n    else if (value === null || util_2.valueIn(typeof (value), ['number', 'boolean'])) {\r\n        // Clearing anything else (atomic values) means setting it to null\r\n        return null;\r\n    }\r\n    else {\r\n        // Clearing e.g. a metadata dict means setting it to an empty Object\r\n        return {};\r\n    }\r\n}\r\nfunction _resolvePathInObject(obj, path) {\r\n    for (let key of path) {\r\n        obj = obj[key]; // Should throw if key missing\r\n    }\r\n    return obj;\r\n}\r\nfunction _combineDiffs(a, b) {\r\n    if (a && b) {\r\n        return a.concat(b);\r\n    }\r\n    else if (a) {\r\n        return a.slice();\r\n    }\r\n    else if (b) {\r\n        return b.slice();\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction resolveAction(base, decision) {\r\n    let a = decision.action;\r\n    if (a === 'base') {\r\n        return []; // no-op\r\n    }\r\n    else if (a === 'local' || a === 'either') {\r\n        return decision.localDiff ? decision.localDiff.slice() : [];\r\n    }\r\n    else if (a === 'remote') {\r\n        return decision.remoteDiff ? decision.remoteDiff.slice() : [];\r\n    }\r\n    else if (a === 'custom') {\r\n        return decision.customDiff ? decision.customDiff.slice() : [];\r\n    }\r\n    else if (a === 'local_then_remote') {\r\n        return _combineDiffs(decision.localDiff, decision.remoteDiff);\r\n    }\r\n    else if (a === 'remote_then_local') {\r\n        return _combineDiffs(decision.remoteDiff, decision.localDiff);\r\n    }\r\n    else if (a === 'clear') {\r\n        let key = null;\r\n        if (typeof base !== 'object') {\r\n            throw new TypeError('Can only use `\\'clear\\'` action on objects/dicts');\r\n        }\r\n        for (let d of _combineDiffs(decision.localDiff, decision.remoteDiff)) {\r\n            if (key) {\r\n                if (key !== d.key) {\r\n                    throw new Error('Cannot combine diffs with different keys');\r\n                }\r\n            }\r\n            else {\r\n                key = d.key;\r\n            }\r\n        }\r\n        if (key) {\r\n            let d = diffentries_1.opReplace(key, makeClearedValue(base[key]));\r\n            d.source = { decision, action: 'custom' };\r\n            return [d];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    else if (a === 'clear_parent') {\r\n        if (Array.isArray(base)) {\r\n            let d = diffentries_1.opRemoveRange(0, base.length);\r\n            d.source = { decision, action: 'custom' };\r\n            return [d];\r\n        }\r\n        else if (typeof (base) === 'string') {\r\n            let len = util_2.splitLines(base).length;\r\n            let d = diffentries_1.opRemoveRange(0, len);\r\n            d.source = { decision, action: 'custom' };\r\n            return [d];\r\n        }\r\n        else {\r\n            // Ideally we would do a opReplace on the parent, but this is not\r\n            // easily combined with this method, so simply remove all keys\r\n            let diff = [];\r\n            for (let key of base) {\r\n                let d = diffentries_1.opRemove(key);\r\n                d.source = { decision, action: 'custom' };\r\n                diff.push(d);\r\n            }\r\n            return diff;\r\n        }\r\n    }\r\n    else {\r\n        throw new Error('The action \\\"' + a + '\\\" is not defined');\r\n    }\r\n}\r\n/**\r\n * Prevent paths from pointing to specific string lines.\r\n *\r\n * Check if path points to a specific line in a string, if so, split off index.\r\n *\r\n * Returns a tuple of path and any line key.\r\n */\r\nfunction splitDiffStringPath(base, path) {\r\n    for (let i = 0; i < path.length; ++i) {\r\n        if (typeof base === 'string') {\r\n            return [path.slice(0, i), path.slice(i)];\r\n        }\r\n        base = base[path[i]];\r\n    }\r\n    return [path, null];\r\n}\r\nfunction applyDecisions(base, decisions) {\r\n    let merged = util_2.deepCopy(base);\r\n    let prevPath = null;\r\n    let parent = null;\r\n    let lastKey = null;\r\n    let resolved = null;\r\n    let diffs = [];\r\n    // clear_parent actions should override other decisions on same obj, so\r\n    // we need to track it\r\n    let clearParent = false;\r\n    for (let md of decisions) {\r\n        let spl = splitDiffStringPath(merged, md.localPath);\r\n        let path = spl[0];\r\n        let line = spl[1];\r\n        // We patch all decisions with the same path in one op\r\n        if (util_2.arraysEqual(path, prevPath)) {\r\n            if (clearParent) {\r\n                // Another entry will clear the parent, so all other decisions\r\n                // should be dropped\r\n            }\r\n            else {\r\n                if (md.action === 'clear_parent') {\r\n                    clearParent = true;\r\n                    diffs = []; // Clear any exisiting decsions!\r\n                }\r\n                let ad = resolveAction(resolved, md);\r\n                if (line) {\r\n                    ad = pushPath(ad, line);\r\n                }\r\n                diffs = diffs.concat(ad);\r\n            }\r\n        }\r\n        else {\r\n            // Different path, start a new collection\r\n            if (prevPath !== null) {\r\n                // First, apply previous diffs\r\n                if (parent === null) {\r\n                    // Operations on root create new merged object\r\n                    merged = patch_1.patch(resolved, diffs);\r\n                }\r\n                else {\r\n                    // If not, overwrite entry in parent (which is an entry in merged).\r\n                    // This is ok, as no paths should point to subobjects of the patched\r\n                    // object.\r\n                    parent[lastKey] = patch_1.patch(resolved, diffs);\r\n                }\r\n            }\r\n            prevPath = path.slice();\r\n            // Resolve path in base and output\r\n            resolved = merged;\r\n            parent = null;\r\n            lastKey = null;\r\n            for (let key of path) {\r\n                parent = resolved;\r\n                resolved = resolved[key]; // Should throw if key missing\r\n                lastKey = key;\r\n            }\r\n            diffs = resolveAction(resolved, md);\r\n            if (line) {\r\n                diffs = pushPath(diffs, line);\r\n            }\r\n            clearParent = md.action === 'clear_parent';\r\n        }\r\n    }\r\n    // Apply the last collection of diffs, if present (same as above)\r\n    if (prevPath !== null) {\r\n        if (parent === null) {\r\n            merged = patch_1.patch(resolved, diffs);\r\n        }\r\n        else {\r\n            parent[lastKey] = patch_1.patch(resolved, diffs);\r\n        }\r\n    }\r\n    return merged;\r\n}\r\nexports.applyDecisions = applyDecisions;\r\n/**\r\n * Merge a tree of diffs at varying path levels to one diff at their shared root\r\n *\r\n * Relies on the format specification about decision ordering to help\r\n * simplify the process (deeper paths should come before its parent paths).\r\n * This is realized by the `sortedPaths` argument.\r\n */\r\nfunction _mergeTree(tree, sortedPaths) {\r\n    let trunk = [];\r\n    let root = null;\r\n    for (let i = 0; i < sortedPaths.length; ++i) {\r\n        let path = tree[sortedPaths[i]].path;\r\n        let subdiffs = tree[sortedPaths[i]].diff;\r\n        trunk = trunk.concat(subdiffs);\r\n        let nextPath;\r\n        if (i === sortedPaths.length - 1) {\r\n            nextPath = root;\r\n        }\r\n        else {\r\n            nextPath = tree[sortedPaths[i + 1]].path;\r\n        }\r\n        // First, check if path is subpath of nextPath:\r\n        if (util_2.isPrefixArray(nextPath, path)) {\r\n            // We can simply promote existing diffs to next path\r\n            if (nextPath !== null) {\r\n                trunk = pushPath(trunk, path.slice(nextPath.length));\r\n                root = nextPath;\r\n            }\r\n        }\r\n        else {\r\n            // We have started on a new trunk\r\n            // Collect branches on the new trunk, and merge the trunks\r\n            let newTrunk = _mergeTree(tree, sortedPaths.slice(i + 1));\r\n            nextPath = tree[sortedPaths[sortedPaths.length - 1]].path;\r\n            let prefix = util_2.findSharedPrefix(path, nextPath);\r\n            let pl = prefix ? prefix.length : 0;\r\n            trunk = pushPath(trunk, path.slice(pl)).concat(pushPath(newTrunk, nextPath.slice(pl)));\r\n            break; // Recursion will exhaust sortedPaths\r\n        }\r\n    }\r\n    return trunk;\r\n}\r\n/**\r\n * Builds a diff for direct application on base. The `which` argument either\r\n * selects the 'local', 'remote' or 'merged' diffs.\r\n */\r\nfunction buildDiffs(base, decisions, which) {\r\n    let tree = {};\r\n    let sortedPaths = [];\r\n    let local = which === 'local';\r\n    let merged = which === 'merged';\r\n    if (!local && !merged) {\r\n        console.assert(which === 'remote');\r\n    }\r\n    for (let md of decisions) {\r\n        let subdiffs = null;\r\n        let spl = splitDiffStringPath(base, md.localPath);\r\n        let path = spl[0];\r\n        let line = spl[1];\r\n        if (merged) {\r\n            let sub = _resolvePathInObject(base, path);\r\n            subdiffs = resolveAction(sub, md);\r\n        }\r\n        else {\r\n            subdiffs = local ? md.localDiff : md.remoteDiff;\r\n            if (subdiffs === null) {\r\n                continue;\r\n            }\r\n        }\r\n        let strPath = '/' + path.join('/');\r\n        if (tree.hasOwnProperty(strPath)) {\r\n            // Existing tree entry, simply add diffs to it\r\n            if (line) {\r\n                let matchDiff = util_1.getSubDiffByKey(tree[strPath].diff, line[0]);\r\n                if (matchDiff) {\r\n                    matchDiff.push.apply(matchDiff, subdiffs);\r\n                }\r\n                else {\r\n                    subdiffs = pushPath(subdiffs, line);\r\n                    tree[strPath].diff.push(subdiffs[0]);\r\n                }\r\n            }\r\n            else {\r\n                tree[strPath].diff = tree[strPath].diff.concat(subdiffs);\r\n            }\r\n        }\r\n        else {\r\n            // Make new entry in tree\r\n            if (line) {\r\n                subdiffs = pushPath(subdiffs, line);\r\n            }\r\n            tree[strPath] = { diff: subdiffs, path: path };\r\n            sortedPaths.push(strPath);\r\n        }\r\n    }\r\n    if (Object.keys(tree).length === 0) {\r\n        return null;\r\n    }\r\n    if (!tree.hasOwnProperty('/')) {\r\n        tree['/'] = { diff: [], path: [] };\r\n        sortedPaths.push('/');\r\n    }\r\n    // Tree is constructed, now join all branches at diverging points (joints)\r\n    return _mergeTree(tree, sortedPaths);\r\n}\r\nexports.buildDiffs = buildDiffs;\r\n/**\r\n * Move a path prefix in a merge decision from `common_path` to the diffs.\r\n *\r\n * This is done by wrapping the diffs in nested patch ops.\r\n */\r\nfunction pushPatchDecision(decision, prefix) {\r\n    let dec = new MergeDecision(decision);\r\n    // We need to start with inner most key to nest correctly, so reverse:\r\n    for (let key of prefix.slice().reverse()) {\r\n        if (dec.absolutePath.length === 0) {\r\n            throw new Error('Cannot remove key from empty decision path: ' + key + ', ' + dec);\r\n        }\r\n        let popped = dec.absolutePath.pop();\r\n        if (popped !== key) { // Pop and assert\r\n            throw Error('Cannot push a patch that doesn\\'t correspond to ' +\r\n                'a key in the decision path! Key: ' + key +\r\n                '; Remaining path: ' + dec.absolutePath.concat([popped]));\r\n        }\r\n        let ld = dec.localDiff && dec.localDiff.length > 0;\r\n        let rd = dec.remoteDiff && dec.remoteDiff.length > 0;\r\n        let cd = dec.customDiff && dec.customDiff.length > 0;\r\n        dec.localDiff = ld ? [diffentries_1.opPatch(key, dec.localDiff)] : null;\r\n        dec.remoteDiff = rd ? [diffentries_1.opPatch(key, dec.remoteDiff)] : null;\r\n        dec.customDiff = cd ? [diffentries_1.opPatch(key, dec.customDiff)] : null;\r\n    }\r\n    return dec;\r\n}\r\nexports.pushPatchDecision = pushPatchDecision;\r\n/**\r\n * Filter decisions based on matching (segment of) path\r\n *\r\n * Checks whether each decision's path start with `path`. If `skipLevels` is\r\n * given, the first levels of the decision's path is ignored for the comparison.\r\n *\r\n * Once matched, the matching decisions' levels are adjusted such that they\r\n * point to after the matching segment.\r\n *\r\n * Example:\r\n * Given a list of decisions with paths:\r\n *   /cells/0/outputs/0\r\n *   /cells/0/outputs/1\r\n *   /cells/2/outputs/1\r\n *   /cells/12/outputs/0/data\r\n *\r\n * If called with path `['cells']`:\r\n *   All decisions will be returned, with level set to 1\r\n * If called with path `['cells', 0]`:\r\n *   The first two will be returned, with level set to 2\r\n * If called with path `['outputs']`, and skipLevel = 2:\r\n *   All decisions will be returned, with level set to 3\r\n * If called with path `['outputs', 0]`, and skipLevel = 2:\r\n *   Decision 1 and 4 will be returned, with level set to 4\r\n *\r\n * Note that since the same decision instances are returned, this will modify\r\n * the level of the passed decisions.\r\n */\r\nfunction filterDecisions(decisions, path, skipLevels, maxLength) {\r\n    let ret = [];\r\n    skipLevels = skipLevels || 0;\r\n    for (let md of decisions) {\r\n        if (maxLength !== undefined && md.absolutePath.length > maxLength) {\r\n            continue;\r\n        }\r\n        if (util_2.isPrefixArray(path, md.absolutePath.slice(skipLevels))) {\r\n            md.level = skipLevels + path.length;\r\n            ret.push(md);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexports.filterDecisions = filterDecisions;\r\n//# sourceMappingURL=decisions.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CellMergeModel = void 0;\r\nconst nbformat = require(\"@jupyterlab/nbformat\");\r\nconst signaling_1 = require(\"@lumino/signaling\");\r\nconst util_1 = require(\"../../diff/util\");\r\nconst model_1 = require(\"../../diff/model\");\r\nconst decisions_1 = require(\"../../merge/decisions\");\r\nconst patch_1 = require(\"../../patch\");\r\nconst util_2 = require(\"../../common/util\");\r\nconst chunking_1 = require(\"../../chunking\");\r\nconst common_1 = require(\"./common\");\r\nconst exceptions_1 = require(\"../../common/exceptions\");\r\n/**\r\n * Create a cell diff model based on a set of merge\r\n * decisions that patch the cell.\r\n */\r\nfunction createPatchedCellDecisionDiffModel(base, decisions, local, remote, mimetype) {\r\n    for (let md of decisions) {\r\n        if (md.localPath.length === 0) {\r\n            let val = decisions_1.popPath(md.diffs, true);\r\n            if (val !== null) {\r\n                md.diffs = val.diffs;\r\n                md.pushPath(val.key);\r\n            }\r\n        }\r\n    }\r\n    let source = new common_1.DecisionStringDiffModel(base.source, decisions_1.filterDecisions(decisions, ['source'], 2), [local ? local.source : null,\r\n        remote ? remote.source : null]);\r\n    model_1.setMimetypeFromCellType(source, base, mimetype);\r\n    let metadata = new common_1.DecisionStringDiffModel(base.metadata, decisions_1.filterDecisions(decisions, ['metadata'], 2), [local ? local.metadata : null,\r\n        remote ? remote.metadata : null]);\r\n    let outputs = null;\r\n    let executionCount = null;\r\n    if (nbformat.isCode(base)) {\r\n        if (base.outputs) {\r\n            let outputBase = base.outputs;\r\n            let outputDec = decisions_1.filterDecisions(decisions, ['outputs'], 2);\r\n            let mergedDiff = decisions_1.buildDiffs(outputBase, outputDec, 'merged');\r\n            let merged;\r\n            if (mergedDiff && mergedDiff.length > 0) {\r\n                merged = patch_1.patch(outputBase, mergedDiff);\r\n            }\r\n            else {\r\n                merged = outputBase;\r\n            }\r\n            outputs = model_1.makeOutputModels(outputBase, merged, mergedDiff);\r\n        }\r\n        let execBase = base.execution_count;\r\n        let cellDecs = decisions_1.filterDecisions(decisions, ['cells'], 0, 2);\r\n        for (let dec of cellDecs) {\r\n            if (util_1.getDiffEntryByKey(dec.localDiff, 'execution_count') !== null ||\r\n                util_1.getDiffEntryByKey(dec.remoteDiff, 'execution_count') !== null ||\r\n                util_1.getDiffEntryByKey(dec.customDiff, 'execution_count') !== null) {\r\n                dec.level = 2;\r\n                let mergeExecDiff = decisions_1.buildDiffs(base, [dec], 'merged');\r\n                let execDiff = util_2.hasEntries(mergeExecDiff) ? mergeExecDiff[0] : null;\r\n                // Pass base as remote, which means fall back to unchanged if no diff:\r\n                executionCount = model_1.createImmutableModel(execBase, execBase, execDiff);\r\n            }\r\n        }\r\n    }\r\n    return new model_1.CellDiffModel(source, metadata, outputs, executionCount, base.cell_type);\r\n}\r\n/**\r\n * CellMergeModel\r\n */\r\nclass CellMergeModel extends common_1.ObjectMergeModel {\r\n    constructor(base, decisions, mimetype) {\r\n        // TODO: Remove/extend whitelist once we support more\r\n        super(base, [], mimetype, ['source', 'metadata', 'outputs', 'execution_count']);\r\n        this.deleteCellChanged = new signaling_1.Signal(this);\r\n        this._clearOutputs = false;\r\n        this.clearOutputsChanged = new signaling_1.Signal(this);\r\n        this.onesided = false;\r\n        this._deleteCell = false;\r\n        this.processDecisions(decisions);\r\n    }\r\n    /**\r\n     * Run time flag whether the user wants to delete the cell\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    get deleteCell() {\r\n        return this._deleteCell;\r\n    }\r\n    set deleteCell(value) {\r\n        if (this._deleteCell !== value) {\r\n            this._deleteCell = value;\r\n            this.deleteCellChanged.emit(value);\r\n        }\r\n    }\r\n    /**\r\n     * Run time flag whether the user wants to clear the outputs of the cell\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    get clearOutputs() {\r\n        return this._clearOutputs;\r\n    }\r\n    set clearOutputs(value) {\r\n        if (this._clearOutputs !== value) {\r\n            this._clearOutputs = value;\r\n            this.clearOutputsChanged.emit(value);\r\n        }\r\n    }\r\n    /**\r\n     * Whether source is the same in local and remote\r\n     */\r\n    get agreedSource() {\r\n        return !!this.local && !!this.remote &&\r\n            this.local.source.remote === this.remote.source.remote;\r\n    }\r\n    /**\r\n     * Whether metadata is the same in local and remote\r\n     */\r\n    get agreedMetadata() {\r\n        if (!this.local || !this.remote) {\r\n            return false;\r\n        }\r\n        return this.local.metadata.remote === this.remote.metadata.remote;\r\n    }\r\n    /**\r\n     * Whether outputs are the same in local and remote\r\n     */\r\n    get agreedOutputs() {\r\n        if (!this.local || !this.remote) {\r\n            return false;\r\n        }\r\n        let lo = this.local.outputs;\r\n        let ro = this.remote.outputs;\r\n        if (!util_2.hasEntries(lo) || !util_2.hasEntries(ro)) {\r\n            return !util_2.hasEntries(lo) && !util_2.hasEntries(ro);\r\n        }\r\n        if (lo.length !== ro.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < lo.length; ++i) {\r\n            if (JSON.stringify(lo[i].remote) !== JSON.stringify(ro[i].remote)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Whether cell is the same in local and remote\r\n     */\r\n    get agreedCell() {\r\n        // TODO: Also check other fields?\r\n        return this.agreedSource && this.agreedMetadata && this.agreedOutputs;\r\n    }\r\n    /**\r\n     * Whether the cell has any conflicted decisions.\r\n     */\r\n    get conflicted() {\r\n        for (let dec of this.decisions) {\r\n            if (dec.conflict) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Whether the cell has any conflicted decisions on a specific key.\r\n     */\r\n    hasConflictsOn(key) {\r\n        let decs = decisions_1.filterDecisions(this.decisions, [key], 2);\r\n        for (let dec of decs) {\r\n            if (dec.conflict) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Whether the cell has any conflicted decisions on source.\r\n     */\r\n    get sourceConflicted() {\r\n        return this.hasConflictsOn('source');\r\n    }\r\n    /**\r\n     * Whether the cell has any conflicted decisions on metadata.\r\n     */\r\n    get metadataConflicted() {\r\n        return this.hasConflictsOn('metadata');\r\n    }\r\n    /**\r\n     * Whether the cell has any conflicted decisions.\r\n     */\r\n    get outputsConflicted() {\r\n        return this.hasConflictsOn('outputs');\r\n    }\r\n    /**\r\n     * Clear any conflicts on decisions on outputs\r\n     */\r\n    clearOutputConflicts() {\r\n        let decs = decisions_1.filterDecisions(this.decisions, ['outputs'], 2);\r\n        for (let dec of decs) {\r\n            dec.conflict = false;\r\n        }\r\n    }\r\n    /**\r\n     * Get the decision on `execution_count` field (should only be one).\r\n     *\r\n     * Returns null if no decision on `execution_count` was found.\r\n     */\r\n    getExecutionCountDecision() {\r\n        let cellDecs = decisions_1.filterDecisions(this.decisions, ['cells'], 0, 2);\r\n        for (let dec of cellDecs) {\r\n            if (util_1.getDiffEntryByKey(dec.localDiff, 'execution_count') !== null ||\r\n                util_1.getDiffEntryByKey(dec.remoteDiff, 'execution_count') !== null ||\r\n                util_1.getDiffEntryByKey(dec.customDiff, 'execution_count') !== null) {\r\n                return dec;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Apply merge decisions to create the merged cell\r\n     */\r\n    serialize() {\r\n        if (this.deleteCell) {\r\n            return null;\r\n        }\r\n        if (this.base === null) {\r\n            // Only possibility is that cell is added\r\n            if (this.decisions.length > 1 || !this.merged.added) {\r\n                throw new exceptions_1.NotifyUserError('Invalid cell decision');\r\n            }\r\n            let dec = this.decisions[0];\r\n            // Either onesided or identical inserts, but possibly with\r\n            // a custom diff on top!\r\n            let d;\r\n            if (dec.action === 'local' || dec.action === 'either') {\r\n                if (!dec.localDiff) {\r\n                    throw new exceptions_1.NotifyUserError('Invalid cell decision');\r\n                }\r\n                d = dec.localDiff[0];\r\n            }\r\n            else if (dec.action === 'remote') {\r\n                if (!dec.remoteDiff) {\r\n                    throw new exceptions_1.NotifyUserError('Invalid cell decision');\r\n                }\r\n                d = dec.remoteDiff[0];\r\n            }\r\n            else if (dec.action === 'custom') {\r\n                if (!dec.customDiff) {\r\n                    throw new exceptions_1.NotifyUserError('Invalid cell decision');\r\n                }\r\n                d = dec.customDiff[0];\r\n            }\r\n            else {\r\n                throw new exceptions_1.NotifyUserError('Invalid cell decision');\r\n            }\r\n            if (d.op !== 'addrange') {\r\n                throw new exceptions_1.NotifyUserError('Invalid cell decision');\r\n            }\r\n            return d.valuelist[0];\r\n        }\r\n        let decisions = [];\r\n        for (let md of this.decisions) {\r\n            let nmd = new decisions_1.MergeDecision(md);\r\n            nmd.level = 2;\r\n            decisions.push(nmd);\r\n        }\r\n        let output = decisions_1.applyDecisions(this.base, decisions);\r\n        let src = output.source;\r\n        if (Array.isArray(src)) {\r\n            src = src.join('');\r\n        }\r\n        if (src !== this._merged.source.remote) {\r\n            console.warn('Serialized outputs doesn\\'t match model value! ' +\r\n                'Keeping the model value.');\r\n            output.source = util_2.splitLines(this._merged.source.remote);\r\n        }\r\n        if (this.clearOutputs && nbformat.isCode(output)) {\r\n            output.outputs = [];\r\n        }\r\n        return output;\r\n    }\r\n    processDecisions(decisions) {\r\n        // First check for cell-level decisions:\r\n        if (decisions.length === 1) {\r\n            if (util_2.arraysEqual(decisions[0].absolutePath, ['cells'])) {\r\n                // We have a cell level decision\r\n                let md = decisions[0];\r\n                decisions = this.applyCellLevelDecision(md);\r\n                if (decisions.length === 0) {\r\n                    this.decisions.push(md);\r\n                }\r\n            }\r\n        }\r\n        for (let md of decisions) {\r\n            md.level = 2;\r\n            if (md.absolutePath.length < 2 ||\r\n                md.absolutePath[0] !== 'cells') {\r\n                throw new Error('Not a valid path for a cell decision');\r\n            }\r\n            else if (md.absolutePath.length === 2 && (util_2.hasEntries(md.localDiff) || util_2.hasEntries(md.remoteDiff))) {\r\n                // Have decision on /cells/X/.\r\n                // Split the decision on subkey:\r\n                // Nest diff as a patch on cell, which can be split by `splitPatch`:\r\n                let splitDec = decisions_1.pushPatchDecision(md, md.absolutePath.slice(1, 2));\r\n                let localDiff = util_2.hasEntries(splitDec.localDiff) ?\r\n                    splitDec.localDiff[0] : null;\r\n                let remoteDiff = util_2.hasEntries(splitDec.remoteDiff) ?\r\n                    splitDec.remoteDiff[0] : null;\r\n                let subDecisions = this.splitPatch(splitDec, localDiff, remoteDiff);\r\n                // Add all split decisions:\r\n                for (let subdec of subDecisions) {\r\n                    subdec.level = 2;\r\n                    this.decisions.push(subdec);\r\n                }\r\n            }\r\n            else { // Decision has path on subkey\r\n                // Make local path relative to cell\r\n                this.decisions.push(md);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Apply a cell level decision to the model\r\n     *\r\n     * This creates the revelant kinds of models\r\n     */\r\n    applyCellLevelDecision(md) {\r\n        let newDecisions = [];\r\n        /* Possibilities:\r\n         1. Insertion: base is null! Null diff of missing side (unchanged).\r\n         2. Deletion: Null diff of present side (unchanged). Set deleteCell\r\n            depending on action.\r\n         3. Deletion vs patch: Same as 2., but split patch decision onto\r\n            source/metadata/outputs.\r\n         4. Identical ops (insertion or deletion)\r\n         Cases that shouldn't happen:\r\n         5. Insertion vs insertion: Shouldn't happen! Should have been split\r\n            into two decisions with an insertion each before creating model.\r\n         6. Patch vs patch: Shouldn't occur, as those should have been recursed\r\n         */\r\n        console.assert(!this.onesided, 'Cannot have multiple cell decisions on one cell!');\r\n        this.onesided = true; // We set this to distinguish case 3 from normal\r\n        if (!util_2.hasEntries(md.localDiff)) {\r\n            // 1. or 2.:\r\n            this._local = null;\r\n            if (!md.remoteDiff || md.remoteDiff.length !== 1) {\r\n                throw new Error('Merge decision does not conform to expectation: ' + md);\r\n            }\r\n            if (this.base === null) {\r\n                // 1.\r\n                let first = md.remoteDiff[0];\r\n                if (first.op !== 'addrange') {\r\n                    throw new Error('Merge decision does not conform to expectation: ' + md);\r\n                }\r\n                let v = first.valuelist[0];\r\n                this._remote = model_1.createAddedCellDiffModel(v, this.mimetype);\r\n                this._merged = model_1.createAddedCellDiffModel(v, this.mimetype);\r\n            }\r\n            else {\r\n                // 2.\r\n                this._remote = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                this._merged = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                this.deleteCell = util_2.valueIn(md.action, ['remote', 'either']);\r\n            }\r\n        }\r\n        else if (!util_2.hasEntries(md.remoteDiff)) {\r\n            // 1. or 2.:\r\n            this._remote = null;\r\n            if (!md.localDiff || md.localDiff.length !== 1) {\r\n                throw new Error('Merge decision does not conform to expectation: ' + md);\r\n            }\r\n            if (this.base === null) {\r\n                // 1.\r\n                let first = md.localDiff[0];\r\n                if (first.op !== 'addrange') {\r\n                    throw new Error('Merge decision does not conform to expectation: ' + md);\r\n                }\r\n                let v = first.valuelist[0];\r\n                this._local = model_1.createAddedCellDiffModel(v, this.mimetype);\r\n                this._merged = model_1.createAddedCellDiffModel(v, this.mimetype);\r\n            }\r\n            else {\r\n                // 2.\r\n                this._local = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                this._merged = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                this.deleteCell = util_2.valueIn(md.action, ['local', 'either']);\r\n            }\r\n        }\r\n        else {\r\n            console.assert(util_2.hasEntries(md.localDiff) && util_2.hasEntries(md.remoteDiff));\r\n            console.assert(md.localDiff.length === 1 && md.remoteDiff.length === 1);\r\n            // 3. or 4.\r\n            if (md.localDiff[0].op === md.remoteDiff[0].op) {\r\n                // 4.\r\n                if (this.base === null) {\r\n                    // Identical insertions (this relies on preprocessing to ensure only\r\n                    // one value in valuelist)\r\n                    let v = md.localDiff[0].valuelist[0];\r\n                    this._local = model_1.createAddedCellDiffModel(v, this.mimetype);\r\n                    this._remote = model_1.createAddedCellDiffModel(v, this.mimetype);\r\n                    this._merged = model_1.createAddedCellDiffModel(v, this.mimetype);\r\n                }\r\n                else {\r\n                    // Identical delections\r\n                    this._local = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                    this._remote = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                    this._merged = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                    this.deleteCell = util_2.valueIn(md.action, ['local', 'remote', 'either']);\r\n                }\r\n            }\r\n            else {\r\n                // 3., by method of elimination\r\n                let ops = [md.localDiff[0].op, md.remoteDiff[0].op];\r\n                console.assert(util_2.valueIn('removerange', ops) && util_2.valueIn('patch', ops));\r\n                if (this.base === null) {\r\n                    throw new Error('Invalid merge decision, ' +\r\n                        'cannot have null base for deleted cell: ' + md);\r\n                }\r\n                if (ops[0] === 'removerange') {\r\n                    this._local = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                    this.deleteCell = md.action === 'local';\r\n                    // The patch op will be on cell level. Split it on sub keys!\r\n                    newDecisions = newDecisions.concat(this.splitPatch(md, null, md.remoteDiff[0]));\r\n                }\r\n                else {\r\n                    this._remote = model_1.createDeletedCellDiffModel(this.base, this.mimetype);\r\n                    this.deleteCell = md.action === 'remote';\r\n                    // The patch op will be on cell level. Split it on sub keys!\r\n                    newDecisions = newDecisions.concat(this.splitPatch(md, md.localDiff[0], null));\r\n                }\r\n                decisions_1.resolveCommonPaths(newDecisions);\r\n            }\r\n        }\r\n        return newDecisions;\r\n    }\r\n    /**\r\n     * Split a decision with a patch on one side into one decision\r\n     * for each sub entry in the patch.\r\n     */\r\n    splitPatch(md, localPatch, remotePatch) {\r\n        let local = !!localPatch && util_2.hasEntries(localPatch.diff);\r\n        let remote = !!remotePatch && util_2.hasEntries(remotePatch.diff);\r\n        if (!local && !remote) {\r\n            return [];\r\n        }\r\n        let localDiff = local ? localPatch.diff : null;\r\n        let remoteDiff = remote ? remotePatch.diff : null;\r\n        let split = [];\r\n        let keys = [];\r\n        if (local) {\r\n            for (let d of localDiff) {\r\n                keys.push(d.key);\r\n            }\r\n        }\r\n        if (remote) {\r\n            for (let d of remoteDiff) {\r\n                keys.push(d.key);\r\n            }\r\n        }\r\n        keys = keys.filter(util_2.unique);\r\n        if (local && remote) {\r\n            // Sanity check\r\n            if (localPatch.key !== remotePatch.key) {\r\n                throw new Error('Different keys of patch ops given to `splitPatch`.');\r\n            }\r\n        }\r\n        let patchKey = local ? localPatch.key : remotePatch.key;\r\n        for (let key of keys) {\r\n            if (this._whitelist && !util_2.valueIn(key, this._whitelist)) {\r\n                throw new exceptions_1.NotifyUserError('Currently not able to handle decisions on variable \\\"' +\r\n                    key + '\\\"');\r\n            }\r\n            let el = util_1.getDiffEntryByKey(localDiff, key);\r\n            let er = util_1.getDiffEntryByKey(remoteDiff, key);\r\n            let onsesided = !(el && er);\r\n            let action = md.action;\r\n            // If one-sided, change 'base' actions to present side\r\n            if (action === 'base' && onsesided) {\r\n                action = el ? 'local' : 'remote';\r\n            }\r\n            // Create new action:\r\n            split.push(new decisions_1.MergeDecision(md.absolutePath.concat([patchKey]), el ? [el] : null, er ? [er] : null, action, md.conflict));\r\n        }\r\n        let ret = this.splitOnSourceChunks(split);\r\n        decisions_1.resolveCommonPaths(ret);\r\n        return util_2.stableSort(ret, decisions_1.decisionSortKey);\r\n    }\r\n    /**\r\n     * Split decisions on 'source' by chunks.\r\n     *\r\n     * This prevents one decision from contributing to more than one chunk.\r\n     */\r\n    splitOnSourceChunks(decisions) {\r\n        let out = [];\r\n        for (let i = 0; i < decisions.length; ++i) {\r\n            let dec = decisions[i];\r\n            if (dec.absolutePath[2] === 'source') {\r\n                let base = this.base.source;\r\n                if (!Array.isArray(base)) {\r\n                    base = util_2.splitLines(base);\r\n                }\r\n                dec.level = 3;\r\n                let sub = chunking_1.splitMergeDecisionsOnChunks(base, [dec]);\r\n                decisions_1.resolveCommonPaths(sub);\r\n                out = out.concat(util_2.stableSort(sub, decisions_1.decisionSortKey));\r\n            }\r\n            else {\r\n                out.push(dec);\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n    createDiffModel(diff) {\r\n        if (this.base === null) {\r\n            throw new Error('Cannot create a patched or unchanged diff model with null base!');\r\n        }\r\n        if (diff && diff.length > 0) {\r\n            return model_1.createPatchedCellDiffModel(this.base, diff, this.mimetype);\r\n        }\r\n        else {\r\n            return model_1.createUnchangedCellDiffModel(this.base, this.mimetype);\r\n        }\r\n    }\r\n    createMergedDiffModel() {\r\n        if (this.base === null) {\r\n            throw new Error('Cannot create a patched or unchanged merged diff model with null base!');\r\n        }\r\n        return createPatchedCellDecisionDiffModel(this.base, this.decisions, this.local, this.remote, this.mimetype);\r\n    }\r\n}\r\nexports.CellMergeModel = CellMergeModel;\r\n//# sourceMappingURL=cell.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectMergeModel = exports.DecisionStringDiffModel = void 0;\r\nconst range_1 = require(\"../../diff/range\");\r\nconst model_1 = require(\"../../diff/model\");\r\nconst decisions_1 = require(\"../../merge/decisions\");\r\nconst chunking_1 = require(\"../../chunking\");\r\nconst patch_1 = require(\"../../patch\");\r\n/**\r\n * A string diff model based on merge decisions.\r\n */\r\nclass DecisionStringDiffModel extends model_1.StringDiffModel {\r\n    constructor(base, decisions, sourceModels, collapsible, header, collapsed) {\r\n        // Set up initial parameters for super call\r\n        let baseStr = patch_1.stringifyAndBlankNull(base);\r\n        super(baseStr, '', [], [], collapsible, header, collapsed);\r\n        this.rawBase = base;\r\n        this.decisions = decisions;\r\n        this._outdated = true;\r\n        this._sourceModels = sourceModels;\r\n        this._update();\r\n    }\r\n    get additions() {\r\n        if (this._outdated) {\r\n            this._update();\r\n        }\r\n        return this._additions;\r\n    }\r\n    set additions(value) {\r\n        this._additions = value;\r\n    }\r\n    get deletions() {\r\n        if (this._outdated) {\r\n            this._update();\r\n        }\r\n        return this._deletions;\r\n    }\r\n    set deletions(value) {\r\n        this._deletions = value;\r\n    }\r\n    get remote() {\r\n        if (this._outdated) {\r\n            this._update();\r\n        }\r\n        return this._remote;\r\n    }\r\n    set remote(value) {\r\n        this._remote = value;\r\n    }\r\n    invalidate() {\r\n        this._outdated = true;\r\n    }\r\n    get invalid() {\r\n        return this._outdated;\r\n    }\r\n    /**\r\n     * Chunk additions/deletions into line-based chunks, while also producing\r\n     * chunks from source models where the decision is a no-op (action 'base').\r\n     */\r\n    getLineChunks() {\r\n        let models = [this];\r\n        models = models.concat(this._sourceModels);\r\n        let chunker = new chunking_1.LineChunker();\r\n        let iter = new model_1.StringDiffModel.SyncedDiffIter(models);\r\n        for (let v = iter.next(); v !== undefined; v = iter.next()) {\r\n            if (iter.currentModel() === this) {\r\n                // Chunk diffs in own model normally\r\n                // (they should already be present in own model)\r\n                chunker.addDiff(v.range, v.isAddition);\r\n            }\r\n            else {\r\n                // Skip ops in other models that are not no-ops\r\n                if (!v.range.source || v.range.source.decision.action !== 'base') {\r\n                    continue;\r\n                }\r\n                // Other model\r\n                chunker.addGhost(v.range, v.isAddition, iter.currentOffset);\r\n            }\r\n        }\r\n        return chunker.chunks;\r\n    }\r\n    _update() {\r\n        this._outdated = false;\r\n        let diff = decisions_1.buildDiffs(this.rawBase, this.decisions, 'merged');\r\n        let out = patch_1.patchStringified(this.rawBase, diff);\r\n        this._additions = range_1.raw2Pos(out.additions, out.remote);\r\n        this._deletions = range_1.raw2Pos(out.deletions, this.base || '');\r\n        this._remote = out.remote;\r\n    }\r\n}\r\nexports.DecisionStringDiffModel = DecisionStringDiffModel;\r\n/**\r\n * Abstract base class for a merge model of objects of the type ObjectType,\r\n * which uses DiffModelType to model each side internally.\r\n *\r\n * Implementors need to define the abstract functions createDiffModel and\r\n * createMergedDiffModel.\r\n */\r\nclass ObjectMergeModel {\r\n    /**\r\n     *\r\n     */\r\n    constructor(base, decisions, mimetype, whitelist) {\r\n        this._finalized = false;\r\n        this.base = base;\r\n        this.mimetype = mimetype;\r\n        this._whitelist = whitelist || null;\r\n        this.decisions = decisions;\r\n    }\r\n    /**\r\n     * Apply merge decisions to create the merged cell\r\n     */\r\n    serialize() {\r\n        if (this.base === null) {\r\n            return null;\r\n        }\r\n        return decisions_1.applyDecisions(this.base, this.decisions);\r\n    }\r\n    /**\r\n     * Model of the local diff vs. base\r\n     */\r\n    get local() {\r\n        if (this._local === undefined) {\r\n            // We're builiding from decisions\r\n            this._finalizeDecisions();\r\n            let diff = decisions_1.buildDiffs(this.base, this.decisions, 'local');\r\n            this._local = this.createDiffModel(diff);\r\n        }\r\n        return this._local;\r\n    }\r\n    /**\r\n     * Model of the remote diff vs. base\r\n     */\r\n    get remote() {\r\n        if (this._remote === undefined) {\r\n            this._finalizeDecisions();\r\n            let diff = decisions_1.buildDiffs(this.base, this.decisions, 'remote');\r\n            this._remote = this.createDiffModel(diff);\r\n        }\r\n        return this._remote;\r\n    }\r\n    /**\r\n     * Model of the diff of the merged cell vs. base\r\n     */\r\n    get merged() {\r\n        if (this._merged === undefined) {\r\n            this._finalizeDecisions();\r\n            // Merge model needs access to local and remote models to also include\r\n            // chunks from them\r\n            this._merged = this.createMergedDiffModel();\r\n        }\r\n        return this._merged;\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    get subModels() {\r\n        return [this.local, this.remote, this.merged];\r\n    }\r\n    /**\r\n     * Prevent further changes to decisions, and label the diffs\r\n     *\r\n     * The labels are used for picking of decisions\r\n     */\r\n    _finalizeDecisions() {\r\n        if (!this._finalized) {\r\n            for (let md of this.decisions) {\r\n                if (md.action === 'either') {\r\n                    chunking_1.labelSource(md.localDiff, { decision: md, action: 'either' });\r\n                    chunking_1.labelSource(md.remoteDiff, { decision: md, action: 'either' });\r\n                }\r\n                else {\r\n                    chunking_1.labelSource(md.localDiff, { decision: md, action: 'local' });\r\n                    chunking_1.labelSource(md.remoteDiff, { decision: md, action: 'remote' });\r\n                }\r\n                chunking_1.labelSource(md.customDiff, { decision: md, action: 'custom' });\r\n            }\r\n            this._finalized = true;\r\n        }\r\n    }\r\n}\r\nexports.ObjectMergeModel = ObjectMergeModel;\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./cell\"), exports);\r\n__exportStar(require(\"./common\"), exports);\r\n__exportStar(require(\"./metadata\"), exports);\r\n__exportStar(require(\"./notebook\"), exports);\r\n//# sourceMappingURL=index.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MetadataMergeModel = void 0;\r\nconst model_1 = require(\"../../diff/model\");\r\nconst common_1 = require(\"./common\");\r\nconst coreutils_1 = require(\"@lumino/coreutils\");\r\n/**\r\n * Model of a merge of metadata with decisions\r\n */\r\nclass MetadataMergeModel extends common_1.ObjectMergeModel {\r\n    constructor(base, decisions) {\r\n        super(base, decisions, 'application/json');\r\n    }\r\n    serialize() {\r\n        if (!this.merged || this.merged.remote === null) {\r\n            throw new Error('Missing notebook metadata merge data.');\r\n        }\r\n        // This will check whether metadata is valid JSON.\r\n        // Validation of compatibility vs notebook format\r\n        // will happen on server side.\r\n        return JSON.parse(this.merged.remote);\r\n    }\r\n    createDiffModel(diff) {\r\n        if (diff && diff.length > 0) {\r\n            return model_1.createPatchStringDiffModel(this.base, diff);\r\n        }\r\n        else {\r\n            const baseCopy = coreutils_1.JSONExt.deepCopy(this.base);\r\n            return model_1.createDirectStringDiffModel(baseCopy, baseCopy);\r\n        }\r\n    }\r\n    createMergedDiffModel() {\r\n        return new common_1.DecisionStringDiffModel(this.base, this.decisions, [this.local, this.remote]);\r\n    }\r\n}\r\nexports.MetadataMergeModel = MetadataMergeModel;\r\n//# sourceMappingURL=metadata.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NotebookMergeModel = void 0;\r\nconst util_1 = require(\"../../common/util\");\r\nconst decisions_1 = require(\"../../merge/decisions\");\r\nconst chunking_1 = require(\"../../chunking\");\r\nconst patch_1 = require(\"../../patch\");\r\nconst cell_1 = require(\"./cell\");\r\nconst metadata_1 = require(\"./metadata\");\r\n/**\r\n * Diff model for a Jupyter Notebook\r\n */\r\nclass NotebookMergeModel {\r\n    /**\r\n     * Create a new NotebookMergeModel from a base notebook and a list of\r\n     * merge decisions.\r\n     *\r\n     * The base as well as the merge decisions are normally supplied by the\r\n     * nbdime server.\r\n     */\r\n    constructor(base, rawMergeDecisions) {\r\n        this.base = base;\r\n        let ctor = this.constructor;\r\n        let decisions = ctor.preprocessDecisions(rawMergeDecisions);\r\n        // The notebook metadata MIME type is used for determining the MIME type\r\n        // of source cells, so store it easily accessible:\r\n        let mimetype;\r\n        try {\r\n            mimetype = base.metadata.language_info.mimetype;\r\n        }\r\n        catch (e) {\r\n            // missing metadata(probably old notebook)\r\n        }\r\n        this.mimetype = mimetype || 'text/python';\r\n        this.cells = this.buildCellList(decisions);\r\n        let metadataDecs = decisions_1.filterDecisions(decisions, ['metadata']);\r\n        this.metadata = new metadata_1.MetadataMergeModel(base.metadata, metadataDecs);\r\n        this.unsavedChanges = false;\r\n    }\r\n    static preprocessDecisions(rawMergeDecisions) {\r\n        let mergeDecisions = [];\r\n        for (let rmd of rawMergeDecisions) {\r\n            mergeDecisions.push(new decisions_1.MergeDecision(rmd));\r\n        }\r\n        mergeDecisions = splitCellChunks(mergeDecisions);\r\n        mergeDecisions = splitCellRemovals(mergeDecisions);\r\n        mergeDecisions = splitCellInsertions(mergeDecisions);\r\n        mergeDecisions = splitCellListPatch(mergeDecisions);\r\n        decisions_1.resolveCommonPaths(mergeDecisions);\r\n        for (let md of mergeDecisions) {\r\n            if (md.action === 'either') {\r\n                chunking_1.labelSource(md.localDiff, { decision: md, action: 'either' });\r\n                chunking_1.labelSource(md.remoteDiff, { decision: md, action: 'either' });\r\n            }\r\n            else {\r\n                chunking_1.labelSource(md.localDiff, { decision: md, action: 'local' });\r\n                chunking_1.labelSource(md.remoteDiff, { decision: md, action: 'remote' });\r\n            }\r\n            chunking_1.labelSource(md.customDiff, { decision: md, action: 'custom' });\r\n        }\r\n        return mergeDecisions;\r\n    }\r\n    serialize() {\r\n        let nb = {};\r\n        // Simply copy all root-level fields except cells/metadata\r\n        for (let key in this.base) {\r\n            if (!util_1.valueIn(key, ['cells', 'metadata'])) {\r\n                nb[key] = this.base[key];\r\n            }\r\n        }\r\n        // Serialize metadata\r\n        nb['metadata'] = this.metadata.serialize();\r\n        // Serialzie cell list\r\n        let cells = [];\r\n        for (let c of this.cells) {\r\n            let s = c.serialize();\r\n            if (s !== null) {\r\n                cells.push(s);\r\n            }\r\n        }\r\n        nb['cells'] = cells;\r\n        // As long as base is a valid notebook, and sub-serialization is valid,\r\n        // this output should be a valid notebook.\r\n        return nb;\r\n    }\r\n    get decisions() {\r\n        let ret = [];\r\n        for (let c of this.cells) {\r\n            ret = ret.concat(c.decisions);\r\n        }\r\n        ret = ret.concat(this.metadata.decisions);\r\n        return ret;\r\n    }\r\n    get conflicts() {\r\n        let ret = [];\r\n        for (let md of this.decisions) {\r\n            if (md.conflict) {\r\n                ret.push(md);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * Correlate the different cells in the diff lists into a merge list\r\n     */\r\n    buildCellList(decisions) {\r\n        // We have to check for merge decisions on the `cells` object in\r\n        // order to check for added cells. This assumes that the common\r\n        // paths of the merge decisions have been resolved. It also assumes that\r\n        // no merge decision can have root as its common path.\r\n        // Create arrays of base value and decisions to match base cell list\r\n        let cellDecisions = [];\r\n        for (let bc of this.base.cells) {\r\n            // Create empty decisions array for now, add in below\r\n            cellDecisions.push({ base: bc, decisions: [] });\r\n        }\r\n        let insertOffset = 0;\r\n        // Assumes merge decisions come in order!\r\n        for (let md of decisions) {\r\n            let key = md.absolutePath;\r\n            if (key.length < 1 || key[0] !== 'cells') {\r\n                continue; // Only care about decisions on cells here\r\n            }\r\n            if (util_1.arraysEqual(key, ['cells'])) {\r\n                let idx = null;\r\n                let insertion = false;\r\n                for (let di of md.diffs) {\r\n                    // Ensure diff has exactly one item:\r\n                    if (!di || di.length === 0) {\r\n                        continue;\r\n                    }\r\n                    // All keys should be the same since we run splitCellChunks first\r\n                    idx = di[0].key;\r\n                    if (di[0].op === 'addrange') {\r\n                        // Insert entries into `cells` at idx\r\n                        let offsetIdx = insertOffset + idx;\r\n                        cellDecisions.splice(offsetIdx, 0, { base: null, decisions: [md] });\r\n                        insertOffset += 1;\r\n                        insertion = true; // flag to break outer loop\r\n                        break;\r\n                    }\r\n                    // Only checking for insertions in this loop, since insertions can\r\n                    // only be paired with other insertions.\r\n                }\r\n                if (insertion) {\r\n                    continue;\r\n                }\r\n                // If we reach this point, it is not an insertion merge!\r\n                if (idx === null) {\r\n                    throw new Error('No index could be found for merge decision!');\r\n                }\r\n                let cds = cellDecisions[idx + insertOffset].decisions;\r\n                cds.push(md);\r\n            }\r\n            else {\r\n                // Has a path into a cell\r\n                // Format specifies that these always comes before decisions that\r\n                // change the order of cells, so index is straight forward!\r\n                let idx = key[1];\r\n                let cds = cellDecisions[idx].decisions;\r\n                cds.push(md);\r\n            }\r\n        }\r\n        let cells = [];\r\n        for (let cellInfo of cellDecisions) {\r\n            cells.push(new cell_1.CellMergeModel(cellInfo.base, cellInfo.decisions, this.mimetype));\r\n        }\r\n        return cells;\r\n    }\r\n}\r\nexports.NotebookMergeModel = NotebookMergeModel;\r\nfunction isChunk(diff) {\r\n    return !!diff && diff.length === 2 &&\r\n        diff[0].key === diff[1].key;\r\n}\r\n/**\r\n * The merge format allows for chunking of sequence diffs such that one or more\r\n * entries in the diff lists have 2 entries, where the first is always an\r\n * insertion (addrange). For cells, we split these decisions in two, for easier\r\n * visualization. Note: When several diff entries have 2 entries, the second\r\n * entries are identical.\r\n */\r\nfunction splitCellChunks(mergeDecisions) {\r\n    let output = [];\r\n    for (let md of mergeDecisions) {\r\n        if (util_1.arraysEqual(md.absolutePath, ['cells'])) {\r\n            if (md.localDiff && !md.remoteDiff) {\r\n                for (let d of md.localDiff) {\r\n                    let nmd = new decisions_1.MergeDecision(md);\r\n                    nmd.localDiff = [d];\r\n                    output.push(nmd);\r\n                }\r\n            }\r\n            else if (md.remoteDiff && !md.localDiff) {\r\n                for (let d of md.remoteDiff) {\r\n                    let nmd = new decisions_1.MergeDecision(md);\r\n                    nmd.absolutePath = md.absolutePath.slice();\r\n                    nmd.remoteDiff = [d];\r\n                    output.push(nmd);\r\n                }\r\n            }\r\n            else if (isChunk(md.localDiff)) {\r\n                if (isChunk(md.remoteDiff)) {\r\n                    // Both diffs are chunks, split adds vs agreed removes\r\n                    let nmd = new decisions_1.MergeDecision(md);\r\n                    nmd.localDiff = md.localDiff.slice(0, 1);\r\n                    nmd.remoteDiff = md.remoteDiff.slice(0, 1);\r\n                    output.push(nmd);\r\n                    output.push(new decisions_1.MergeDecision(md.absolutePath.slice(), md.localDiff.slice(1), md.remoteDiff.slice(1), 'either'));\r\n                }\r\n                else {\r\n                    // Split off local\r\n                    let nmd = new decisions_1.MergeDecision(md);\r\n                    nmd.localDiff = md.localDiff.slice(0, 1);\r\n                    output.push(nmd);\r\n                    output.push(new decisions_1.MergeDecision(md.absolutePath.slice(), md.localDiff.slice(1), [], 'local', // Check for custom action first?\r\n                    md.conflict));\r\n                }\r\n            }\r\n            else if (isChunk(md.remoteDiff)) {\r\n                // Split off remote\r\n                let nmd = new decisions_1.MergeDecision(md);\r\n                nmd.remoteDiff = md.remoteDiff.slice(0, 1);\r\n                output.push(nmd);\r\n                output.push(new decisions_1.MergeDecision(md.absolutePath.slice(), [], md.remoteDiff.slice(1), 'remote', // Check for custom action first?\r\n                md.conflict));\r\n            }\r\n            else if (util_1.hasEntries(md.remoteDiff) && util_1.hasEntries(md.localDiff)) {\r\n                const ops = [md.remoteDiff[0].op, md.localDiff[0].op].sort();\r\n                if (ops.join(',') === 'addrange,removerange') {\r\n                    // Insertion and deletions on the same index are simply split\r\n                    // but both keep the conflict status\r\n                    // Just do local first (alt. do add first)\r\n                    let lmd = new decisions_1.MergeDecision(md);\r\n                    lmd.action = 'local';\r\n                    lmd.localDiff = md.localDiff.slice();\r\n                    lmd.remoteDiff = null;\r\n                    output.push(lmd);\r\n                    let rmd = new decisions_1.MergeDecision(md);\r\n                    rmd.action = 'remote';\r\n                    rmd.localDiff = null;\r\n                    rmd.remoteDiff = md.remoteDiff.slice();\r\n                    output.push(rmd);\r\n                }\r\n                else {\r\n                    output.push(md); // deepCopy?\r\n                }\r\n            }\r\n            else {\r\n                output.push(md); // deepCopy?\r\n            }\r\n        }\r\n        else {\r\n            output.push(md);\r\n        }\r\n    }\r\n    decisions_1.resolveCommonPaths(output);\r\n    return output;\r\n}\r\n/**\r\n * If any decisions have diffs on different cells, split them\r\n * up for one decision per cell.\r\n */\r\nfunction splitCellListPatch(mergeDecisions) {\r\n    let output = [];\r\n    for (let md of mergeDecisions) {\r\n        if (!util_1.arraysEqual(md.absolutePath, ['cells'])) {\r\n            output.push(md);\r\n            continue;\r\n        }\r\n        // Null out empty diffs\r\n        let dl = util_1.hasEntries(md.localDiff) ? md.localDiff : null;\r\n        let dr = util_1.hasEntries(md.remoteDiff) ? md.remoteDiff : null;\r\n        if (dl && dl.length < 2 && dr && dr.length < 2) {\r\n            // Single cell affected\r\n            output.push(md);\r\n            continue;\r\n        }\r\n        // Before this is called, we should have split up chunks\r\n        // as well as range addition/removal, so all diffs\r\n        // should have different keys\r\n        let maxlen = Math.max(dl ? dl.length : 0, dr ? dr.length : 0);\r\n        for (let i = 0; i < maxlen; ++i) {\r\n            let subdl = dl && i < dl.length ? [dl[i]] : null;\r\n            let subdr = dr && i < dr.length ? [dr[i]] : null;\r\n            output.push(new decisions_1.MergeDecision(md.absolutePath.slice(), subdl, subdr, md.action, md.conflict));\r\n        }\r\n    }\r\n    return util_1.stableSort(output, decisions_1.decisionSortKey);\r\n}\r\n/**\r\n * Split \"removerange\" diffs on cell list level into individual decisions!\r\n */\r\nfunction splitCellRemovals(mergeDecisions) {\r\n    let output = [];\r\n    let makeSplitPart = function (md, key, local, remote) {\r\n        let newMd = new decisions_1.MergeDecision(md.absolutePath.slice(), null, null, md.action, md.conflict);\r\n        let newDiff = [{\r\n                key: key,\r\n                op: 'removerange',\r\n                length: 1\r\n            }];\r\n        console.assert(local || remote);\r\n        if (local) {\r\n            newMd.localDiff = newDiff;\r\n        }\r\n        if (remote) {\r\n            newMd.remoteDiff = newDiff;\r\n        }\r\n        return newMd;\r\n    };\r\n    for (let md of mergeDecisions) {\r\n        if (!util_1.arraysEqual(md.absolutePath, ['cells'])) {\r\n            output.push(md);\r\n            continue;\r\n        }\r\n        let dl = util_1.hasEntries(md.localDiff) ? md.localDiff[md.localDiff.length - 1] : null;\r\n        let dr = util_1.hasEntries(md.remoteDiff) ? md.remoteDiff[md.remoteDiff.length - 1] : null;\r\n        // TODO: Does it make sense to split on custom?\r\n        if (dl && !dr || dr && !dl) {\r\n            // One-way diff\r\n            let d = (dl ? dl : dr);\r\n            if (d.op === 'removerange' && d.length > 1) {\r\n                // Found a one-way diff to split!\r\n                for (let i = 0; i < d.length; ++i) {\r\n                    output.push(makeSplitPart(md, d.key + i, !!dl, !!dr));\r\n                }\r\n            }\r\n            else {\r\n                // Not a removerange type:\r\n                output.push(md);\r\n                continue;\r\n            }\r\n        }\r\n        else if (dr && dl) {\r\n            // Two way diff, keys need to be matched\r\n            if (dl.op !== 'removerange' && dr.op !== 'removerange') {\r\n                // Not a removerange type:\r\n                output.push(md);\r\n                continue;\r\n            }\r\n            else if (dl.op === dr.op) {\r\n                // Both sides have removerange, just match keys/length\r\n                // Note: Assume that ranges have overlap, since they are in one decision\r\n                let klStart = dl.key;\r\n                let krStart = dr.key;\r\n                let start = Math.min(klStart, krStart);\r\n                let klEnd = klStart + dl.length;\r\n                let krEnd = krStart + dr.length;\r\n                let end = Math.max(klEnd, krEnd);\r\n                for (let i = start; i < end; ++i) {\r\n                    let local = i >= klStart && i < klEnd;\r\n                    let remote = i >= krStart && i < krEnd;\r\n                    output.push(makeSplitPart(md, i, local, remote));\r\n                }\r\n            }\r\n            else {\r\n                // One side has removerange, the other a patch op (implied)\r\n                let remLocal = dl.op === 'removerange';\r\n                let rOp = (remLocal ? dl : dr);\r\n                let pOp = (remLocal ? dr : dl);\r\n                console.assert(pOp.op === 'patch');\r\n                let pidx = pOp.key;\r\n                let start = rOp.key;\r\n                for (let i = start; i < start + rOp.length; ++i) {\r\n                    let newMd = makeSplitPart(md, i, remLocal, !remLocal);\r\n                    if (i === pidx) {\r\n                        if (remLocal) {\r\n                            newMd.remoteDiff = [pOp];\r\n                        }\r\n                        else {\r\n                            newMd.localDiff = [pOp];\r\n                        }\r\n                    }\r\n                    output.push(newMd);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Split \"addrange\" diffs on cell list level into individual decisions!\r\n * Also splits two-way insertions into two individual ones.\r\n */\r\nfunction splitCellInsertions(mergeDecisions) {\r\n    let output = [];\r\n    let makeSplitPart = function (md, value, local, remote) {\r\n        let newMd = new decisions_1.MergeDecision(md.absolutePath.slice(), null, null, md.action, md.conflict);\r\n        if ((local && !util_1.hasEntries(md.localDiff)) || (!local && !util_1.hasEntries(md.remoteDiff))) {\r\n            throw new Error('Invalid input: ' + md);\r\n        }\r\n        let key = (local ? md.localDiff : md.remoteDiff)[0].key;\r\n        let newDiff = [{\r\n                key: key,\r\n                op: 'addrange',\r\n                valuelist: [value]\r\n            }];\r\n        console.assert(local || remote);\r\n        if (local) {\r\n            newMd.localDiff = newDiff;\r\n        }\r\n        if (remote) {\r\n            newMd.remoteDiff = newDiff;\r\n        }\r\n        return newMd;\r\n    };\r\n    for (let md of mergeDecisions) {\r\n        // Just push decisions not on cells list:\r\n        if (!util_1.arraysEqual(md.absolutePath, ['cells'])) {\r\n            output.push(md);\r\n            continue;\r\n        }\r\n        // Check wether all diffs are pure addrange\r\n        let correctType = true;\r\n        if (md.localDiff) {\r\n            for (let dl of md.localDiff) {\r\n                if (dl.op !== 'addrange') {\r\n                    correctType = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (md.remoteDiff) {\r\n            for (let dl of md.remoteDiff) {\r\n                if (dl.op !== 'addrange') {\r\n                    correctType = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!correctType) {\r\n            output.push(md);\r\n            continue;\r\n        }\r\n        let dl = md.localDiff && md.localDiff.length === 1 ? md.localDiff[0] : null;\r\n        let dr = md.remoteDiff && md.remoteDiff.length === 1 ? md.remoteDiff[0] : null;\r\n        if (dl && !dr || dr && !dl) {\r\n            // One-way diff\r\n            let d = (dl ? dl : dr);\r\n            let insert = d.valuelist;\r\n            for (let v of insert) {\r\n                output.push(makeSplitPart(md, v, !!dl, !!dr));\r\n            }\r\n        }\r\n        else if (dl && dr) {\r\n            // Two way diff\r\n            // First, check if both insertions are equal!\r\n            let eq = patch_1.stringify(dl.valuelist) === patch_1.stringify(dr.valuelist);\r\n            if (eq) {\r\n                // Split to one decision per cell\r\n                for (let c of dl.valuelist) {\r\n                    output.push(makeSplitPart(md, c, true, true));\r\n                }\r\n            }\r\n            else {\r\n                // Next, check decision for ruling on order (e.g.\r\n                // local_then_remote, which we will use as the default).\r\n                let start = dl.key;\r\n                console.assert(start === dr.key);\r\n                if (md.action === 'remote_then_local') {\r\n                    // Only case where we need to switch order!\r\n                    for (let c of dr.valuelist) {\r\n                        const part = makeSplitPart(md, c, false, true);\r\n                        part.action = 'remote';\r\n                        output.push(part);\r\n                    }\r\n                    for (let c of dl.valuelist) {\r\n                        const part = makeSplitPart(md, c, true, false);\r\n                        part.action = 'local';\r\n                        output.push(part);\r\n                    }\r\n                }\r\n                else {\r\n                    for (let c of dl.valuelist) {\r\n                        const part = makeSplitPart(md, c, true, false);\r\n                        part.action = 'local';\r\n                        output.push(part);\r\n                    }\r\n                    for (let c of dr.valuelist) {\r\n                        const part = makeSplitPart(md, c, false, true);\r\n                        part.action = 'remote';\r\n                        output.push(part);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return output;\r\n}\r\n//# sourceMappingURL=notebook.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PatchObjectHelper = void 0;\r\nconst util_1 = require(\"../common/util\");\r\nclass PatchObjectHelper {\r\n    constructor(base, diff) {\r\n        this._diffLUT = {};\r\n        let diffKeys = [];\r\n        if (diff) {\r\n            for (let d of diff) {\r\n                diffKeys.push(d.key);\r\n                this._diffLUT[d.key] = d;\r\n            }\r\n        }\r\n        this._diffKeys = diffKeys;\r\n        this.baseKeys = _objectKeys(base);\r\n    }\r\n    isDiffKey(key) {\r\n        return util_1.valueIn(key, this._diffKeys);\r\n    }\r\n    getDiffEntry(key) {\r\n        return this._diffLUT[key];\r\n    }\r\n    /**\r\n     * Whether there any dict entries after the current add/remove diff op.\r\n     *\r\n     * Note that if the current op is a remove op, it does not take into\r\n     * account any entries added below it. Similarly, if the current op is\r\n     * an add op it does not take into account any entries that are\r\n     * removed after it.\r\n     *\r\n     * Assumes current key is a diff key to either an add or remove op.\r\n     * @returns {boolean}\r\n     */\r\n    entriesAfterCurrentAddRem() {\r\n        if (this._currentIsAddition === undefined) {\r\n            throw new Error('Current op is not an add or remove op');\r\n        }\r\n        // Check for unchanged entries after, or any changed entries\r\n        // that are not of the OPPOSITE add/remove type:\r\n        let oppositeOp = this._currentIsAddition ? 'remove' : 'add';\r\n        for (let key of this._remainingKeys) {\r\n            if (!util_1.valueIn(key, this._diffKeys)) {\r\n                // There remains unchanged entries after\r\n                return true;\r\n            }\r\n            else if (this._diffLUT[key].op !== oppositeOp) {\r\n                // There remains entries that should not be ignored\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    iter() {\r\n        this._remainingKeys = this.baseKeys.concat(this._diffKeys).filter(util_1.unique).sort();\r\n        return this;\r\n    }\r\n    keys() {\r\n        return this;\r\n    }\r\n    next() {\r\n        let key = this._remainingKeys.shift();\r\n        if (key && util_1.valueIn(key, this._diffKeys)) {\r\n            let op = this._diffLUT[key].op;\r\n            if (op === 'add') {\r\n                this._currentIsAddition = true;\r\n            }\r\n            else if (op === 'remove') {\r\n                this._currentIsAddition = false;\r\n            }\r\n            else {\r\n                this._currentIsAddition = undefined;\r\n            }\r\n        }\r\n        return key;\r\n    }\r\n    clone() {\r\n        let c = new PatchObjectHelper({}, null);\r\n        c.baseKeys = this.baseKeys;\r\n        c._diffKeys = this._diffKeys;\r\n        c._currentIsAddition = this._currentIsAddition;\r\n        c._diffLUT = this._diffLUT;\r\n        c._remainingKeys = this._remainingKeys.slice();\r\n        return c;\r\n    }\r\n}\r\nexports.PatchObjectHelper = PatchObjectHelper;\r\n/**\r\n * The keys present in a Object class. Equivalent to Object.keys, but with a\r\n * fallback if not defined.\r\n */\r\nlet _objectKeys = Object.keys || function (obj) {\r\n    let has = Object.prototype.hasOwnProperty || function () { return true; };\r\n    let keys = [];\r\n    for (let key in obj) {\r\n        if (has.call(obj, key)) {\r\n            keys.push(key);\r\n        }\r\n    }\r\n    return keys;\r\n};\r\n//# sourceMappingURL=common.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.patch = void 0;\r\nconst coreutils_1 = require(\"@lumino/coreutils\");\r\nconst util_1 = require(\"../common/util\");\r\nconst diffentries_1 = require(\"../diff/diffentries\");\r\nconst stringified_1 = require(\"./stringified\");\r\nfunction patch(base, diff) {\r\n    if (typeof base === 'string') {\r\n        return stringified_1.patchString(base, diff, 0, false).remote;\r\n    }\r\n    else if (Array.isArray(base)) {\r\n        const baseCopy = coreutils_1.JSONExt.deepCopy(base);\r\n        return patchSequence(baseCopy, diff);\r\n    }\r\n    else if (typeof base === 'number' || typeof base === 'boolean') {\r\n        throw new TypeError('Cannot patch an atomic type: ' + typeof base);\r\n    }\r\n    else if (base === null) {\r\n        throw new TypeError('Cannot patch a null base!');\r\n    }\r\n    else {\r\n        const baseCopy = coreutils_1.JSONExt.deepCopy(base);\r\n        return patchObject(baseCopy, diff);\r\n    }\r\n}\r\nexports.patch = patch;\r\n/**\r\n * Patch an array according to the diff.\r\n */\r\nfunction patchSequence(base, diff) {\r\n    if (diff === null) {\r\n        return util_1.deepCopy(base);\r\n    }\r\n    // The patched sequence to build and return\r\n    let patched = [];\r\n    // Index into obj, the next item to take unless diff says otherwise\r\n    let take = 0;\r\n    let skip = 0;\r\n    for (let e of diff) {\r\n        // Check for valid entry first:\r\n        diffentries_1.validateSequenceOp(base, e);\r\n        let index = e.key;\r\n        // Take values from base not mentioned in diff, up to not including\r\n        // index\r\n        for (let value of base.slice(take, index)) {\r\n            patched.push(util_1.deepCopy(value));\r\n        }\r\n        if (e.op === 'addrange') {\r\n            // Extend with new values directly\r\n            patched = patched.concat(e.valuelist);\r\n            skip = 0;\r\n        }\r\n        else if (e.op === 'removerange') {\r\n            // Delete a number of values by skipping\r\n            skip = e.length;\r\n        }\r\n        else if (e.op === 'patch') {\r\n            patched.push(patch(base[index], e.diff));\r\n            skip = 1;\r\n        }\r\n        // Skip the specified number of elements, but never decrement take.\r\n        // Note that take can pass index in diffs with repeated +/- on the\r\n        // same index, i.e. [op_remove(index), op_add(index, value)]\r\n        take = Math.max(take, index + skip);\r\n    }\r\n    // Take values at end not mentioned in diff\r\n    for (let value of base.slice(take)) {\r\n        patched.push(util_1.deepCopy(value));\r\n    }\r\n    return patched;\r\n}\r\n/**\r\n * Patch an object (dictionary type) according to the diff.\r\n */\r\nfunction patchObject(base, diff) {\r\n    let patched = {};\r\n    let keysToCopy = Object.keys(base);\r\n    if (diff) {\r\n        for (let e of diff) {\r\n            // Check for valid entry first:\r\n            diffentries_1.validateObjectOp(base, e, keysToCopy);\r\n            let key = e.key;\r\n            if (e.op === 'add') {\r\n                patched[key] = e.value;\r\n            }\r\n            else if (e.op === 'remove') {\r\n                keysToCopy.splice(keysToCopy.indexOf(key), 1); // Remove key\r\n            }\r\n            else if (e.op === 'replace') {\r\n                keysToCopy.splice(keysToCopy.indexOf(key), 1); // Remove key\r\n                patched[key] = e.value;\r\n            }\r\n            else if (e.op === 'patch') {\r\n                keysToCopy.splice(keysToCopy.indexOf(key), 1); // Remove key\r\n                patched[key] = patch(base[key], e.diff);\r\n            }\r\n        }\r\n    }\r\n    // Take items not mentioned in diff\r\n    for (let key of keysToCopy) {\r\n        patched[key] = util_1.deepCopy(base[key]);\r\n    }\r\n    return patched;\r\n}\r\n//# sourceMappingURL=generic.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./common\"), exports);\r\n__exportStar(require(\"./generic\"), exports);\r\n__exportStar(require(\"./stringified\"), exports);\r\n//# sourceMappingURL=index.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.patchString = exports.patchStringified = exports.stringifyAndBlankNull = exports.stringify = void 0;\r\nconst algorithm_1 = require(\"@lumino/algorithm\");\r\nconst util_1 = require(\"../common/util\");\r\nconst util_2 = require(\"../diff/util\");\r\nconst diffentries_1 = require(\"../diff/diffentries\");\r\nconst range_1 = require(\"../diff/range\");\r\nconst common_1 = require(\"./common\");\r\nconst stableStringify = require(\"json-stable-stringify\");\r\n/**\r\n * Ordered stringify. Wraps stableStringify(), but handles indentation.\r\n *\r\n * indentFirst controls whether the first line is indented as well, and\r\n * defaults to true.\r\n */\r\nfunction stringify(values, level, indentFirst = true) {\r\n    let ret = stableStringify(values, { space: util_2.JSON_INDENT });\r\n    if (level) {\r\n        ret = _indent(ret, level, indentFirst);\r\n    }\r\n    return ret;\r\n}\r\nexports.stringify = stringify;\r\n/**\r\n * Ensure value is string, if not stringify.\r\n */\r\nfunction stringifyAndBlankNull(value) {\r\n    if (typeof value === 'string') {\r\n        return value;\r\n    }\r\n    else if (value === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return stringify(value);\r\n    }\r\n}\r\nexports.stringifyAndBlankNull = stringifyAndBlankNull;\r\n/**\r\n * Patch a stringified JSON object.\r\n *\r\n * Returns the stringified value of the patched JSON object, as well as\r\n * position ranges indicating which parts of the string that was added or\r\n * removed.\r\n *\r\n * Internally, this builds the ranges based on the actual supplied diff, which\r\n * can therefore differ from a straigh string-based diff of stringified JSON\r\n * objects.\r\n */\r\nfunction patchStringified(base, diff, level) {\r\n    if (level === undefined) {\r\n        level = 0;\r\n    }\r\n    if (typeof base === 'string') {\r\n        // Only stringify if level > 0\r\n        let stringifyPatch = level > 0;\r\n        return patchString(base, diff, level, stringifyPatch);\r\n    }\r\n    else if (Array.isArray(base)) {\r\n        return patchStringifiedList(base, diff, level);\r\n    }\r\n    else if (typeof base === 'number' || typeof base === 'boolean') {\r\n        throw new TypeError('Cannot patch an atomic type: ' + typeof base);\r\n    }\r\n    else if (base === null) {\r\n        throw new TypeError('Cannot patch a null base!');\r\n    }\r\n    else {\r\n        return patchStringifiedObject(base, diff, level);\r\n    }\r\n}\r\nexports.patchStringified = patchStringified;\r\n/**\r\n * Patch a string according to a line based diff\r\n */\r\nfunction patchString(base, diff, level, stringifyPatch) {\r\n    let additions = [];\r\n    let deletions = [];\r\n    let baseIndex = 0;\r\n    // Short-circuit if diff is empty\r\n    if (diff === null) {\r\n        return { remote: stringifyPatch ? stringify(base, level) : base,\r\n            additions: additions,\r\n            deletions: deletions };\r\n    }\r\n    // Diffs are line-based, so flatten to character based:\r\n    diff = util_2.flattenStringDiff(base, diff);\r\n    // Index into obj, the next item to take unless diff says otherwise\r\n    let take = 0;\r\n    let skip = 0;\r\n    let remote = '';\r\n    for (let e of diff) {\r\n        let index = e.key;\r\n        // Take values from obj not mentioned in diff, up to not including index\r\n        let unchanged = base.slice(take, index);\r\n        remote += unchanged;\r\n        baseIndex += unchanged.length;\r\n        if (e.op === 'addrange') {\r\n            let added = e.valuelist;\r\n            additions.push(new range_1.DiffRangeRaw(remote.length, added.length, e.source));\r\n            remote += added;\r\n            skip = 0;\r\n        }\r\n        else if (e.op === 'removerange') {\r\n            // Delete a number of values by skipping\r\n            skip = e.length;\r\n            deletions.push(new range_1.DiffRangeRaw(baseIndex, skip, e.source));\r\n            baseIndex += skip;\r\n        }\r\n        take = Math.max(take, index + skip);\r\n    }\r\n    remote += base.slice(take, base.length);\r\n    if (stringifyPatch) {\r\n        // The remote string should be stringified\r\n        remote = stringify(remote, level);\r\n        // Shift all indices by indentation + one to account for opening quote\r\n        _offsetRanges(level * util_2.JSON_INDENT.length + 1, additions, deletions);\r\n        // Offset ranges by JSON escaping\r\n        _adjustRangesByJSONEscapes(remote, additions);\r\n        _adjustRangesByJSONEscapes(stringify(base, level), deletions);\r\n    }\r\n    return { remote: remote, additions: additions, deletions: deletions };\r\n}\r\nexports.patchString = patchString;\r\n/**\r\n * Patch a stringified object according to the object diff\r\n */\r\nfunction patchStringifiedObject(base, diff, level) {\r\n    let remote = '';\r\n    let additions = [];\r\n    let deletions = [];\r\n    let postfix = ',\\n';\r\n    let baseIndex = 0;\r\n    // Short-circuit if diff is empty\r\n    if (diff === null) {\r\n        return { remote: stringify(base, level),\r\n            additions: additions,\r\n            deletions: deletions };\r\n    }\r\n    // Object is dict. As diff keys should be unique, create map for easy processing\r\n    let helper = new common_1.PatchObjectHelper(base, diff);\r\n    let baseKeys = helper.baseKeys.slice();\r\n    algorithm_1.each(helper.keys(), key => {\r\n        let keyString = _makeKeyString(key, level + 1);\r\n        if (helper.isDiffKey(key)) {\r\n            // Entry has a change\r\n            let e = helper.getDiffEntry(key);\r\n            // Check for valid entry first:\r\n            diffentries_1.validateObjectOp(base, e, baseKeys);\r\n            if (util_1.valueIn(e.op, ['add', 'replace', 'remove'])) {\r\n                // Replace is simply an add + remove, but without modifying keystring\r\n                let isReplace = e.op === 'replace';\r\n                if (e.op === 'add' || e.op === 'replace') {\r\n                    let valr = stringify(e.value, level + 1, false) +\r\n                        postfix;\r\n                    let start = remote.length;\r\n                    let length = valr.length;\r\n                    // Modify range depending on add or replace:\r\n                    if (isReplace) {\r\n                        start += keyString.length;\r\n                    }\r\n                    else {\r\n                        length += keyString.length;\r\n                    }\r\n                    // Check if postfix should be included or not\r\n                    if (isReplace || !helper.entriesAfterCurrentAddRem()) {\r\n                        length -= postfix.length;\r\n                        if (e.op === 'add') {\r\n                            length += 1; // Newline will still be added\r\n                        }\r\n                    }\r\n                    additions.push(new range_1.DiffRangeRaw(start, length, e.source));\r\n                    remote += keyString + valr;\r\n                }\r\n                if (e.op === 'remove' || e.op === 'replace') {\r\n                    let valb = stringify(base[key], level + 1, false) + postfix;\r\n                    let start = baseIndex;\r\n                    let length = valb.length;\r\n                    // Modify range depending on remove or replace:\r\n                    if (isReplace) {\r\n                        start += keyString.length;\r\n                    }\r\n                    else {\r\n                        length += keyString.length;\r\n                    }\r\n                    // Check if postfix should be included or not\r\n                    if (isReplace || !helper.entriesAfterCurrentAddRem()) {\r\n                        length -= postfix.length;\r\n                        if (e.op === 'remove') {\r\n                            length += 1; // Newline will still be removed\r\n                        }\r\n                    }\r\n                    deletions.push(new range_1.DiffRangeRaw(start, length, e.source));\r\n                    baseIndex += keyString.length + valb.length;\r\n                    baseKeys.splice(baseKeys.indexOf(key), 1);\r\n                }\r\n            }\r\n            else if (e.op === 'patch') {\r\n                let pd = patchStringified(base[key], e.diff, level + 1);\r\n                let valr = pd.remote;\r\n                // Insert key string:\r\n                valr = keyString + valr.slice((level + 1) * util_2.JSON_INDENT.length) +\r\n                    postfix;\r\n                let offset = remote.length + keyString.length -\r\n                    (level + 1) * util_2.JSON_INDENT.length;\r\n                _offsetRanges(offset, pd.additions, pd.deletions);\r\n                remote += valr;\r\n                additions = additions.concat(pd.additions);\r\n                deletions = deletions.concat(pd.deletions);\r\n                baseIndex += stringify(base[key], level + 1, false).length +\r\n                    keyString.length + postfix.length;\r\n                baseKeys.splice(baseKeys.indexOf(key), 1);\r\n            }\r\n        }\r\n        else {\r\n            // Entry unchanged\r\n            let val = keyString + stringify(base[key], level + 1, false) + postfix;\r\n            remote += val;\r\n            baseIndex += val.length;\r\n        }\r\n    });\r\n    // Stringify correctly\r\n    if (remote.slice(remote.length - postfix.length) === postfix) {\r\n        remote = remote.slice(0, remote.length - postfix.length);\r\n    }\r\n    let indent = util_1.repeatString(util_2.JSON_INDENT, level);\r\n    remote = indent + '{\\n' + remote + '\\n' + indent + '}';\r\n    _offsetRanges(indent.length + 2, additions, deletions);\r\n    return { remote: remote, additions: additions, deletions: deletions };\r\n}\r\n/**\r\n * Patch a stringified list according to the list diff\r\n */\r\nfunction patchStringifiedList(base, diff, level) {\r\n    let remote = '';\r\n    let additions = [];\r\n    let deletions = [];\r\n    let baseIndex = 0; // Position in base string\r\n    let postfix = ',\\n';\r\n    // Short-circuit if diff is empty\r\n    if (diff === null) {\r\n        return { remote: stringify(base, level),\r\n            additions: additions,\r\n            deletions: deletions };\r\n    }\r\n    // Index into obj, the next item to take unless diff says otherwise\r\n    let take = 0;\r\n    let skip = 0;\r\n    for (let e of diff) {\r\n        // Check for valid entry first:\r\n        diffentries_1.validateSequenceOp(base, e);\r\n        let index = e.key;\r\n        // Take values from obj not mentioned in diff, up to not including index\r\n        for (; index > take; take++) {\r\n            let unchanged = stringify(base[take], level + 1) + postfix;\r\n            remote += unchanged;\r\n            baseIndex += unchanged.length;\r\n        }\r\n        if (e.op === 'addrange') {\r\n            // Extend with new values directly\r\n            let val = '';\r\n            for (let v of e.valuelist) {\r\n                val += stringify(v, level + 1) + postfix;\r\n            }\r\n            let difflen = val.length;\r\n            if (index === base.length) {\r\n                difflen -= 1; // No comma if at end\r\n            }\r\n            additions.push(new range_1.DiffRangeRaw(remote.length, difflen, e.source));\r\n            remote += val;\r\n            skip = 0;\r\n        }\r\n        else if (e.op === 'removerange') {\r\n            // Delete a number of values by skipping\r\n            let val = '';\r\n            let len = e.length;\r\n            for (let i = index; i < index + len; i++) {\r\n                val += stringify(base[i], level + 1) + postfix;\r\n            }\r\n            let difflen = val.length;\r\n            if (len + index === base.length) {\r\n                difflen -= 1; // No comma if at end\r\n            }\r\n            deletions.push(new range_1.DiffRangeRaw(baseIndex, difflen, e.source));\r\n            baseIndex += val.length;\r\n            skip = e.length;\r\n        }\r\n        else if (e.op === 'patch') {\r\n            let pd = patchStringified(base[index], e.diff, level + 1);\r\n            skip = 1;\r\n            let val = pd.remote + postfix;\r\n            _offsetRanges(remote.length, pd.additions, pd.deletions);\r\n            additions = additions.concat(pd.additions);\r\n            deletions = deletions.concat(pd.deletions);\r\n            baseIndex += stringify(base[index], level + 1).length;\r\n            remote += val;\r\n        }\r\n        // Skip the specified number of elements, but never decrement take.\r\n        // Note that take can pass index in diffs with repeated +/- on the\r\n        // same index, i.e. [op_remove(index), op_add(index, value)]\r\n        take = Math.max(take, index + skip);\r\n    }\r\n    // Take unchanged values at end\r\n    for (; base.length > take; take++) {\r\n        remote += stringify(base[take], level + 1) + postfix;\r\n    }\r\n    // Stringify correctly\r\n    if (remote.slice(remote.length - postfix.length) === postfix) {\r\n        remote = remote.slice(0, remote.length - postfix.length);\r\n    }\r\n    let indent = util_1.repeatString(util_2.JSON_INDENT, level);\r\n    remote = indent + '[\\n' + remote + '\\n' + indent + ']';\r\n    _offsetRanges(indent.length + 2, additions, deletions);\r\n    return { remote: remote, additions: additions, deletions: deletions };\r\n}\r\n// Utility functions and variables:\r\n/**\r\n * Indent a (multiline) string with `JSON_INDENT` given number of times.\r\n *\r\n * indentFirst controls whether the first line is indented as well.\r\n */\r\nfunction _indent(str, levels, indentFirst) {\r\n    indentFirst = indentFirst !== false;\r\n    let lines = str.split('\\n');\r\n    let ret = new Array(lines.length);\r\n    if (!indentFirst) {\r\n        ret[0] = lines[0];\r\n    }\r\n    for (let i = indentFirst ? 0 : 1; i < lines.length; i++) {\r\n        ret[i] = util_1.repeatString(util_2.JSON_INDENT, levels) + lines[i];\r\n    }\r\n    return ret.join('\\n');\r\n}\r\n/** Make a string for a stringified dict key, with indentation */\r\nfunction _makeKeyString(key, level) {\r\n    return util_1.repeatString(util_2.JSON_INDENT, level) + '\"' + key + '\": ';\r\n}\r\n/** Shift all positions in given ranges by same amount */\r\nfunction _offsetRanges(offset, additions, deletions) {\r\n    for (let a of additions) {\r\n        a.offset(offset);\r\n    }\r\n    for (let d of deletions) {\r\n        d.offset(offset);\r\n    }\r\n}\r\n/**\r\n * Adjust diff ranges to compensate for increased length occupied by characters\r\n * escaped during JSON stringification.\r\n */\r\nfunction _adjustRangesByJSONEscapes(jsonString, ranges) {\r\n    // First find all escaped characters, and expansion coefficients\r\n    let simpleEscapes = [\r\n        '\\\\\\\"', '\\\\\\\\', '\\\\/', '\\\\b', '\\\\f', '\\\\n', '\\\\r', '\\\\t'\r\n    ];\r\n    let surrogateUnicodes = /\\\\uD[89A-Fa-f][0-9a-fA-F]{2}\\\\uD[c-fC-F][0-9a-fA-F]{2}/g;\r\n    // Look for unicodes that are not part of a surrogate:\r\n    let unicodes = /(?!\\\\uD[c-fC-F][0-9a-fA-F]{2})\\\\u(?!D[89A-Fa-f][0-9a-fA-F]{2})\\d{4}/g;\r\n    const SIMPLE_ESCAPE_LENGTH = 2;\r\n    const UNICODE_ESCAPE_LENGTH = 6;\r\n    const SURROGATE_ESCAPE_LENGTH = 12;\r\n    // Equal sized arrays identifying location and expansion\r\n    // factor of each escaped character:\r\n    let indices = [];\r\n    let expansions = [];\r\n    for (let e of simpleEscapes) {\r\n        let len = JSON.parse('\"' + e + '\"').length;\r\n        let i = 0;\r\n        while (1) {\r\n            i = jsonString.indexOf(e, i);\r\n            if (i < 0) {\r\n                break;\r\n            }\r\n            indices.push(i);\r\n            expansions.push(SIMPLE_ESCAPE_LENGTH - len);\r\n            i++;\r\n        }\r\n    }\r\n    let match;\r\n    while ((match = unicodes.exec(jsonString)) !== null) {\r\n        indices.push(match.index);\r\n        expansions.push(UNICODE_ESCAPE_LENGTH -\r\n            JSON.parse('\"' + match[0] + '\"').length);\r\n    }\r\n    while ((match = surrogateUnicodes.exec(jsonString)) !== null) {\r\n        indices.push(match.index);\r\n        expansions.push(SURROGATE_ESCAPE_LENGTH -\r\n            JSON.parse('\"' + match[0] + '\"').length);\r\n    }\r\n    // Now adjust differences\r\n    // TODO: Optimize this algorithm?\r\n    for (let i = 0; i < indices.length; i++) {\r\n        for (let r of ranges) {\r\n            let idx = indices[i];\r\n            let exp = expansions[i];\r\n            if (r.from > idx) {\r\n                r.from += exp;\r\n            }\r\n            if (r.to > idx) {\r\n                r.to += exp;\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=stringified.js.map","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.requestMerge = exports.requestMergePromise = exports.requestDiff = exports.requestDiffPromise = exports.requestApiJson = exports.requestApiJsonPromise = exports.requestApi = exports.requestApiPromise = exports.handleError = void 0;\r\nconst url_1 = require(\"@jupyterlab/coreutils/lib/url\");\r\nconst services_1 = require(\"@jupyterlab/services\");\r\nfunction urlRStrip(target) {\r\n    if (target.slice(-1) === '/') {\r\n        return target.slice(0, -1);\r\n    }\r\n    return target;\r\n}\r\nfunction handleError(response) {\r\n    if (!response.ok) {\r\n        if (response.status === 500 && response.body) {\r\n            return response.text().then((body) => {\r\n                throw new Error(body);\r\n            });\r\n        }\r\n        throw new Error(`${response.status} ${response.statusText}`);\r\n    }\r\n    return Promise.resolve(response);\r\n}\r\nexports.handleError = handleError;\r\n/**\r\n * Make a request to an nbdime API.\r\n */\r\nfunction requestApiPromise(baseUrl, apiPath, argument) {\r\n    const url = url_1.URLExt.join(urlRStrip(baseUrl), apiPath);\r\n    let request = {\r\n        method: 'POST',\r\n        body: JSON.stringify(argument),\r\n    };\r\n    let settings = services_1.ServerConnection.makeSettings();\r\n    return services_1.ServerConnection.makeRequest(url, request, settings)\r\n        .then(handleError);\r\n}\r\nexports.requestApiPromise = requestApiPromise;\r\n/**\r\n * Make a request to an nbdime API.\r\n */\r\nfunction requestApi(baseUrl, apiPath, argument, onComplete, onFail) {\r\n    requestApiPromise(baseUrl, apiPath, argument)\r\n        .then(onComplete, (error) => {\r\n        onFail(error.message);\r\n    });\r\n}\r\nexports.requestApi = requestApi;\r\n/**\r\n * Make a POST request passing a JSON argument and receiving a JSON result.\r\n */\r\nfunction requestApiJsonPromise(baseUrl, apiPath, argument) {\r\n    return requestApiPromise(baseUrl, apiPath, argument)\r\n        .then((response) => {\r\n        return response.json();\r\n    });\r\n}\r\nexports.requestApiJsonPromise = requestApiJsonPromise;\r\n/**\r\n * Make a POST request passing a JSON argument and receiving a JSON result.\r\n */\r\nfunction requestApiJson(baseUrl, apiPath, argument, callback, onError) {\r\n    requestApiJsonPromise(baseUrl, apiPath, argument)\r\n        .then(callback, (error) => {\r\n        onError(error.message);\r\n    });\r\n}\r\nexports.requestApiJson = requestApiJson;\r\n/**\r\n * Make a diff request for the given base/remote specifiers (filenames)\r\n */\r\nfunction requestDiffPromise(base, remote, baseUrl) {\r\n    return requestApiJsonPromise(baseUrl, 'api/diff', { base, remote });\r\n}\r\nexports.requestDiffPromise = requestDiffPromise;\r\n/**\r\n * Make a diff request for the given base/remote specifiers (filenames)\r\n */\r\nfunction requestDiff(base, remote, baseUrl, onComplete, onFail) {\r\n    requestApiJson(baseUrl, 'api/diff', { base, remote }, onComplete, onFail);\r\n}\r\nexports.requestDiff = requestDiff;\r\n/**\r\n * Make a diff request for the given base/remote specifiers (filenames)\r\n */\r\nfunction requestMergePromise(base, local, remote, baseUrl) {\r\n    return requestApiJsonPromise(baseUrl, 'api/merge', { base, local, remote });\r\n}\r\nexports.requestMergePromise = requestMergePromise;\r\n/**\r\n * Make a diff request for the given base/remote specifiers (filenames)\r\n */\r\nfunction requestMerge(base, local, remote, baseUrl, onComplete, onFail) {\r\n    requestApiJson(baseUrl, 'api/merge', { base, local, remote }, onComplete, onFail);\r\n}\r\nexports.requestMerge = requestMerge;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FlexLayout = void 0;\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2016, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nconst algorithm_1 = require(\"@lumino/algorithm\");\r\nconst messaging_1 = require(\"@lumino/messaging\");\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\n/**\r\n * The class name added to left-to-right flex layout parents.\r\n */\r\nconst LEFT_TO_RIGHT_CLASS = 'p-mod-left-to-right';\r\n/**\r\n * The class name added to right-to-left flex layout parents.\r\n */\r\nconst RIGHT_TO_LEFT_CLASS = 'p-mod-right-to-left';\r\n/**\r\n * The class name added to top-to-bottom flex layout parents.\r\n */\r\nconst TOP_TO_BOTTOM_CLASS = 'p-mod-top-to-bottom';\r\n/**\r\n * The class name added to bottom-to-top flex layout parents.\r\n */\r\nconst BOTTOM_TO_TOP_CLASS = 'p-mod-bottom-to-top';\r\n/**\r\n * A layout which arranges its widgets in a single row or column.\r\n *\r\n * Use the direction attribute to specify the layout direction.\r\n *\r\n * The sizing and flow of the children can be specified in several ways:\r\n *  - The container level properties `minimumSpacing`,`wrap`,\r\n *    `justifyContent`, `alignItems` and `alignContent`.\r\n *  - The stretching of the children in the layout direction either by:\r\n *    - Setting individual values per widget of grow/shrink/basis by\r\n *      `setGrow`, `setShrink` and `setSizeBasis`.\r\n *    - Using the convenience attributes `evenSizes` or `stretchType`.\r\n *  - Manually by CSS using the flexbox CSS attribute for the classes\r\n *    `p-FlexPanel` and `p-FlexPanel-child`.\r\n */\r\nclass FlexLayout extends widgets_1.PanelLayout {\r\n    /**\r\n     * Construct a new flex layout.\r\n     *\r\n     * @param options - The options for initializing the layout.\r\n     */\r\n    constructor(options = {}) {\r\n        super();\r\n        /**\r\n         * Manage the display order of the widgets via the flexbox\r\n         * attribute `order`, while keeping the internal DOM order\r\n         * intact.\r\n         */\r\n        this.order = null;\r\n        this._wrap = false;\r\n        this._minimumSpacing = 4;\r\n        this._justifyContent = null;\r\n        this._alignItems = null;\r\n        this._alignContent = null;\r\n        this._dirty = false;\r\n        this._direction = 'top-to-bottom';\r\n        this._stretchType = null;\r\n        this._evenSizes = false;\r\n        if (options.direction !== void 0) {\r\n            this._direction = options.direction;\r\n        }\r\n        if (options.minimumSpacing !== void 0) {\r\n            this._minimumSpacing = Private.clampSpacing(options.minimumSpacing);\r\n        }\r\n        if (options.wrap !== void 0) {\r\n            this._wrap = options.wrap;\r\n        }\r\n        if (options.justifyContent !== void 0) {\r\n            this._justifyContent = options.justifyContent;\r\n        }\r\n        if (options.alignItems !== void 0) {\r\n            this._alignItems = options.alignItems;\r\n        }\r\n        if (options.alignContent !== void 0) {\r\n            this._alignContent = options.alignContent;\r\n        }\r\n        if (options.stretchType !== void 0) {\r\n            this._stretchType = options.stretchType;\r\n        }\r\n        if (options.evenSizes !== void 0) {\r\n            this._evenSizes = options.evenSizes;\r\n        }\r\n    }\r\n    /**\r\n     * Get the layout direction for the flex layout.\r\n     */\r\n    get direction() {\r\n        return this._direction;\r\n    }\r\n    /**\r\n     * Set the layout direction for the flex layout.\r\n     */\r\n    set direction(value) {\r\n        if (this._direction === value) {\r\n            return;\r\n        }\r\n        this._direction = value;\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        Private.toggleDirection(this.parent, value);\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * Get the minimum inter-element spacing for the flex layout.\r\n     */\r\n    get minimumSpacing() {\r\n        return this._minimumSpacing;\r\n    }\r\n    /**\r\n     * Set the minimum inter-element spacing for the flex layout.\r\n     */\r\n    set minimumSpacing(value) {\r\n        value = Private.clampSpacing(value);\r\n        if (this._minimumSpacing === value) {\r\n            return;\r\n        }\r\n        this._minimumSpacing = value;\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        this.parent.node.style.flexWrap = value ? 'wrap' : 'nowrap';\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * Whether the layout should wrap its children if they do not all fit in\r\n     * column/row.\r\n     */\r\n    get wrap() {\r\n        return this._wrap;\r\n    }\r\n    set wrap(value) {\r\n        if (this._wrap === value) {\r\n            return;\r\n        }\r\n        this._wrap = value;\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        this.parent.node.style.flexWrap = value ? 'wrap' : 'nowrap';\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * Controls how to align children in the direction of the layout.\r\n     */\r\n    get justifyContent() {\r\n        return this._justifyContent;\r\n    }\r\n    set justifyContent(value) {\r\n        if (this._justifyContent === value) {\r\n            return;\r\n        }\r\n        this._justifyContent = value;\r\n        let flex = Private.translateFlexString(value);\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        this.parent.node.style.justifyContent = flex;\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * Controls how to align children in the direction perpendicular to that\r\n     * of the layout (for a horizontal layout the will be the vertical align,\r\n     * and vice-versa).\r\n     */\r\n    get alignItems() {\r\n        return this._alignItems;\r\n    }\r\n    set alignItems(value) {\r\n        if (this._alignItems === value) {\r\n            return;\r\n        }\r\n        this._alignItems = value;\r\n        let flex = Private.translateFlexString(value);\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        this.parent.node.style.alignItems = flex;\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * If layout is set to wrap, this defines how the wrapped lines will be\r\n     * aligned in relation ro each other.\r\n     */\r\n    get alignContent() {\r\n        return this._alignContent;\r\n    }\r\n    set alignContent(value) {\r\n        if (this._alignContent === value) {\r\n            return;\r\n        }\r\n        this._alignContent = value;\r\n        let flex = Private.translateFlexString(value);\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        this.parent.node.style.alignContent = flex;\r\n        // Setting has no effect unless wrap is true, but\r\n        // check against false to accomodate unset scenario\r\n        // where CSS rules might apply:\r\n        if (this._wrap !== false) {\r\n            this.parent.fit();\r\n        }\r\n    }\r\n    /**\r\n     * Describe how to stretch items to fit into flex panel.\r\n     */\r\n    get stretchType() {\r\n        return this._stretchType;\r\n    }\r\n    set stretchType(value) {\r\n        if (this._stretchType === value) {\r\n            return;\r\n        }\r\n        this._stretchType = value;\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * If set, the free space is distributed such that the\r\n     * children are all the same size. Defaults to `false`.\r\n     *\r\n     * ### Notes\r\n     * Setting this to `true` will make the layout\r\n     * ignore the setting of `stretchType`.\r\n     */\r\n    get evenSizes() {\r\n        return this._evenSizes;\r\n    }\r\n    set evenSizes(value) {\r\n        if (this._evenSizes === value) {\r\n            return;\r\n        }\r\n        this._evenSizes = value;\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * Determine whether direction is a horizontal one\r\n     */\r\n    isHorizontal() {\r\n        return this.direction === 'right-to-left' || this.direction === 'left-to-right';\r\n    }\r\n    /**\r\n     * Determine whether direction is a vertical one\r\n     */\r\n    isVertical() {\r\n        return !this.isHorizontal();\r\n    }\r\n    /**\r\n     * Perform layout initialization which requires the parent widget.\r\n     */\r\n    init() {\r\n        Private.toggleDirection(this.parent, this.direction);\r\n        super.init();\r\n    }\r\n    /**\r\n     * Attach a widget to the parent's DOM node.\r\n     *\r\n     * @param index - The current index of the widget in the layout.\r\n     *\r\n     * @param widget - The widget to attach to the parent.\r\n     *\r\n     * #### Notes\r\n     * This is a reimplementation of the superclass method.\r\n     */\r\n    attachWidget(index, widget) {\r\n        // Call super implmentation\r\n        super.attachWidget(index, widget);\r\n        // Set order, if applicable\r\n        if (this.order) {\r\n            algorithm_1.ArrayExt.insert(this.order, index, widget);\r\n        }\r\n        // Post a layout request for the parent widget.\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * Change a widget's display order.\r\n     *\r\n     * @param fromIndex - The previous index of the widget in the layout.\r\n     *\r\n     * @param toIndex - The current index of the widget in the layout.\r\n     *\r\n     * @param widget - The widget to move in the parent.\r\n     *\r\n     * #### Notes\r\n     * This is a reimplementation of the superclass method.\r\n     */\r\n    moveWidget(fromIndex, toIndex, widget) {\r\n        if (fromIndex !== toIndex) {\r\n            // Change the order of the widget.\r\n            if (!this.order) {\r\n                this.order = this.widgets.slice();\r\n            }\r\n            algorithm_1.ArrayExt.move(this.order, fromIndex, toIndex);\r\n            this._dirty = true;\r\n        }\r\n        // Post an update request for the parent widget.\r\n        this.parent.update();\r\n    }\r\n    /**\r\n     * Detach a widget from the parent's DOM node.\r\n     *\r\n     * @param index - The previous index of the widget in the layout.\r\n     *\r\n     * @param widget - The widget to detach from the parent.\r\n     *\r\n     * #### Notes\r\n     * This is a reimplementation of the superclass method.\r\n     */\r\n    detachWidget(index, widget) {\r\n        // Remove widget from order vector\r\n        if (this.order) {\r\n            let i = 0;\r\n            for (; i < this.order.length; ++i) {\r\n                if (widget === this.order[i]) {\r\n                    algorithm_1.ArrayExt.removeAt(this.order, i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // Call super implmentation\r\n        super.detachWidget(index, widget);\r\n        // Post a layout request for the parent widget.\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * A message handler invoked on an `'after-show'` message.\r\n     */\r\n    onAfterShow(msg) {\r\n        super.onAfterShow(msg);\r\n        this.parent.update();\r\n    }\r\n    /**\r\n     * A message handler invoked on an `'after-attach'` message.\r\n     */\r\n    onAfterAttach(msg) {\r\n        super.onAfterAttach(msg);\r\n        Private.toggleDirection(this.parent, this._direction);\r\n        let style = this.parent.node.style;\r\n        style.flexWrap = this._wrap ? 'wrap' : 'nowrap';\r\n        style.justifyContent = Private.translateFlexString(this._justifyContent) || '';\r\n        style.alignContent = Private.translateFlexString(this._alignContent) || '';\r\n        style.alignItems = Private.translateFlexString(this._alignItems) || '';\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * A message handler invoked on a `'child-shown'` message.\r\n     */\r\n    onChildShown(msg) {\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * A message handler invoked on a `'child-hidden'` message.\r\n     */\r\n    onChildHidden(msg) {\r\n        this.parent.fit();\r\n    }\r\n    /**\r\n     * A message handler invoked on a `'resize'` message.\r\n     */\r\n    onResize(msg) {\r\n        if (this.parent.isVisible) {\r\n            this._update();\r\n        }\r\n    }\r\n    /**\r\n     * A message handler invoked on an `'update-request'` message.\r\n     */\r\n    onUpdateRequest(msg) {\r\n        if (this.parent.isVisible) {\r\n            this._update();\r\n        }\r\n    }\r\n    /**\r\n     * A message handler invoked on a `'fit-request'` message.\r\n     */\r\n    onFitRequest(msg) {\r\n        if (this.parent.isAttached) {\r\n            this._fit();\r\n        }\r\n    }\r\n    /**\r\n     * Fit the layout to the total size required by the widgets.\r\n     */\r\n    _fit() {\r\n        // Set the dirty flag to ensure only a single update occurs.\r\n        this._dirty = true;\r\n        // Notify the ancestor that it should fit immediately. This may\r\n        // cause a resize of the parent, fulfilling the required update.\r\n        let ancestor = this.parent.parent;\r\n        if (ancestor) {\r\n            messaging_1.MessageLoop.sendMessage(ancestor, widgets_1.Widget.Msg.FitRequest);\r\n        }\r\n        // If the dirty flag is still set, the parent was not resized.\r\n        // Trigger the required update on the parent widget immediately.\r\n        if (this._dirty) {\r\n            messaging_1.MessageLoop.sendMessage(this.parent, widgets_1.Widget.Msg.UpdateRequest);\r\n        }\r\n    }\r\n    /**\r\n     * Update the layout position and size of the widgets.\r\n     *\r\n     * The parent offset dimensions should be `-1` if unknown.\r\n     */\r\n    _update() {\r\n        // Clear the dirty flag to indicate the update occurred.\r\n        this._dirty = false;\r\n        // Bail early if there are no widgets to layout.\r\n        let widgets = this.order || this.widgets;\r\n        if (widgets.length === 0) {\r\n            return;\r\n        }\r\n        // Set spacing by margins\r\n        let spacing = this.minimumSpacing.toString() + 'px';\r\n        if (this.isHorizontal()) {\r\n            for (let i = 0; i < widgets.length - 1; ++i) {\r\n                widgets[i].node.style.marginRight = spacing;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < widgets.length - 1; ++i) {\r\n                widgets[i].node.style.marginBottom = spacing;\r\n            }\r\n        }\r\n        // Update stretch styles if set\r\n        if (this._evenSizes || this.stretchType) {\r\n            let basis = null;\r\n            let grow = null;\r\n            let shrink = null;\r\n            if (this._evenSizes) {\r\n                basis = 0;\r\n                grow = 1;\r\n            }\r\n            else {\r\n                switch (this._stretchType) {\r\n                    case 'grow':\r\n                        // Allow items to grow from default size\r\n                        grow = 1;\r\n                        shrink = 0;\r\n                        break;\r\n                    case 'shrink':\r\n                        // Allow items to shrink from default size\r\n                        grow = 0;\r\n                        shrink = 1;\r\n                        break;\r\n                    case 'both':\r\n                        // Both growing and shrinking is allowed.\r\n                        grow = 1;\r\n                        shrink = 1;\r\n                        break;\r\n                    case 'fixed':\r\n                        // Disallow both growing and shrinking.\r\n                        grow = 0;\r\n                        shrink = 0;\r\n                        break;\r\n                    default:\r\n                        throw new TypeError('Invalid stretch type: ' + this._stretchType);\r\n                }\r\n            }\r\n            for (let i = 0; i < widgets.length; ++i) {\r\n                let style = widgets[i].node.style;\r\n                if (basis !== null) {\r\n                    // Can only be 0, so no unit needed\r\n                    style.flexBasis = basis.toString();\r\n                }\r\n                if (grow !== null) {\r\n                    style.flexGrow = grow.toString();\r\n                }\r\n                if (shrink !== null) {\r\n                    style.flexShrink = shrink.toString();\r\n                }\r\n            }\r\n        }\r\n        // Update display order\r\n        for (let i = 0; i < widgets.length; ++i) {\r\n            let widget = widgets[i];\r\n            widget.node.style.order = this.order ? i.toString() : '';\r\n        }\r\n    }\r\n}\r\nexports.FlexLayout = FlexLayout;\r\n/**\r\n * The namespace for the `FlexLayout` class statics.\r\n */\r\n(function (FlexLayout) {\r\n    /**\r\n     * Get the flex-grow number of the widget\r\n     */\r\n    function getGrow(widget) {\r\n        let value = widget.node.style.flexGrow;\r\n        return value ? parseInt(value, 10) : null;\r\n    }\r\n    FlexLayout.getGrow = getGrow;\r\n    /**\r\n     * Set the flex-grow number of the widget\r\n     */\r\n    function setGrow(widget, value, fit = true) {\r\n        widget.node.style.flexGrow = value === null ? '' : value.toString();\r\n        if (fit && widget.parent) {\r\n            widget.parent.fit();\r\n        }\r\n    }\r\n    FlexLayout.setGrow = setGrow;\r\n    /**\r\n     * Get the flex-shrink number of the widget\r\n     */\r\n    function getShrink(widget) {\r\n        let value = widget.node.style.flexShrink;\r\n        return value ? parseInt(value, 10) : null;\r\n    }\r\n    FlexLayout.getShrink = getShrink;\r\n    /**\r\n     * Set the flex-shrink number of the widget\r\n     */\r\n    function setShrink(widget, value, fit = true) {\r\n        widget.node.style.flexShrink = value === null ? '' : value.toString();\r\n        if (fit && widget.parent) {\r\n            widget.parent.fit();\r\n        }\r\n    }\r\n    FlexLayout.setShrink = setShrink;\r\n    /**\r\n     * Get the size basis of the widget.\r\n     */\r\n    function getSizeBasis(widget) {\r\n        let value = widget.node.style.flexBasis;\r\n        if (value === 'auto') {\r\n            return 'auto';\r\n        }\r\n        else {\r\n            return value ? parseInt(value.replace('px', ''), 10) : null;\r\n        }\r\n    }\r\n    FlexLayout.getSizeBasis = getSizeBasis;\r\n    /**\r\n     * Set the size basis of the widget.\r\n     *\r\n     * This is the value used for calculating how to distribute positive\r\n     * (grow) or negatie (shrink) free space in a flex box. The value\r\n     * `'auto'` uses the `width`/`height` field of the box as the basis.\r\n     */\r\n    function setSizeBasis(widget, value, fit = true) {\r\n        if (value === 'auto') {\r\n            widget.node.style.flexBasis = value;\r\n        }\r\n        else if (value === null) {\r\n            widget.node.style.flexBasis = '';\r\n        }\r\n        else {\r\n            widget.node.style.flexBasis = value.toString() + 'px';\r\n        }\r\n        if (fit && widget.parent) {\r\n            widget.parent.fit();\r\n        }\r\n    }\r\n    FlexLayout.setSizeBasis = setSizeBasis;\r\n})(FlexLayout = exports.FlexLayout || (exports.FlexLayout = {}));\r\n/**\r\n * The namespace for the private module data.\r\n */\r\nvar Private;\r\n(function (Private) {\r\n    /**\r\n     * Test whether a direction has horizontal orientation.\r\n     */\r\n    function isHorizontal(dir) {\r\n        return dir === 'left-to-right' || dir === 'right-to-left';\r\n    }\r\n    Private.isHorizontal = isHorizontal;\r\n    function translateFlexString(value) {\r\n        if (value === 'start' || value === 'end') {\r\n            value = 'flex-' + value;\r\n        }\r\n        return value;\r\n    }\r\n    Private.translateFlexString = translateFlexString;\r\n    /**\r\n     * Toggle the CSS direction class for the given widget.\r\n     */\r\n    function toggleDirection(widget, dir) {\r\n        widget.toggleClass(LEFT_TO_RIGHT_CLASS, dir === 'left-to-right');\r\n        widget.toggleClass(RIGHT_TO_LEFT_CLASS, dir === 'right-to-left');\r\n        widget.toggleClass(TOP_TO_BOTTOM_CLASS, dir === 'top-to-bottom');\r\n        widget.toggleClass(BOTTOM_TO_TOP_CLASS, dir === 'bottom-to-top');\r\n    }\r\n    Private.toggleDirection = toggleDirection;\r\n    /**\r\n     * Clamp a spacing value to an integer >= 0.\r\n     */\r\n    function clampSpacing(value) {\r\n        return Math.max(0, Math.floor(value));\r\n    }\r\n    Private.clampSpacing = clampSpacing;\r\n})(Private || (Private = {}));\r\n//# sourceMappingURL=flexlayout.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FlexPanel = void 0;\r\nconst flexlayout_1 = require(\"./flexlayout\");\r\nconst widgets_1 = require(\"@lumino/widgets\");\r\n/**\r\n * The class name added to FlexPanel instances.\r\n */\r\nconst FLEX_PANEL_CLASS = 'p-FlexPanel';\r\n/**\r\n * The class name added to a FlexPanel child.\r\n */\r\nconst CHILD_CLASS = 'p-FlexPanel-child';\r\n/**\r\n * A panel which arranges its widgets in a single row or column.\r\n *\r\n * Use the direction attribute to specify the layout direction.\r\n *\r\n * The sizing and flow of the children can be specified in several ways:\r\n *  - The container level properties `minimumSpacing`,`wrap`,\r\n *    `justifyContent`, `alignItems` and `alignContent`.\r\n *  - The stretching of the children in the layout direction either by:\r\n *    - Setting individual values per widget of grow/shrink/basis by\r\n *      `setGrow`, `setShrink` and `setSizeBasis`.\r\n *    - Using the convenience attributes `evenSizes` or `stretchType`.\r\n *  - Manually by CSS using the flexbox CSS attribute for the classes\r\n *    `p-FlexPanel` and `p-FlexPanel-child`.\r\n *\r\n * #### Notes\r\n * This class provides a convenience wrapper around a [[FlexLayout]].\r\n */\r\nclass FlexPanel extends widgets_1.Panel {\r\n    /**\r\n     * Construct a new flex panel.\r\n     *\r\n     * @param options - The options for initializing the flex panel.\r\n     */\r\n    constructor(options = {}) {\r\n        super({ layout: Private.createLayout(options) });\r\n        if (!options.layout) {\r\n            if (options.minimumSpacing !== void 0) {\r\n                this.minimumSpacing = options.minimumSpacing;\r\n            }\r\n            if (options.direction !== void 0) {\r\n                this.direction = options.direction;\r\n            }\r\n        }\r\n        this.addClass(FLEX_PANEL_CLASS);\r\n    }\r\n    /**\r\n     * The layout direction for the flex panel.\r\n     */\r\n    get direction() {\r\n        return this.layout.direction;\r\n    }\r\n    ;\r\n    set direction(value) {\r\n        this.layout.direction = value;\r\n    }\r\n    /**\r\n     * The minimum inter-element spacing for the flex panel.\r\n     */\r\n    get minimumSpacing() {\r\n        return this.layout.minimumSpacing;\r\n    }\r\n    ;\r\n    set minimumSpacing(value) {\r\n        this.layout.minimumSpacing = value;\r\n    }\r\n    /**\r\n     * Whether the layout should wrap its children if they do not all fit in\r\n     * column/row.\r\n     */\r\n    get wrap() {\r\n        return this.layout.wrap;\r\n    }\r\n    ;\r\n    set wrap(value) {\r\n        this.layout.wrap = value;\r\n    }\r\n    /**\r\n     * Controls how to align children in the direction of the layout.\r\n     */\r\n    get justifyContent() {\r\n        return this.layout.justifyContent;\r\n    }\r\n    ;\r\n    set justifyContent(value) {\r\n        this.layout.justifyContent = value;\r\n    }\r\n    /**\r\n     * Controls how to align children in the direction perpendicular to that\r\n     * of the layout (for a horizontal layout the will be the vertical align,\r\n     * and vice-versa).\r\n     */\r\n    get alignItems() {\r\n        return this.layout.alignItems;\r\n    }\r\n    ;\r\n    set alignItems(value) {\r\n        this.layout.alignItems = value;\r\n    }\r\n    /**\r\n     * If layout is set to wrap, this defines how the wrapped lines will be\r\n     * aligned in relation ro each other.\r\n     */\r\n    get alignContent() {\r\n        return this.layout.alignContent;\r\n    }\r\n    ;\r\n    set alignContent(value) {\r\n        this.layout.alignContent = value;\r\n    }\r\n    /**\r\n     * Describe how to stretch items to fit into flex panel.\r\n     */\r\n    get stretchType() {\r\n        return this.layout.stretchType;\r\n    }\r\n    ;\r\n    set stretchType(value) {\r\n        this.layout.stretchType = value;\r\n    }\r\n    /**\r\n     * If set, the free space is distributed such that the\r\n     * children are all the same size. Defaults to `false`.\r\n     *\r\n     * ### Notes\r\n     * Setting this to `true` will make the layout\r\n     * ignore the setting of `stretchType`.\r\n     */\r\n    get evenSizes() {\r\n        return this.layout.evenSizes;\r\n    }\r\n    ;\r\n    set evenSizes(value) {\r\n        this.layout.evenSizes = value;\r\n    }\r\n    ;\r\n    /**\r\n     * A message handler invoked on a `'child-added'` message.\r\n     */\r\n    onChildAdded(msg) {\r\n        msg.child.addClass(CHILD_CLASS);\r\n    }\r\n    /**\r\n     * A message handler invoked on a `'child-removed'` message.\r\n     */\r\n    onChildRemoved(msg) {\r\n        msg.child.removeClass(CHILD_CLASS);\r\n    }\r\n    /**\r\n     * A message handler invoked on an `'after-attach'` message.\r\n     */\r\n    onAfterAttach(msg) {\r\n        super.onAfterAttach(msg);\r\n        this.fit();\r\n    }\r\n}\r\nexports.FlexPanel = FlexPanel;\r\n/**\r\n * The namespace for the `FlexPanel` class statics.\r\n */\r\n(function (FlexPanel) {\r\n    /**\r\n     * Get the flex panel grow factor for the given widget.\r\n     *\r\n     * @param widget - The widget of interest.\r\n     *\r\n     * @returns The flex panel grow factor for the widget.\r\n     */\r\n    function getGrow(widget) {\r\n        return flexlayout_1.FlexLayout.getGrow(widget);\r\n    }\r\n    FlexPanel.getGrow = getGrow;\r\n    /**\r\n     * Set the flex panel grow factor for the given widget.\r\n     *\r\n     * @param widget - The widget of interest.\r\n     *\r\n     * @param value - The value for the grow factor.\r\n     */\r\n    function setGrow(widget, value) {\r\n        flexlayout_1.FlexLayout.setGrow(widget, value);\r\n    }\r\n    FlexPanel.setGrow = setGrow;\r\n    /**\r\n     * Get the flex panel shrink factor for the given widget.\r\n     *\r\n     * @param widget - The widget of interest.\r\n     *\r\n     * @returns The flex panel shrink factor for the widget.\r\n     */\r\n    function getShrink(widget) {\r\n        return flexlayout_1.FlexLayout.getShrink(widget);\r\n    }\r\n    FlexPanel.getShrink = getShrink;\r\n    /**\r\n     * Set the flex panel shrink factor for the given widget.\r\n     *\r\n     * @param widget - The widget of interest.\r\n     *\r\n     * @param value - The value for the shrink factor.\r\n     */\r\n    function setShrink(widget, value) {\r\n        flexlayout_1.FlexLayout.setShrink(widget, value);\r\n    }\r\n    FlexPanel.setShrink = setShrink;\r\n    /**\r\n     * Get the flex panel size basis for the given widget.\r\n     *\r\n     * @param widget - The widget of interest.\r\n     *\r\n     * @returns The flex panel size basis for the widget.\r\n     */\r\n    function getSizeBasis(widget) {\r\n        return flexlayout_1.FlexLayout.getSizeBasis(widget);\r\n    }\r\n    FlexPanel.getSizeBasis = getSizeBasis;\r\n    /**\r\n     * Set the flex panel size basis for the given widget.\r\n     *\r\n     * @param widget - The widget of interest.\r\n     *\r\n     * @param value - The value for the size basis.\r\n     */\r\n    function setSizeBasis(widget, value) {\r\n        flexlayout_1.FlexLayout.setSizeBasis(widget, value);\r\n    }\r\n    FlexPanel.setSizeBasis = setSizeBasis;\r\n})(FlexPanel = exports.FlexPanel || (exports.FlexPanel = {}));\r\n/**\r\n * The namespace for the private module data.\r\n */\r\nvar Private;\r\n(function (Private) {\r\n    /**\r\n     * Create a flex layout for the given panel options.\r\n     */\r\n    function createLayout(options) {\r\n        return options.layout || new flexlayout_1.FlexLayout(options);\r\n    }\r\n    Private.createLayout = createLayout;\r\n})(Private || (Private = {}));\r\n//# sourceMappingURL=flexpanel.js.map","import api from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./collapsible.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./dragpanel.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./common.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./diff.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./merge.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./variables.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../css-loader/dist/cjs.js!./flexpanel.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}